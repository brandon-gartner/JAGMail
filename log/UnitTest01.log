[INFO ] 2020-11-18 19:22:06.801 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.819 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.821 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.823 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.824 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.825 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.826 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.828 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.831 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.832 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.834 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.835 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.837 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.838 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.839 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:22:06.840 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.772 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.786 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.787 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.789 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.790 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.791 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.793 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.794 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.795 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.796 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.798 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.799 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.800 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.802 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.803 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:24:30.804 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:37.918 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.323 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.350 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.378 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.405 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.433 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.460 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.487 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.509 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.538 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.565 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.589 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.615 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.636 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.659 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:40:38.684 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:00.521 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:00.946 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:00.979 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:01.014 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:01.042 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:01.072 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:01.095 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:01.120 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:01.142 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:01.169 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:01.194 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:01.219 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:01.240 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:01.260 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:01.280 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:45:01.298 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:07.703 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.121 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.156 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.185 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.215 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.240 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.266 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.291 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.318 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.343 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.365 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.384 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.405 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.431 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.449 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:46:08.466 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:26.256 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:26.700 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:26.733 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:26.769 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:26.798 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:26.824 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:26.848 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:26.878 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:26.896 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:26.916 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:26.934 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:26.956 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:26.985 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:27.006 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:27.035 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:49:27.061 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:15.453 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:15.933 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:15.986 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:16.014 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:16.038 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:16.067 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:16.094 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:16.116 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:16.139 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:16.177 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:16.203 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:16.228 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:16.254 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:16.282 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:16.307 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:53:16.336 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.097 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.585 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.621 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.647 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.674 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.706 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.734 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.763 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.796 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.833 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.864 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.894 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.920 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.948 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:12.975 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:13.000 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:54.301 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:54.789 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:54.827 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:54.859 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:54.885 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:54.913 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:54.939 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:54.968 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:54.999 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:55.022 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:55.049 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:55.072 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:55.097 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:55.124 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:55.154 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:54:55.182 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:59:18.858 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 19:59:19.652 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 19:59:19.654 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 19:59:20.024 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 19:59:20.032 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 19:59:20.394 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 19:59:20.395 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:59:20.784 [main] DatabaseDAO - Beginning email deletion
[WARN ] 2020-11-18 19:59:20.798 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 19:59:20.799 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 19:59:21.154 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 19:59:21.155 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 19:59:21.592 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[WARN ] 2020-11-18 19:59:21.610 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 19:59:21.611 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 19:59:21.914 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 19:59:21.914 [main] DatabaseDAO - Beginning email deletion
[WARN ] 2020-11-18 19:59:21.929 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 19:59:21.929 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 19:59:22.228 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 19:59:22.228 [main] DatabaseDAO - Beginning email deletion
[WARN ] 2020-11-18 19:59:22.244 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 19:59:22.244 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 19:59:22.664 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[WARN ] 2020-11-18 19:59:22.680 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 19:59:22.682 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 19:59:23.009 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 19:59:23.010 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 19:59:23.501 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[WARN ] 2020-11-18 19:59:23.515 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 19:59:23.516 [main] TestDatabaseMethods - @Before seeding
[ERROR] 2020-11-18 19:59:23.909 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-18 19:59:23.910 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 19:59:24.207 [main] DatabaseDAO - Beginning email deletion
[WARN ] 2020-11-18 19:59:24.221 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 19:59:24.221 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 19:59:24.546 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 19:59:24.547 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 19:59:24.991 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 19:59:24.991 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:00:03.448 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:04.273 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:04.275 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:04.616 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:04.623 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:04.991 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:04.992 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:00:05.397 [main] DatabaseDAO - Beginning email deletion
[WARN ] 2020-11-18 20:00:05.411 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:05.412 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:05.754 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:05.755 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:06.161 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[WARN ] 2020-11-18 20:00:06.178 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:06.179 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:00:06.497 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:00:06.497 [main] DatabaseDAO - Beginning email deletion
[WARN ] 2020-11-18 20:00:06.514 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:06.515 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:00:06.983 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:00:06.983 [main] DatabaseDAO - Beginning email deletion
[WARN ] 2020-11-18 20:00:06.998 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:06.999 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:07.355 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[WARN ] 2020-11-18 20:00:07.369 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:07.370 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:07.683 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:07.684 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:07.986 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[WARN ] 2020-11-18 20:00:08.004 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:08.004 [main] TestDatabaseMethods - @Before seeding
[ERROR] 2020-11-18 20:00:08.421 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-18 20:00:08.422 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:00:08.831 [main] DatabaseDAO - Beginning email deletion
[WARN ] 2020-11-18 20:00:08.846 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:08.847 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:09.217 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:09.218 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:09.544 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:09.545 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:00:48.776 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:49.648 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:49.651 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:49.996 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:50.003 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:50.373 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:50.375 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:00:50.762 [main] DatabaseDAO - Beginning email deletion
[WARN ] 2020-11-18 20:00:50.779 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:50.780 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:51.226 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:51.227 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:51.568 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[WARN ] 2020-11-18 20:00:51.587 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:51.588 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:00:51.893 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:00:51.894 [main] DatabaseDAO - Beginning email deletion
[WARN ] 2020-11-18 20:00:51.908 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:51.908 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:00:52.210 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:00:52.210 [main] DatabaseDAO - Beginning email deletion
[WARN ] 2020-11-18 20:00:52.225 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:52.225 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:52.687 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[WARN ] 2020-11-18 20:00:52.701 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:52.702 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:53.137 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:53.138 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:53.445 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[WARN ] 2020-11-18 20:00:53.458 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:53.459 [main] TestDatabaseMethods - @Before seeding
[ERROR] 2020-11-18 20:00:53.860 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-18 20:00:53.861 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:00:54.171 [main] DatabaseDAO - Beginning email deletion
[WARN ] 2020-11-18 20:00:54.184 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:54.185 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:54.657 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:54.658 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:00:54.986 [main] DatabaseDAO - Connection failed.
[INFO ] 2020-11-18 20:00:54.986 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:03:53.187 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:03:53.945 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:03:53.945 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:03:53.945 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:03:53.945 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:03:53.945 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:03:53.945 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:03:53.946 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:03:53.959 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:03:53.960 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:03:53.960 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:03:53.966 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:03:54.284 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:03:54.285 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-18 20:03:54.288 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-18 20:03:54.289 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:03:54.674 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:03:54.675 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:03:54.676 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:03:54.676 [main] DatabaseDAO - Match not found.
[ERROR] 2020-11-18 20:03:54.676 [main] DatabaseDAO - Folder does not exist.
[INFO ] 2020-11-18 20:03:54.677 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:03:54.983 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:03:55.003 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:03:55.003 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:03:55.016 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:03:55.343 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:03:55.344 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:03:55.344 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:03:55.344 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:03:55.344 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:03:55.344 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:03:55.344 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:03:55.345 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:03:55.346 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:03:55.346 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:03:55.347 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:03:55.794 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:03:55.809 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:03:55.809 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[INFO ] 2020-11-18 20:03:55.810 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:03:56.119 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:03:56.119 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:03:56.137 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:03:56.137 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:03:56.139 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:03:56.431 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:03:56.432 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:03:56.448 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:03:56.448 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:03:56.451 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:03:56.853 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:03:56.867 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:03:56.867 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[INFO ] 2020-11-18 20:03:56.868 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:03:57.182 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:03:57.183 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:03:57.184 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:03:57.184 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:03:57.694 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:03:57.708 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:03:57.708 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[INFO ] 2020-11-18 20:03:57.709 [main] TestDatabaseMethods - @Before seeding
[ERROR] 2020-11-18 20:03:58.016 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-18 20:03:58.017 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:03:58.323 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:03:58.338 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:03:58.339 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:03:58.341 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:03:58.641 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:03:58.641 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:03:58.643 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:03:58.643 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:03:59.116 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:03:59.117 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:03:59.119 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:03:59.119 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:316) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.findInboxFolder(TestDatabaseMethods.java:208) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[ERROR] 2020-11-18 20:03:59.125 [main] TestDatabaseMethods - SQLException while going to first row of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.beforeFirst(ResultSetImpl.java:426) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:322) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.findInboxFolder(TestDatabaseMethods.java:208) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:03:59.128 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:10:58.600 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:10:59.383 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:10:59.384 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:10:59.384 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:10:59.384 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:10:59.384 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:10:59.384 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:10:59.384 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:10:59.397 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:10:59.397 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:10:59.398 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:10:59.406 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:10:59.722 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:10:59.722 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-18 20:10:59.727 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-18 20:10:59.727 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:11:00.051 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:11:00.052 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:11:00.053 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:11:00.053 [main] DatabaseDAO - Match not found.
[ERROR] 2020-11-18 20:11:00.053 [main] DatabaseDAO - Folder does not exist.
[INFO ] 2020-11-18 20:11:00.055 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:11:00.446 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:11:00.465 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:11:00.465 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:11:00.475 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:11:00.778 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:11:00.778 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:11:00.779 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:11:00.779 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:11:00.779 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:11:00.779 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:11:00.779 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:11:00.780 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:11:00.780 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:11:00.780 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:11:00.781 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:11:01.714 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:11:01.733 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:11:01.733 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:11:01.735 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:11:01.735 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:316) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.testFindStringInEmail(TestDatabaseMethods.java:172) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[ERROR] 2020-11-18 20:11:01.742 [main] TestDatabaseMethods - SQLException while going to first row of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.beforeFirst(ResultSetImpl.java:426) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:322) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.testFindStringInEmail(TestDatabaseMethods.java:172) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:11:01.743 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:11:02.324 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:11:02.325 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:11:02.344 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:11:02.345 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:11:02.347 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:11:03.070 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:11:03.070 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:11:03.084 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:11:03.084 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:11:03.086 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:11:03.531 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:11:03.554 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:11:03.554 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:11:03.555 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:11:03.557 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:11:04.524 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:11:04.524 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:11:04.525 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:11:04.526 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:11:05.604 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:11:05.628 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:11:05.628 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:11:05.629 [main] DatabaseDAO - Executed query.
[WARN ] 2020-11-18 20:11:05.630 [main] TestDatabaseMethods - Failed test 1.2
[INFO ] 2020-11-18 20:11:05.631 [main] TestDatabaseMethods - @Before seeding
[ERROR] 2020-11-18 20:11:06.231 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-18 20:11:06.232 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:11:06.997 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:11:07.015 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:11:07.015 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:11:07.017 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:11:07.720 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:11:07.721 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:11:07.727 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:11:07.728 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:11:08.746 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:11:08.746 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:11:08.749 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:11:08.749 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:316) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.findInboxFolder(TestDatabaseMethods.java:208) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[ERROR] 2020-11-18 20:11:08.750 [main] TestDatabaseMethods - SQLException while going to first row of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.beforeFirst(ResultSetImpl.java:426) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:322) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.findInboxFolder(TestDatabaseMethods.java:208) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:11:08.752 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:16:10.190 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:16:11.282 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:16:11.282 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:16:11.282 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:16:11.282 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:16:11.283 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:16:11.283 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:16:11.283 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:16:11.296 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:16:11.296 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:16:11.297 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:16:11.303 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:16:12.019 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:16:12.019 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-18 20:16:12.027 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-18 20:16:12.027 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:16:12.642 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:16:12.643 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:16:12.644 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:16:12.644 [main] DatabaseDAO - Match not found.
[ERROR] 2020-11-18 20:16:12.644 [main] DatabaseDAO - Folder does not exist.
[INFO ] 2020-11-18 20:16:12.645 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:16:13.128 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:16:13.149 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:16:13.149 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:16:13.159 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:16:14.306 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:16:14.306 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:16:14.306 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:16:14.306 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:16:14.307 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:16:14.307 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:16:14.307 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:16:14.308 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:16:14.308 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:16:14.308 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:16:14.309 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:16:15.199 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:16:15.217 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:16:15.218 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:16:15.220 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:16:15.220 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:316) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.testFindStringInEmail(TestDatabaseMethods.java:172) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[ERROR] 2020-11-18 20:16:15.226 [main] TestDatabaseMethods - SQLException while going to first row of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.beforeFirst(ResultSetImpl.java:426) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:322) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.testFindStringInEmail(TestDatabaseMethods.java:172) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:16:15.228 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:16:15.862 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:16:15.862 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:16:15.892 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:16:15.892 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:16:15.896 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:16:16.580 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:16:16.580 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:16:16.597 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:16:16.598 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:16:16.600 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:16:17.599 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:16:17.615 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:16:17.615 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:16:17.616 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:16:17.617 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:16:18.259 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:16:18.260 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:16:18.260 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:16:18.261 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:16:18.780 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:16:18.794 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:16:18.794 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:16:18.795 [main] DatabaseDAO - Executed query.
[WARN ] 2020-11-18 20:16:18.795 [main] TestDatabaseMethods - Failed test 1.2
[INFO ] 2020-11-18 20:16:18.796 [main] TestDatabaseMethods - @Before seeding
[ERROR] 2020-11-18 20:16:19.633 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-18 20:16:19.634 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:16:20.637 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:16:20.649 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:16:20.650 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:16:20.652 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:16:21.685 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:16:21.685 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:16:21.686 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:16:21.687 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:16:22.435 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:16:22.435 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:16:22.437 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:16:22.437 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:316) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.findInboxFolder(TestDatabaseMethods.java:208) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[ERROR] 2020-11-18 20:16:22.439 [main] TestDatabaseMethods - SQLException while going to first row of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.beforeFirst(ResultSetImpl.java:426) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:322) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.findInboxFolder(TestDatabaseMethods.java:208) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:16:22.440 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:19:42.503 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:19:43.860 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:19:43.861 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:19:43.861 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:19:43.861 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:19:43.862 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:19:43.862 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:19:43.862 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:19:43.876 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:19:43.877 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:19:43.878 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:19:43.890 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:19:44.497 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:19:44.498 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-18 20:19:44.520 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-18 20:19:44.521 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:19:45.136 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:19:45.136 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:19:45.137 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:19:45.137 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-18 20:19:45.137 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-18 20:19:45.138 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:19:45.138 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-18 20:19:45.146 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:19:45.147 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:19:46.047 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:19:46.067 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:19:46.067 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:19:46.080 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:19:47.093 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:19:47.093 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:19:47.093 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:19:47.093 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:19:47.094 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:19:47.094 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:19:47.094 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:19:47.095 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:19:47.095 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:19:47.095 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:19:47.096 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:19:47.815 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:19:47.834 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:19:47.835 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:19:47.837 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:19:47.837 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:316) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.testFindStringInEmail(TestDatabaseMethods.java:172) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[ERROR] 2020-11-18 20:19:47.844 [main] TestDatabaseMethods - SQLException while going to first row of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.beforeFirst(ResultSetImpl.java:426) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:322) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.testFindStringInEmail(TestDatabaseMethods.java:172) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:19:47.846 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:19:48.407 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:19:48.407 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:19:48.425 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:19:48.425 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:19:48.427 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:19:49.210 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:19:49.211 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:19:49.227 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:19:49.228 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:19:49.232 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:19:50.105 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:19:50.121 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:19:50.121 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:19:50.122 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:19:50.122 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:19:50.907 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:19:50.908 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:19:50.909 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:19:50.910 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:19:51.466 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:19:51.480 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:19:51.480 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:19:51.481 [main] DatabaseDAO - Executed query.
[WARN ] 2020-11-18 20:19:51.481 [main] TestDatabaseMethods - Failed test 1.2
[INFO ] 2020-11-18 20:19:51.482 [main] TestDatabaseMethods - @Before seeding
[ERROR] 2020-11-18 20:19:52.447 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-18 20:19:52.447 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:19:53.504 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:19:53.519 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:19:53.519 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:19:53.521 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:19:54.223 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:19:54.224 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:19:54.225 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:19:54.225 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:19:55.166 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:19:55.166 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:19:55.167 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:19:55.167 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:316) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.findInboxFolder(TestDatabaseMethods.java:208) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[ERROR] 2020-11-18 20:19:55.169 [main] TestDatabaseMethods - SQLException while going to first row of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.beforeFirst(ResultSetImpl.java:426) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:322) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.findInboxFolder(TestDatabaseMethods.java:208) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:19:55.170 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:32:12.053 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:32:13.179 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:32:13.179 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:32:13.179 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:32:13.179 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:32:13.180 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:32:13.180 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:32:13.180 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:32:13.196 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:32:13.197 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:32:13.197 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:32:13.204 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:32:14.076 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:32:14.077 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-18 20:32:14.085 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-18 20:32:14.085 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:32:14.712 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:32:14.712 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:32:14.714 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:32:14.715 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-18 20:32:14.715 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-18 20:32:14.716 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:32:14.717 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-18 20:32:14.725 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:32:14.726 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:32:15.338 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:32:15.359 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:32:15.359 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:32:15.370 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:32:16.537 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:32:16.537 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:32:16.538 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:32:16.538 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:32:16.538 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:32:16.538 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:32:16.538 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:32:16.540 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:32:16.540 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:32:16.540 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:32:16.542 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:32:17.108 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:32:17.127 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:32:17.128 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:32:17.131 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:32:17.132 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:311) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.testFindStringInEmail(TestDatabaseMethods.java:172) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:32:17.140 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:32:17.922 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:32:17.922 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:32:17.938 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:32:17.938 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:32:17.942 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:32:18.805 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:32:18.805 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:32:18.822 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:32:18.822 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:32:18.839 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:32:19.613 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:32:19.627 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:32:19.627 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:32:19.628 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:32:19.629 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:32:20.193 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:32:20.193 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:32:20.194 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:32:20.195 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:32:21.140 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:32:21.156 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:32:21.156 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:32:21.157 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:32:21.157 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:311) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.testFindFakeStringInEmail(TestDatabaseMethods.java:186) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:32:21.159 [main] TestDatabaseMethods - @Before seeding
[ERROR] 2020-11-18 20:32:22.118 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-18 20:32:22.118 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:32:22.852 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:32:22.866 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:32:22.867 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:32:22.869 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:32:23.492 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:32:23.492 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:32:23.493 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:32:23.494 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:32:24.460 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:32:24.461 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:32:24.462 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:32:24.462 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:311) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.findInboxFolder(TestDatabaseMethods.java:203) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:32:24.464 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:33:17.809 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:33:18.807 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:33:18.808 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:33:18.808 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:33:18.808 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:33:18.808 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:33:18.808 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:33:18.809 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:33:18.822 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:33:18.822 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:33:18.823 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:33:18.830 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:33:19.809 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:33:19.810 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-18 20:33:19.820 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-18 20:33:19.820 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:33:20.717 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:33:20.717 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:33:20.718 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:33:20.718 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-18 20:33:20.718 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-18 20:33:20.719 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:33:20.719 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-18 20:33:20.728 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:33:20.729 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:33:21.806 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:33:21.822 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:33:21.823 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:33:21.837 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:33:22.950 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:33:22.950 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:33:22.950 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:33:22.951 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:33:22.951 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:33:22.951 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:33:22.951 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:33:22.952 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:33:22.952 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:33:22.952 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:33:22.953 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:33:23.704 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:33:23.718 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:33:23.719 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:33:23.721 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:33:23.722 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:311) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.testFindStringInEmail(TestDatabaseMethods.java:172) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:33:23.728 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:33:24.653 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:33:24.653 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:33:24.667 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:33:24.667 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:33:24.669 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:33:26.073 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:33:26.073 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:33:26.098 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:33:26.099 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:33:26.102 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:33:26.868 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:33:26.884 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:33:26.884 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:33:26.885 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:33:26.886 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:33:27.714 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:33:27.714 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:33:27.715 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:33:27.716 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:33:28.544 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:33:28.564 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:33:28.564 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:33:28.565 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:33:28.566 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:311) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.testFindFakeStringInEmail(TestDatabaseMethods.java:186) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:33:28.568 [main] TestDatabaseMethods - @Before seeding
[ERROR] 2020-11-18 20:33:29.251 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-18 20:33:29.252 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:33:30.023 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:33:30.038 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:33:30.039 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-18 20:33:30.040 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:33:30.816 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:33:30.817 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:33:30.819 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:33:30.820 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:33:31.703 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:33:31.703 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:33:31.704 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:33:31.704 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:311) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.findInboxFolder(TestDatabaseMethods.java:203) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:33:31.705 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:38:46.587 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:38:47.621 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:38:47.622 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:38:47.622 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:38:47.622 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:38:47.622 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:38:47.622 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:38:47.623 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:38:47.636 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:38:47.636 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:38:47.637 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:38:47.645 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:38:48.468 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:38:48.468 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-18 20:38:48.476 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-18 20:38:48.476 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:38:49.070 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:38:49.070 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:38:49.071 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:38:49.071 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-18 20:38:49.072 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-18 20:38:49.073 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:38:49.073 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-18 20:38:49.081 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:38:49.081 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:38:49.546 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:38:49.564 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-18 20:38:49.564 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-18 20:38:49.564 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-18 20:38:49.572 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:38:49.572 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-18 20:38:49.572 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-18 20:38:49.579 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:38:49.580 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-18 20:38:49.581 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:38:50.595 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:38:50.595 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:38:50.595 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:38:50.595 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:38:50.595 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:38:50.596 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:38:50.596 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:38:50.597 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:38:50.597 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:38:50.597 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:38:50.598 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:38:51.242 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:38:51.263 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:38:51.264 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:38:51.266 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:38:51.271 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:311) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.testFindStringInEmail(TestDatabaseMethods.java:172) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:38:51.278 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:38:52.115 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:38:52.116 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:38:52.129 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-18 20:38:52.129 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-18 20:38:52.129 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-18 20:38:52.133 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:38:52.133 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-18 20:38:52.133 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-18 20:38:52.137 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:38:52.137 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-18 20:38:52.138 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-18 20:38:52.151 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:38:52.151 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:38:52.151 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:38:52.152 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:38:52.152 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:38:52.152 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:38:52.152 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:38:52.153 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:38:52.153 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:38:52.153 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:38:52.154 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:38:53.407 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:38:53.408 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:38:53.436 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-18 20:38:53.436 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-18 20:38:53.437 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-18 20:38:53.438 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:38:53.438 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-18 20:38:53.439 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-18 20:38:53.439 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:38:53.439 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-18 20:38:53.439 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-18 20:38:53.456 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:38:53.456 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:38:53.456 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:38:53.456 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:38:53.456 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:38:53.457 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:38:53.457 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:38:53.458 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:38:53.458 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:38:53.458 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:38:53.459 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:38:54.081 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:38:54.092 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:38:54.092 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:38:54.093 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:38:54.094 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:38:54.659 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:38:54.660 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:38:54.660 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:38:54.661 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:38:55.458 [main] TestDatabaseMethods - >>>>>>>>>>FIND EMAIL TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:38:55.472 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:38:55.472 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:38:55.473 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:38:55.473 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:311) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.testFindFakeStringInEmail(TestDatabaseMethods.java:186) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:38:55.475 [main] TestDatabaseMethods - @Before seeding
[ERROR] 2020-11-18 20:38:56.318 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-18 20:38:56.319 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:38:57.082 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:38:57.100 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-18 20:38:57.100 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-18 20:38:57.100 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-18 20:38:57.101 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:38:57.102 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-18 20:38:57.102 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-18 20:38:57.103 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:38:57.103 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-18 20:38:57.103 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:38:57.638 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:38:57.638 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:38:57.639 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:38:57.640 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-18 20:38:58.382 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:38:58.383 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:38:58.384 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:38:58.384 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:311) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.findInboxFolder(TestDatabaseMethods.java:203) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:38:58.386 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 20:47:50.940 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:47:52.067 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 20:47:52.091 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:47:52.091 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:47:52.091 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:47:52.092 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:47:52.092 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:47:52.092 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:47:52.092 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:47:52.103 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:47:52.103 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:47:52.104 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:47:52.111 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:47:52.686 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 20:47:52.713 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:47:52.713 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-18 20:47:52.729 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-18 20:47:52.729 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:47:53.276 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:47:53.292 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:47:53.292 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:47:53.293 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:47:53.293 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-18 20:47:53.293 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-18 20:47:53.294 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:47:53.294 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-18 20:47:53.301 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:47:53.302 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:47:54.207 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-18 20:47:54.207 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:47:54.221 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-18 20:47:54.221 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-18 20:47:54.221 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-18 20:47:54.229 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:47:54.230 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-18 20:47:54.230 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-18 20:47:54.238 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:47:54.238 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-18 20:47:54.239 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:47:55.249 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 20:47:55.264 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:47:55.265 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:47:55.265 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:47:55.265 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:47:55.265 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:47:55.265 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:47:55.265 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:47:55.266 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:47:55.266 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:47:55.266 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:47:55.267 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:47:55.938 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 20:47:55.968 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:47:55.970 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:47:55.974 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:47:55.986 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:325) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.testFindStringInEmail(TestDatabaseMethods.java:172) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:47:55.993 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:47:56.438 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 20:47:56.438 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:47:56.438 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:47:56.451 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-18 20:47:56.451 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-18 20:47:56.451 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-18 20:47:56.454 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:47:56.454 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-18 20:47:56.455 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-18 20:47:56.458 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:47:56.458 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-18 20:47:56.458 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-18 20:47:56.470 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:47:56.470 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:47:56.470 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:47:56.470 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:47:56.470 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:47:56.470 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:47:56.470 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:47:56.471 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:47:56.471 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:47:56.471 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:47:56.472 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:47:57.350 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 20:47:57.350 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 20:47:57.350 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:47:57.367 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-18 20:47:57.367 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-18 20:47:57.367 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-18 20:47:57.368 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:47:57.368 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-18 20:47:57.368 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-18 20:47:57.369 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:47:57.369 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-18 20:47:57.369 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-18 20:47:57.382 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:47:57.382 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 20:47:57.382 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 20:47:57.382 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:47:57.383 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 20:47:57.383 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 20:47:57.383 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 20:47:57.383 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:47:57.384 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 20:47:57.384 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 20:47:57.384 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:47:58.325 [main] TestDatabaseMethods - >>>>>>>>>> FIND NULL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 20:47:58.339 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:47:58.339 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:47:58.340 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:47:58.341 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:47:59.034 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 20:47:59.046 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:47:59.046 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 20:47:59.047 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:47:59.048 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:47:59.505 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL TES T>>>>>>>>>>>>>
[TRACE] 2020-11-18 20:47:59.519 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:47:59.520 [main] DatabaseDAO - Finished setting parameters to search emails for a specified string.
[TRACE] 2020-11-18 20:47:59.521 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:47:59.521 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:325) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.testFindFakeStringInEmail(TestDatabaseMethods.java:186) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:47:59.522 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:48:00.401 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-18 20:48:00.401 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-18 20:48:00.402 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:48:01.377 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-18 20:48:01.378 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 20:48:01.389 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-18 20:48:01.389 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-18 20:48:01.390 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-18 20:48:01.390 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:48:01.391 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-18 20:48:01.391 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-18 20:48:01.391 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 20:48:01.391 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-18 20:48:01.392 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:48:02.044 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 20:48:02.057 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:48:02.058 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:48:02.058 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 20:48:02.059 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 20:48:02.677 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 20:48:02.691 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 20:48:02.692 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 20:48:02.693 [main] DatabaseDAO - Executed query.
[ERROR] 2020-11-18 20:48:02.693 [main] TestDatabaseMethods - SQLException while counting rows of ResultSet.
java.sql.SQLException: Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.result.ResultSetImpl.last(ResultSetImpl.java:1711) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.getRowCount(TestDatabaseMethods.java:325) ~[test-classes/:?]
	at ca.brandongartner.jag.mail_database_tests.TestDatabaseMethods.findInboxFolder(TestDatabaseMethods.java:204) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) ~[junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) ~[junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) ~[junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) ~[junit-4.13.jar:4.13]
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) ~[junit-vintage-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) ~[junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) [junit-platform-launcher-1.3.1.jar:1.3.1]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) [surefire-junit-platform-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.2.jar:2.22.2]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.2.jar:2.22.2]
[INFO ] 2020-11-18 20:48:02.694 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-18 21:04:22.155 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 21:04:23.139 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 21:04:23.161 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 21:04:23.162 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 21:04:23.162 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 21:04:23.162 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 21:04:23.162 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 21:04:23.162 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 21:04:23.163 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 21:04:23.175 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 21:04:23.176 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 21:04:23.176 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 21:04:23.183 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 21:04:24.024 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 21:04:24.043 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 21:04:24.043 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-18 21:04:24.049 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-18 21:04:24.049 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 21:04:24.607 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-18 21:04:24.625 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 21:04:24.625 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 21:04:24.626 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 21:04:24.626 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-18 21:04:24.626 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-18 21:04:24.627 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 21:04:24.627 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-18 21:04:24.635 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 21:04:24.635 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 21:04:25.174 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-18 21:04:25.174 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 21:04:25.190 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-18 21:04:25.190 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-18 21:04:25.190 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-18 21:04:25.198 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 21:04:25.198 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-18 21:04:25.198 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-18 21:04:25.206 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 21:04:25.206 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-18 21:04:25.207 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 21:04:26.457 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 21:04:26.469 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 21:04:26.470 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 21:04:26.470 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 21:04:26.470 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 21:04:26.470 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 21:04:26.470 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 21:04:26.470 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 21:04:26.471 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 21:04:26.471 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 21:04:26.471 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 21:04:26.472 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 21:04:26.999 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 21:04:27.000 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 21:04:27.000 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 21:04:27.016 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-18 21:04:27.016 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-18 21:04:27.017 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-18 21:04:27.024 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 21:04:27.024 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-18 21:04:27.024 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-18 21:04:27.031 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 21:04:27.031 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-18 21:04:27.032 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-18 21:04:27.047 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 21:04:27.047 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 21:04:27.047 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 21:04:27.047 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 21:04:27.047 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 21:04:27.047 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 21:04:27.048 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 21:04:27.048 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 21:04:27.048 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 21:04:27.049 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 21:04:27.049 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 21:04:27.800 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 21:04:27.800 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-18 21:04:27.800 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 21:04:27.813 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-18 21:04:27.814 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-18 21:04:27.814 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-18 21:04:27.815 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 21:04:27.815 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-18 21:04:27.815 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-18 21:04:27.816 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 21:04:27.816 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-18 21:04:27.816 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-18 21:04:27.832 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 21:04:27.832 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-18 21:04:27.832 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-18 21:04:27.832 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 21:04:27.832 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-18 21:04:27.833 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-18 21:04:27.833 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-18 21:04:27.833 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 21:04:27.833 [main] DatabaseDAO - Email was found.
[INFO ] 2020-11-18 21:04:27.834 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-18 21:04:27.834 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 21:04:28.696 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 21:04:28.708 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 21:04:28.709 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-18 21:04:28.709 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 21:04:28.713 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 21:04:29.254 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-18 21:04:29.254 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-18 21:04:29.254 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 21:04:30.154 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-18 21:04:30.155 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-18 21:04:30.166 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-18 21:04:30.167 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-18 21:04:30.167 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-18 21:04:30.167 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 21:04:30.167 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-18 21:04:30.167 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-18 21:04:30.168 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-18 21:04:30.168 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-18 21:04:30.169 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 21:04:30.903 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 21:04:30.917 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 21:04:30.917 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 21:04:30.918 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 21:04:30.918 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-18 21:04:31.636 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-18 21:04:31.649 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-18 21:04:31.649 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-18 21:04:31.658 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-18 21:04:31.658 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 17:27:45.391 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:27:46.177 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:27:46.201 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:27:46.201 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:27:46.201 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:27:46.201 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:27:46.201 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:27:46.202 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:27:46.202 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:27:46.214 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:27:46.220 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:27:46.531 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:27:46.552 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:27:46.552 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 17:27:46.556 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 17:27:46.556 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:27:46.937 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 17:27:46.964 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:27:46.965 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 17:27:46.966 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:27:46.966 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 17:27:46.967 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 17:27:46.968 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:27:46.968 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 17:27:46.972 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:27:46.972 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:27:47.281 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 17:27:47.281 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:27:47.309 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:27:47.309 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:27:47.310 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:27:47.313 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:27:47.313 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:27:47.313 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:27:47.316 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:27:47.317 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 17:27:47.317 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:27:47.621 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:27:47.634 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:27:47.634 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:27:47.634 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:27:47.634 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:27:47.634 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:27:47.635 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:27:47.635 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:27:47.636 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:27:47.636 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:27:48.124 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:27:48.124 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 17:27:48.124 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:27:48.144 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:27:48.144 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:27:48.144 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:27:48.147 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:27:48.147 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:27:48.147 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:27:48.150 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:27:48.150 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:27:48.150 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:27:48.165 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:27:48.165 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:27:48.165 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:27:48.165 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:27:48.165 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:27:48.165 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:27:48.165 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:27:48.166 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:27:48.167 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:27:48.563 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:27:48.563 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 17:27:48.563 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:27:48.576 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:27:48.576 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:27:48.576 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:27:48.576 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:27:48.577 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:27:48.577 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:27:48.577 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:27:48.578 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:27:48.578 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:27:48.594 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:27:48.595 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:27:48.595 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:27:48.595 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:27:48.595 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:27:48.595 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:27:48.595 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:27:48.596 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:27:48.597 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:27:48.926 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:27:48.953 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:27:48.953 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 17:27:48.955 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:27:48.961 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:27:49.258 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 17:27:49.258 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 17:27:49.258 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:27:49.570 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 17:27:49.570 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:27:49.583 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:27:49.583 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:27:49.583 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:27:49.584 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:27:49.584 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:27:49.584 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:27:49.584 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:27:49.585 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 17:27:49.585 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:27:50.105 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:27:50.120 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:27:50.120 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 17:27:50.121 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:27:50.121 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:27:50.490 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:27:50.502 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:27:50.503 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 17:27:50.504 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:27:50.505 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 17:34:38.196 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:34:38.950 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:34:38.976 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:34:38.976 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:34:38.976 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:34:38.976 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:34:38.976 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:34:38.977 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:34:38.977 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:34:38.989 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:34:38.997 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:34:39.295 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:34:39.317 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:34:39.318 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 17:34:39.321 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 17:34:39.321 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:34:39.709 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 17:34:39.727 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:34:39.728 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 17:34:39.729 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:34:39.729 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 17:34:39.729 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 17:34:39.730 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:34:39.731 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 17:34:39.735 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:34:39.735 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:34:40.066 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 17:34:40.066 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:34:40.083 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:34:40.083 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:34:40.083 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:34:40.087 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:34:40.088 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:34:40.088 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:34:40.091 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:34:40.091 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 17:34:40.093 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:34:40.447 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:34:40.463 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:34:40.463 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:34:40.463 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:34:40.463 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:34:40.464 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:34:40.464 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:34:40.464 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:34:40.465 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:34:40.466 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:34:40.830 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:34:40.831 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 17:34:40.831 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:34:40.845 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:34:40.845 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:34:40.846 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:34:40.848 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:34:40.849 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:34:40.849 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:34:40.852 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:34:40.853 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:34:40.853 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:34:40.870 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:34:40.870 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:34:40.870 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:34:40.870 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:34:40.871 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:34:40.871 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:34:40.871 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:34:40.872 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:34:40.873 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:34:41.260 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:34:41.260 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 17:34:41.260 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:34:41.274 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:34:41.275 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:34:41.275 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:34:41.275 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:34:41.275 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:34:41.276 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:34:41.276 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:34:41.276 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:34:41.276 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:34:41.290 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:34:41.291 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:34:41.291 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:34:41.291 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:34:41.291 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:34:41.291 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:34:41.291 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:34:41.292 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:34:41.293 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:34:41.642 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:34:41.656 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:34:41.656 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 17:34:41.657 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:34:41.660 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:34:41.945 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 17:34:41.945 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 17:34:41.945 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:34:42.241 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 17:34:42.241 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:34:42.259 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:34:42.259 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:34:42.260 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:34:42.260 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:34:42.260 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:34:42.260 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:34:42.261 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:34:42.261 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 17:34:42.262 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:34:42.725 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:34:42.740 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:34:42.740 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 17:34:42.741 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:34:42.742 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:34:43.086 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:34:43.108 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:34:43.108 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 17:34:43.113 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:34:43.113 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 17:39:05.765 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:39:06.491 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:39:06.514 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:39:06.514 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:39:06.515 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:39:06.515 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:39:06.515 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:39:06.515 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:39:06.515 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:39:06.526 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:39:06.533 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:39:06.827 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:39:06.847 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:39:06.847 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 17:39:06.850 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 17:39:06.851 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:39:07.244 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 17:39:07.265 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:39:07.266 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 17:39:07.267 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:39:07.267 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 17:39:07.267 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 17:39:07.268 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:39:07.269 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 17:39:07.272 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:39:07.273 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:39:07.566 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 17:39:07.566 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:39:07.586 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:39:07.586 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:39:07.586 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:39:07.590 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:39:07.590 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:39:07.590 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:39:07.593 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:39:07.593 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 17:39:07.594 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:39:08.002 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:39:08.017 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:39:08.017 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:39:08.017 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:39:08.017 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:39:08.017 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:39:08.018 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:39:08.018 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:39:08.019 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:39:08.020 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:39:08.413 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:39:08.413 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 17:39:08.413 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:39:08.431 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:39:08.431 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:39:08.432 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:39:08.435 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:39:08.435 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:39:08.435 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:39:08.439 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:39:08.439 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:39:08.439 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:39:08.462 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:39:08.462 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:39:08.462 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:39:08.462 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:39:08.462 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:39:08.463 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:39:08.463 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:39:08.464 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:39:08.465 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:39:08.745 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:39:08.746 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 17:39:08.746 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:39:08.759 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:39:08.759 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:39:08.760 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:39:08.760 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:39:08.760 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:39:08.760 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:39:08.761 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:39:08.761 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:39:08.761 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:39:08.776 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:39:08.776 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:39:08.776 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:39:08.776 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:39:08.776 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:39:08.777 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:39:08.777 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:39:08.778 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:39:08.779 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:39:09.178 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:39:09.205 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:39:09.205 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 17:39:09.206 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:39:09.210 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:39:09.493 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 17:39:09.493 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 17:39:09.494 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:39:09.784 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 17:39:09.784 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:39:09.816 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:39:09.816 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:39:09.817 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:39:09.820 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:39:09.821 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:39:09.821 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:39:09.823 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:39:09.824 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 17:39:09.825 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:39:10.315 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:39:10.329 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:39:10.329 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 17:39:10.330 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:39:10.330 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:39:10.608 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:39:10.620 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:39:10.621 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 17:39:10.623 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:39:10.623 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 17:41:30.667 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:41:31.486 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:41:31.509 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:41:31.509 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:41:31.510 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:41:31.510 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:41:31.510 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:41:31.510 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:41:31.510 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:41:31.521 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:41:31.529 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:41:31.834 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:41:31.853 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:41:31.853 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 17:41:31.856 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 17:41:31.857 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:41:32.145 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 17:41:32.164 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:41:32.164 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 17:41:32.165 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:41:32.165 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 17:41:32.166 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 17:41:32.167 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:41:32.167 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 17:41:32.171 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:41:32.171 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:41:32.579 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 17:41:32.580 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:41:32.595 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:41:32.595 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:41:32.596 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:41:32.599 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:41:32.599 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:41:32.600 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:41:32.603 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:41:32.603 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 17:41:32.604 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:41:32.887 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:41:32.903 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:41:32.903 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:41:32.904 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:41:32.904 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:41:32.904 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:41:32.904 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:41:32.904 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:41:32.905 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:41:32.906 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:41:33.348 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:41:33.348 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 17:41:33.348 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:41:33.367 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:41:33.367 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:41:33.367 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:41:33.370 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:41:33.371 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:41:33.371 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:41:33.374 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:41:33.374 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:41:33.374 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:41:33.388 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:41:33.388 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:41:33.388 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:41:33.388 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:41:33.388 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:41:33.388 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:41:33.389 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:41:33.390 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:41:33.390 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:41:33.664 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:41:33.665 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 17:41:33.665 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:41:33.678 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:41:33.678 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:41:33.678 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:41:33.679 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:41:33.679 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:41:33.679 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:41:33.680 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:41:33.680 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:41:33.680 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:41:33.693 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:41:33.693 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:41:33.693 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:41:33.693 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:41:33.693 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:41:33.693 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:41:33.694 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:41:33.694 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:41:33.698 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:41:34.010 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:41:34.022 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:41:34.022 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 17:41:34.023 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:41:34.026 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:41:34.425 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 17:41:34.425 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 17:41:34.426 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:41:34.751 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 17:41:34.752 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:41:34.766 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:41:34.766 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:41:34.766 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:41:34.767 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:41:34.767 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:41:34.767 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:41:34.768 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:41:34.768 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 17:41:34.768 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:41:35.193 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:41:35.205 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:41:35.205 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 17:41:35.206 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:41:35.207 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:41:35.582 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:41:35.597 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:41:35.598 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 17:41:35.600 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:41:35.601 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 17:44:00.482 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:44:01.220 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:44:01.250 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:44:01.250 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:44:01.250 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:44:01.250 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:44:01.250 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:44:01.251 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:44:01.251 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:44:01.265 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:44:01.275 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:44:01.627 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:44:01.650 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:44:01.651 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 17:44:01.654 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 17:44:01.655 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:44:01.947 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 17:44:01.963 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:44:01.964 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 17:44:01.964 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:44:01.965 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 17:44:01.965 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 17:44:01.966 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:44:01.966 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 17:44:01.969 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:44:01.970 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:44:02.284 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 17:44:02.284 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:44:02.303 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:44:02.304 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:44:02.304 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:44:02.308 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:44:02.308 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:44:02.308 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:44:02.312 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:44:02.312 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 17:44:02.313 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:44:02.733 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:44:02.749 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:44:02.750 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:44:02.750 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:44:02.750 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:44:02.750 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:44:02.750 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:44:02.750 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:44:02.751 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:44:02.752 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:44:03.152 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:44:03.152 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 17:44:03.152 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:44:03.171 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:44:03.172 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:44:03.172 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:44:03.175 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:44:03.175 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:44:03.175 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:44:03.179 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:44:03.179 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:44:03.179 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:44:03.196 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:44:03.196 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:44:03.196 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:44:03.196 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:44:03.196 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:44:03.197 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:44:03.197 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:44:03.198 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:44:03.199 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:44:03.507 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:44:03.507 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 17:44:03.507 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:44:03.522 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:44:03.522 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:44:03.523 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:44:03.523 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:44:03.523 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:44:03.523 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:44:03.525 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:44:03.525 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:44:03.525 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 17:44:03.545 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:44:03.545 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 17:44:03.545 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 17:44:03.545 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:44:03.546 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 17:44:03.546 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 17:44:03.546 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 17:44:03.547 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:44:03.547 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:44:03.815 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:44:03.830 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:44:03.830 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 17:44:03.831 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:44:03.834 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:44:04.102 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 17:44:04.102 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 17:44:04.103 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:44:04.411 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 17:44:04.411 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 17:44:04.426 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 17:44:04.426 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 17:44:04.426 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 17:44:04.427 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:44:04.427 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 17:44:04.427 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 17:44:04.428 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 17:44:04.428 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 17:44:04.429 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:44:04.934 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:44:04.948 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:44:04.948 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 17:44:04.949 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:44:04.949 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 17:44:05.307 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 17:44:05.333 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 17:44:05.334 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 17:44:05.336 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 17:44:05.336 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 20:15:44.298 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:15:45.055 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:15:45.083 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:15:45.083 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 20:15:45.084 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 20:15:45.084 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:15:45.084 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:15:45.084 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 20:15:45.084 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 20:15:45.099 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:15:45.107 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:15:45.418 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:15:45.440 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:15:45.440 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 20:15:45.443 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 20:15:45.444 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:15:45.794 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 20:15:45.815 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:15:45.816 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 20:15:45.817 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:15:45.817 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 20:15:45.818 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 20:15:45.819 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:15:45.819 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 20:15:45.823 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:15:45.823 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:15:46.122 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 20:15:46.122 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 20:15:46.140 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 20:15:46.140 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 20:15:46.140 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 20:15:46.144 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:15:46.144 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 20:15:46.144 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 20:15:46.148 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:15:46.148 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 20:15:46.149 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:15:46.593 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:15:46.610 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:15:46.611 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 20:15:46.611 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 20:15:46.611 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:15:46.611 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:15:46.611 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 20:15:46.611 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 20:15:46.612 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:15:46.613 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:15:46.928 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:15:46.929 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 20:15:46.929 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 20:15:46.945 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 20:15:46.945 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 20:15:46.945 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 20:15:46.949 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:15:46.949 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 20:15:46.949 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 20:15:46.952 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:15:46.952 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 20:15:46.952 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 20:15:46.967 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:15:46.967 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 20:15:46.967 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 20:15:46.967 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:15:46.968 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:15:46.968 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 20:15:46.968 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 20:15:46.969 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:15:46.970 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:15:47.263 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:15:47.263 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 20:15:47.263 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 20:15:47.279 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 20:15:47.279 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 20:15:47.279 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 20:15:47.280 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:15:47.280 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 20:15:47.280 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 20:15:47.281 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:15:47.281 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 20:15:47.281 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 20:15:47.298 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:15:47.298 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 20:15:47.299 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 20:15:47.299 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:15:47.299 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:15:47.299 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 20:15:47.299 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 20:15:47.300 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:15:47.301 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:15:47.610 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:15:47.624 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:15:47.624 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 20:15:47.626 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:15:47.631 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:15:48.008 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 20:15:48.008 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 20:15:48.009 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:15:48.312 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 20:15:48.313 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 20:15:48.328 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 20:15:48.328 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 20:15:48.328 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 20:15:48.329 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:15:48.329 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 20:15:48.329 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 20:15:48.330 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:15:48.330 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 20:15:48.330 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:15:48.864 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:15:48.882 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:15:48.882 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 20:15:48.883 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:15:48.884 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:15:49.175 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:15:49.187 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:15:49.187 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 20:15:49.189 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:15:49.190 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 20:59:28.266 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:59:28.978 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:59:29.010 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:59:29.010 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 20:59:29.010 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 20:59:29.010 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:59:29.010 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:59:29.011 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 20:59:29.011 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 20:59:29.024 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:59:29.031 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:59:29.385 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:59:29.406 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:59:29.407 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 20:59:29.410 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 20:59:29.410 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:59:29.698 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 20:59:29.715 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:59:29.716 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 20:59:29.717 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:59:29.717 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 20:59:29.717 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 20:59:29.718 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:59:29.718 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 20:59:29.722 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:59:29.722 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:59:29.999 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 20:59:29.999 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 20:59:30.031 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 20:59:30.031 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 20:59:30.032 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 20:59:30.035 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:59:30.036 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 20:59:30.036 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 20:59:30.039 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:59:30.039 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 20:59:30.040 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:59:30.443 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:59:30.460 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:59:30.460 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 20:59:30.460 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 20:59:30.460 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:59:30.460 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:59:30.460 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 20:59:30.461 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 20:59:30.462 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:59:30.462 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:59:30.836 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:59:30.836 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 20:59:30.836 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 20:59:30.858 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 20:59:30.858 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 20:59:30.859 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 20:59:30.865 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:59:30.865 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 20:59:30.865 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 20:59:30.874 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:59:30.874 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 20:59:30.874 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 20:59:30.891 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:59:30.891 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 20:59:30.891 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 20:59:30.891 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:59:30.891 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:59:30.891 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 20:59:30.891 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 20:59:30.893 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:59:30.894 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:59:31.173 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:59:31.174 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 20:59:31.174 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 20:59:31.186 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 20:59:31.186 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 20:59:31.186 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 20:59:31.187 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:59:31.187 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 20:59:31.187 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 20:59:31.188 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:59:31.188 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 20:59:31.188 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 20:59:31.204 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:59:31.204 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 20:59:31.204 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 20:59:31.204 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:59:31.205 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 20:59:31.205 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 20:59:31.205 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 20:59:31.206 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:59:31.206 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:59:31.560 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:59:31.572 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:59:31.572 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 20:59:31.573 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:59:31.576 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:59:31.850 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 20:59:31.850 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 20:59:31.850 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:59:32.184 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 20:59:32.184 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 20:59:32.196 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 20:59:32.197 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 20:59:32.197 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 20:59:32.197 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:59:32.197 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 20:59:32.198 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 20:59:32.198 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 20:59:32.198 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 20:59:32.199 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:59:32.754 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:59:32.778 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:59:32.778 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 20:59:32.780 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:59:32.780 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 20:59:33.151 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 20:59:33.165 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 20:59:33.165 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 20:59:33.167 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 20:59:33.168 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 21:15:28.545 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:15:29.279 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:15:29.301 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:15:29.301 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:15:29.301 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:15:29.302 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:15:29.302 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:15:29.302 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:15:29.302 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:15:29.314 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:15:29.321 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:15:29.607 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:15:29.629 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:15:29.629 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 21:15:29.632 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 21:15:29.633 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:15:29.944 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 21:15:29.964 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:15:29.964 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 21:15:29.965 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:15:29.965 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 21:15:29.966 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 21:15:29.967 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:15:29.967 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 21:15:29.976 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:15:29.976 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:15:30.303 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 21:15:30.303 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:15:30.323 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:15:30.323 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:15:30.324 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:15:30.327 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:15:30.327 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:15:30.327 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:15:30.331 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:15:30.331 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 21:15:30.331 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:15:30.605 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:15:30.619 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:15:30.619 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:15:30.619 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:15:30.619 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:15:30.619 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:15:30.619 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:15:30.619 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:15:30.620 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:15:30.621 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:15:31.169 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:15:31.170 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 21:15:31.170 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:15:31.187 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:15:31.187 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:15:31.187 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:15:31.190 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:15:31.191 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:15:31.191 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:15:31.194 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:15:31.194 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:15:31.194 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:15:31.213 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:15:31.213 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:15:31.213 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:15:31.213 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:15:31.213 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:15:31.214 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:15:31.214 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:15:31.215 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:15:31.216 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:15:31.506 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:15:31.506 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 21:15:31.506 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:15:31.522 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:15:31.522 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:15:31.522 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:15:31.523 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:15:31.523 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:15:31.523 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:15:31.523 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:15:31.524 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:15:31.524 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:15:31.540 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:15:31.540 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:15:31.540 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:15:31.540 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:15:31.540 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:15:31.540 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:15:31.540 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:15:31.541 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:15:31.541 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:15:31.831 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:15:31.845 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:15:31.845 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 21:15:31.846 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:15:31.849 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:15:32.259 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 21:15:32.259 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 21:15:32.260 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:15:32.551 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 21:15:32.552 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:15:32.566 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:15:32.566 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:15:32.566 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:15:32.567 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:15:32.567 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:15:32.568 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:15:32.568 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:15:32.568 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 21:15:32.569 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:15:33.060 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:15:33.095 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:15:33.096 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 21:15:33.098 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:15:33.099 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:15:33.457 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:15:33.478 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:15:33.478 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 21:15:33.481 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:15:33.481 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 21:19:53.019 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:19:53.717 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:19:53.741 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:19:53.741 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:19:53.742 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:19:53.742 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:19:53.742 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:19:53.742 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:19:53.743 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:19:53.753 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 21:19:53.753 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 21:19:53.753 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 21:19:53.753 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 21:19:53.754 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 21:19:53.754 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-19 21:19:53.761 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:19:54.039 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:19:54.057 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:19:54.057 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 21:19:54.060 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 21:19:54.060 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:19:54.421 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 21:19:54.444 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:19:54.444 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 21:19:54.445 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:19:54.445 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 21:19:54.446 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 21:19:54.446 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:19:54.446 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 21:19:54.450 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:19:54.451 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:19:54.747 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 21:19:54.747 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:19:54.763 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:19:54.763 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:19:54.763 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:19:54.767 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:19:54.767 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:19:54.767 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:19:54.771 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:19:54.771 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 21:19:54.772 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:19:55.052 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:19:55.065 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:19:55.065 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:19:55.065 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:19:55.065 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:19:55.065 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:19:55.065 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:19:55.066 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:19:55.066 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 21:19:55.066 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 21:19:55.067 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 21:19:55.067 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 21:19:55.067 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 21:19:55.067 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-19 21:19:55.068 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:19:55.504 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:19:55.505 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 21:19:55.505 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:19:55.535 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:19:55.535 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:19:55.536 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:19:55.539 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:19:55.539 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:19:55.539 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:19:55.542 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:19:55.542 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:19:55.542 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:19:55.555 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:19:55.556 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:19:55.556 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:19:55.556 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:19:55.556 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:19:55.556 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:19:55.556 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:19:55.558 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 21:19:55.558 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 21:19:55.558 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 21:19:55.558 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 21:19:55.558 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 21:19:55.558 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-19 21:19:55.559 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:19:55.991 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:19:55.991 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 21:19:55.991 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:19:56.016 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:19:56.017 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:19:56.017 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:19:56.019 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:19:56.019 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:19:56.019 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:19:56.020 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:19:56.020 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:19:56.020 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:19:56.048 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:19:56.048 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:19:56.048 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:19:56.048 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:19:56.048 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:19:56.048 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:19:56.048 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:19:56.049 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 21:19:56.049 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 21:19:56.050 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 21:19:56.050 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 21:19:56.050 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 21:19:56.050 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-19 21:19:56.051 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:19:56.437 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:19:56.448 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:19:56.448 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 21:19:56.449 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:19:56.452 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:19:56.827 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 21:19:56.828 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 21:19:56.829 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:19:57.114 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 21:19:57.114 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:19:57.129 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:19:57.129 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:19:57.129 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:19:57.130 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:19:57.130 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:19:57.130 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:19:57.130 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:19:57.130 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 21:19:57.131 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:19:57.556 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:19:57.574 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:19:57.574 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 21:19:57.575 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:19:57.575 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:19:58.028 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:19:58.051 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:19:58.052 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 21:19:58.055 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:19:58.055 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 21:21:32.634 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:21:33.411 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:21:33.436 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:21:33.436 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:21:33.436 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:21:33.436 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:21:33.437 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:21:33.437 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:21:33.437 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:21:33.448 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 21:21:33.449 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 21:21:33.449 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 21:21:33.449 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 21:21:33.449 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 21:21:33.449 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 21:21:33.449 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 21:21:33.449 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 21:21:33.450 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 21:21:33.450 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 21:21:33.450 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 21:21:33.450 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 21:21:33.450 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 21:21:33.458 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:21:33.740 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:21:33.758 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:21:33.758 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 21:21:33.761 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 21:21:33.762 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:21:34.124 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 21:21:34.150 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:21:34.151 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 21:21:34.152 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:21:34.152 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 21:21:34.153 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 21:21:34.154 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:21:34.154 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 21:21:34.158 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:21:34.159 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:21:34.456 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 21:21:34.456 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:21:34.475 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:21:34.475 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:21:34.475 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:21:34.478 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:21:34.478 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:21:34.478 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:21:34.481 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:21:34.482 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 21:21:34.482 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:21:34.802 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:21:34.815 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:21:34.815 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:21:34.815 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:21:34.815 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:21:34.815 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:21:34.816 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:21:34.816 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:21:34.817 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 21:21:34.817 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 21:21:34.817 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 21:21:34.818 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 21:21:34.818 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 21:21:34.818 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 21:21:34.818 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 21:21:34.818 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 21:21:34.818 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 21:21:34.818 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 21:21:34.818 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 21:21:34.818 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 21:21:34.818 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 21:21:34.819 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:21:35.278 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:21:35.278 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 21:21:35.279 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:21:35.295 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:21:35.295 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:21:35.296 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:21:35.299 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:21:35.299 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:21:35.299 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:21:35.302 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:21:35.303 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:21:35.303 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:21:35.322 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:21:35.322 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:21:35.322 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:21:35.322 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:21:35.323 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:21:35.323 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:21:35.323 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:21:35.324 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 21:21:35.324 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 21:21:35.324 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 21:21:35.324 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 21:21:35.324 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 21:21:35.324 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 21:21:35.324 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 21:21:35.325 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 21:21:35.325 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 21:21:35.325 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 21:21:35.325 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 21:21:35.325 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 21:21:35.325 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 21:21:35.326 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:21:35.611 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:21:35.611 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 21:21:35.611 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:21:35.628 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:21:35.628 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:21:35.628 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:21:35.629 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:21:35.629 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:21:35.630 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:21:35.631 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:21:35.631 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:21:35.631 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:21:35.649 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:21:35.649 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:21:35.649 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:21:35.649 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:21:35.649 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:21:35.649 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:21:35.649 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:21:35.650 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 21:21:35.650 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 21:21:35.650 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 21:21:35.650 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 21:21:35.650 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 21:21:35.651 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 21:21:35.651 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 21:21:35.651 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 21:21:35.651 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 21:21:35.651 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 21:21:35.651 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 21:21:35.651 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 21:21:35.651 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 21:21:35.652 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:21:35.925 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:21:35.939 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:21:35.939 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 21:21:35.940 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:21:35.944 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:21:36.371 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 21:21:36.371 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 21:21:36.372 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:21:36.676 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 21:21:36.676 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:21:36.691 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:21:36.692 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:21:36.692 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:21:36.692 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:21:36.693 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:21:36.693 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:21:36.693 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:21:36.693 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 21:21:36.694 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:21:37.202 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:21:37.213 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:21:37.214 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 21:21:37.215 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:21:37.215 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:21:37.485 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:21:37.500 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:21:37.500 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 21:21:37.503 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:21:37.503 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 21:51:24.506 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:51:25.250 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:51:25.272 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:51:25.272 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:51:25.272 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:51:25.272 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:51:25.273 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:51:25.273 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:51:25.273 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:51:25.285 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 21:51:25.285 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 21:51:25.285 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 21:51:25.285 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 21:51:25.285 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 21:51:25.286 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 21:51:25.286 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 21:51:25.286 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 21:51:25.286 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 21:51:25.286 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 21:51:25.287 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 21:51:25.287 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 21:51:25.287 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 21:51:25.294 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:51:25.569 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:51:25.592 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:51:25.592 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 21:51:25.596 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 21:51:25.596 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:51:25.907 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 21:51:25.923 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:51:25.923 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 21:51:25.924 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:51:25.924 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 21:51:25.925 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 21:51:25.925 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:51:25.926 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 21:51:25.929 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:51:25.930 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:51:26.310 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 21:51:26.310 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:51:26.330 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:51:26.330 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:51:26.330 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:51:26.334 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:51:26.334 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:51:26.334 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:51:26.338 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:51:26.338 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 21:51:26.339 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:51:26.655 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:51:26.674 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:51:26.674 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:51:26.674 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:51:26.674 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:51:26.674 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:51:26.675 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:51:26.675 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:51:26.676 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 21:51:26.676 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 21:51:26.676 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 21:51:26.676 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 21:51:26.676 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 21:51:26.677 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 21:51:26.677 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 21:51:26.677 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 21:51:26.677 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 21:51:26.677 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 21:51:26.677 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 21:51:26.677 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 21:51:26.678 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 21:51:26.678 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:51:27.067 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:51:27.068 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 21:51:27.068 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:51:27.081 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:51:27.082 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:51:27.082 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:51:27.085 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:51:27.086 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:51:27.086 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:51:27.089 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:51:27.089 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:51:27.089 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:51:27.104 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:51:27.105 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:51:27.105 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:51:27.105 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:51:27.105 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:51:27.105 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:51:27.105 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:51:27.106 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 21:51:27.106 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 21:51:27.106 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 21:51:27.106 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 21:51:27.106 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 21:51:27.106 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 21:51:27.106 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 21:51:27.106 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 21:51:27.106 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 21:51:27.107 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 21:51:27.107 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 21:51:27.107 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 21:51:27.107 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 21:51:27.108 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:51:27.410 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:51:27.410 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 21:51:27.411 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:51:27.424 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:51:27.424 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:51:27.424 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:51:27.425 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:51:27.425 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:51:27.425 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:51:27.426 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:51:27.426 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:51:27.426 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 21:51:27.440 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:51:27.440 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 21:51:27.440 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 21:51:27.440 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:51:27.440 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 21:51:27.440 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 21:51:27.441 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 21:51:27.442 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 21:51:27.442 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 21:51:27.442 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 21:51:27.442 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 21:51:27.442 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 21:51:27.442 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 21:51:27.442 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 21:51:27.443 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 21:51:27.443 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 21:51:27.443 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 21:51:27.443 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 21:51:27.443 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 21:51:27.443 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 21:51:27.444 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:51:27.749 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:51:27.771 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:51:27.772 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 21:51:27.773 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:51:27.778 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:51:28.242 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 21:51:28.242 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 21:51:28.243 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:51:28.565 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 21:51:28.565 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 21:51:28.579 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 21:51:28.579 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 21:51:28.579 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 21:51:28.580 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:51:28.580 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 21:51:28.580 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 21:51:28.580 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 21:51:28.580 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 21:51:28.581 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:51:28.962 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:51:28.975 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:51:28.975 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 21:51:28.976 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:51:28.977 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 21:51:29.279 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 21:51:29.293 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 21:51:29.293 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 21:51:29.295 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 21:51:29.296 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 22:01:31.340 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:01:32.055 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:01:32.075 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:01:32.075 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:01:32.076 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:01:32.076 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:01:32.076 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:01:32.076 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:01:32.077 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:01:32.087 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:01:32.087 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:01:32.087 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:01:32.088 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:01:32.088 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:01:32.088 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:01:32.088 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:01:32.088 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:01:32.088 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:01:32.089 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:01:32.089 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:01:32.089 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:01:32.089 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 22:01:32.096 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:01:32.428 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:01:32.450 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:01:32.451 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 22:01:32.459 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 22:01:32.460 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:01:32.772 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 22:01:32.787 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:01:32.788 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:01:32.789 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:01:32.789 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 22:01:32.789 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:01:32.789 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:01:32.790 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 22:01:32.793 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:01:32.794 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:01:33.082 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:01:33.082 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:01:33.102 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:01:33.102 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:01:33.102 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:01:33.106 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:01:33.106 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:01:33.106 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:01:33.110 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:01:33.110 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:01:33.111 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:01:33.393 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:01:33.407 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:01:33.408 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:01:33.408 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:01:33.408 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:01:33.408 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:01:33.408 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:01:33.408 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:01:33.411 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:01:33.411 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:01:33.411 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:01:33.411 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:01:33.411 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:01:33.411 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:01:33.412 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:01:33.412 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:01:33.412 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:01:33.412 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:01:33.412 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:01:33.412 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:01:33.413 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 22:01:33.414 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:01:33.912 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:01:33.912 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:01:33.912 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:01:33.930 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:01:33.931 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:01:33.931 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:01:33.934 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:01:33.934 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:01:33.934 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:01:33.937 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:01:33.937 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:01:33.937 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:01:33.952 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:01:33.952 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:01:33.952 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:01:33.953 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:01:33.953 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:01:33.953 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:01:33.953 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:01:33.954 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:01:33.954 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:01:33.954 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:01:33.954 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:01:33.955 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:01:33.955 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:01:33.955 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:01:33.955 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:01:33.955 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:01:33.955 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:01:33.955 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:01:33.955 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:01:33.955 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 22:01:33.956 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:01:34.336 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:01:34.336 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:01:34.336 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:01:34.363 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:01:34.363 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:01:34.363 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:01:34.364 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:01:34.364 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:01:34.364 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:01:34.365 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:01:34.365 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:01:34.365 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:01:34.384 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:01:34.384 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:01:34.384 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:01:34.384 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:01:34.384 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:01:34.384 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:01:34.384 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:01:34.385 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:01:34.385 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:01:34.385 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:01:34.385 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:01:34.385 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:01:34.386 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:01:34.386 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:01:34.386 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:01:34.386 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:01:34.386 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:01:34.386 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:01:34.386 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:01:34.386 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 22:01:34.387 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:01:34.728 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:01:34.743 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:01:34.744 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:01:34.744 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:01:34.747 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:01:35.047 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 22:01:35.047 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 22:01:35.048 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:01:35.450 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:01:35.450 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:01:35.465 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:01:35.465 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:01:35.465 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:01:35.466 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:01:35.466 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:01:35.466 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:01:35.468 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:01:35.468 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:01:35.469 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:01:35.801 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:01:35.815 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:01:35.816 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:01:35.817 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:01:35.817 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:01:36.102 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:01:36.114 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:01:36.114 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:01:36.116 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:01:36.117 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 22:03:55.041 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:03:55.840 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:03:55.863 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:03:55.863 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:03:55.863 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:03:55.863 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:03:55.863 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:03:55.864 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:03:55.864 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:03:55.876 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:03:55.876 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:03:55.876 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:03:55.876 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:03:55.877 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:03:55.877 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:03:55.877 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:03:55.877 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:03:55.878 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:03:55.878 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:03:55.878 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:03:55.878 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:03:55.878 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:03:55.879 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:03:55.887 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:03:56.216 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:03:56.234 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:03:56.235 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 22:03:56.238 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 22:03:56.238 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:03:56.524 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 22:03:56.543 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:03:56.543 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:03:56.544 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:03:56.545 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 22:03:56.545 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:03:56.546 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:03:56.547 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 22:03:56.550 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:03:56.551 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:03:56.928 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:03:56.928 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:03:56.945 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:03:56.945 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:03:56.945 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:03:56.949 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:03:56.949 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:03:56.949 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:03:56.952 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:03:56.953 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:03:56.953 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:03:57.259 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:03:57.273 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:03:57.273 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:03:57.273 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:03:57.273 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:03:57.273 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:03:57.273 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:03:57.273 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:03:57.274 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:03:57.274 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:03:57.274 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:03:57.274 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:03:57.275 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:03:57.275 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:03:57.275 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:03:57.275 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:03:57.275 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:03:57.275 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:03:57.275 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:03:57.276 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:03:57.276 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:03:57.276 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:03:57.276 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:03:57.810 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:03:57.810 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:03:57.810 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:03:57.823 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:03:57.824 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:03:57.824 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:03:57.827 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:03:57.827 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:03:57.827 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:03:57.831 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:03:57.831 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:03:57.831 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:03:57.850 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:03:57.850 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:03:57.850 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:03:57.850 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:03:57.850 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:03:57.850 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:03:57.850 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:03:57.851 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:03:57.851 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:03:57.851 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:03:57.851 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:03:57.852 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:03:57.852 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:03:57.852 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:03:57.852 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:03:57.852 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:03:57.852 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:03:57.852 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:03:57.853 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:03:57.853 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:03:57.853 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:03:57.854 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:03:58.133 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:03:58.134 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:03:58.134 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:03:58.148 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:03:58.148 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:03:58.148 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:03:58.149 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:03:58.149 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:03:58.149 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:03:58.149 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:03:58.150 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:03:58.150 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:03:58.163 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:03:58.163 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:03:58.164 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:03:58.164 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:03:58.164 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:03:58.164 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:03:58.164 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:03:58.165 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:03:58.165 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:03:58.165 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:03:58.165 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:03:58.165 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:03:58.165 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:03:58.165 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:03:58.165 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:03:58.165 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:03:58.165 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:03:58.165 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:03:58.166 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:03:58.166 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:03:58.166 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:03:58.167 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:03:58.456 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:03:58.469 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:03:58.469 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:03:58.470 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:03:58.473 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:03:58.851 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 22:03:58.851 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 22:03:58.851 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:03:59.151 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:03:59.151 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:03:59.168 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:03:59.168 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:03:59.169 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:03:59.169 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:03:59.169 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:03:59.169 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:03:59.170 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:03:59.170 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:03:59.171 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:03:59.574 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:03:59.589 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:03:59.590 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:03:59.591 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:03:59.591 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:03:59.933 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:03:59.950 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:03:59.950 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:03:59.952 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:03:59.953 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 22:04:59.984 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:05:00.748 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:05:00.772 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:05:00.773 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:05:00.773 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:05:00.773 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:05:00.773 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:05:00.773 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:05:00.774 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:05:00.790 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:05:00.790 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:05:00.790 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:05:00.791 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:05:00.791 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:05:00.791 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:05:00.792 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:05:00.792 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:05:00.792 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:05:00.792 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:05:00.792 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:05:00.792 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:05:00.793 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:05:00.793 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:05:00.802 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:05:01.116 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:05:01.135 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:05:01.135 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 22:05:01.138 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 22:05:01.139 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:05:01.524 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 22:05:01.543 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:05:01.543 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:05:01.544 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:05:01.544 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 22:05:01.545 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:05:01.546 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:05:01.546 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 22:05:01.550 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:05:01.551 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:05:01.864 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:05:01.864 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:05:01.885 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:05:01.885 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:05:01.885 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:05:01.889 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:05:01.890 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:05:01.890 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:05:01.893 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:05:01.894 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:05:01.895 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:05:02.321 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:05:02.342 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:05:02.343 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:05:02.343 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:05:02.343 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:05:02.343 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:05:02.343 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:05:02.344 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:05:02.345 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:05:02.345 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:05:02.345 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:05:02.346 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:05:02.346 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:05:02.346 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:05:02.346 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:05:02.346 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:05:02.346 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:05:02.346 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:05:02.347 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:05:02.347 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:05:02.347 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:05:02.347 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:05:02.348 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:05:02.672 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:05:02.672 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:05:02.672 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:05:02.691 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:05:02.691 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:05:02.691 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:05:02.694 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:05:02.694 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:05:02.695 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:05:02.698 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:05:02.698 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:05:02.699 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:05:02.714 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:05:02.714 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:05:02.714 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:05:02.715 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:05:02.715 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:05:02.715 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:05:02.715 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:05:02.716 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:05:02.716 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:05:02.717 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:05:02.717 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:05:02.717 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:05:02.717 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:05:02.717 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:05:02.717 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:05:02.717 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:05:02.718 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:05:02.718 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:05:02.718 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:05:02.718 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:05:02.718 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:05:02.719 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:05:03.013 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:05:03.014 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:05:03.014 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:05:03.030 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:05:03.031 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:05:03.031 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:05:03.032 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:05:03.032 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:05:03.032 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:05:03.032 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:05:03.032 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:05:03.033 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:05:03.052 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:05:03.052 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:05:03.052 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:05:03.052 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:05:03.052 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:05:03.053 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:05:03.053 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:05:03.053 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:05:03.054 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:05:03.054 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:05:03.054 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:05:03.054 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:05:03.054 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:05:03.054 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:05:03.054 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:05:03.054 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:05:03.054 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:05:03.054 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:05:03.054 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:05:03.054 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:05:03.055 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:05:03.055 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:05:03.459 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:05:03.471 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:05:03.472 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:05:03.472 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:05:03.475 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:05:03.761 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 22:05:03.762 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 22:05:03.762 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:05:04.155 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:05:04.155 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:05:04.168 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:05:04.168 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:05:04.168 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:05:04.169 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:05:04.169 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:05:04.169 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:05:04.170 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:05:04.170 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:05:04.170 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:05:04.516 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:05:04.532 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:05:04.532 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:05:04.533 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:05:04.534 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:05:04.889 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:05:04.902 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:05:04.902 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:05:04.904 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:05:04.904 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 22:10:01.155 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:10:01.849 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:10:01.873 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:10:01.873 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:10:01.873 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:10:01.874 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:10:01.874 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:10:01.874 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:10:01.874 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:10:01.887 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:10:01.887 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:10:01.887 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:10:01.887 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:10:01.888 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:10:01.888 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:10:01.888 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:10:01.888 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:10:01.889 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:10:01.889 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:10:01.889 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:10:01.889 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:10:01.889 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 22:10:01.899 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:10:02.197 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:10:02.224 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:10:02.224 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 22:10:02.228 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 22:10:02.228 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:10:02.552 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 22:10:02.574 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:10:02.574 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:10:02.575 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:10:02.576 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 22:10:02.576 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:10:02.577 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:10:02.577 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 22:10:02.581 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:10:02.581 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:10:02.997 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:10:02.997 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:10:03.012 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:10:03.012 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:10:03.013 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:10:03.016 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:10:03.016 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:10:03.017 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:10:03.021 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:10:03.021 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:10:03.022 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:10:03.349 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:10:03.364 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:10:03.364 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:10:03.364 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:10:03.364 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:10:03.364 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:10:03.364 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:10:03.365 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:10:03.366 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:10:03.366 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:10:03.366 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:10:03.366 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:10:03.366 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:10:03.366 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:10:03.367 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:10:03.367 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:10:03.367 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:10:03.367 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:10:03.367 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:10:03.368 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:10:03.368 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 22:10:03.369 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:10:03.777 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:10:03.777 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:10:03.777 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:10:03.791 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:10:03.791 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:10:03.791 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:10:03.794 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:10:03.794 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:10:03.794 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:10:03.797 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:10:03.797 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:10:03.797 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:10:03.816 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:10:03.816 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:10:03.816 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:10:03.816 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:10:03.816 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:10:03.817 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:10:03.817 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:10:03.818 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:10:03.818 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:10:03.818 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:10:03.818 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:10:03.818 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:10:03.818 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:10:03.819 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:10:03.819 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:10:03.819 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:10:03.819 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:10:03.819 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:10:03.819 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:10:03.819 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 22:10:03.820 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:10:04.142 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:10:04.142 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:10:04.143 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:10:04.156 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:10:04.156 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:10:04.156 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:10:04.157 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:10:04.157 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:10:04.158 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:10:04.158 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:10:04.158 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:10:04.158 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:10:04.172 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:10:04.172 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:10:04.173 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:10:04.173 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:10:04.173 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:10:04.173 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:10:04.173 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:10:04.174 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:10:04.174 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:10:04.174 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:10:04.174 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:10:04.174 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:10:04.174 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:10:04.174 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:10:04.174 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:10:04.174 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:10:04.175 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:10:04.175 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:10:04.175 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:10:04.175 [main] DatabaseDAO - Added all attachments to the attachment table.
[INFO ] 2020-11-19 22:10:04.176 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:10:04.464 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:10:04.476 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:10:04.477 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:10:04.477 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:10:04.480 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:10:04.826 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 22:10:04.826 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 22:10:04.827 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:10:05.313 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:10:05.314 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:10:05.330 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:10:05.330 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:10:05.330 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:10:05.331 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:10:05.331 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:10:05.331 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:10:05.331 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:10:05.331 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:10:05.332 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:10:05.688 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:10:05.700 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:10:05.700 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:10:05.701 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:10:05.702 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:10:05.966 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:10:05.982 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:10:05.982 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:10:05.985 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:10:05.986 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 22:14:52.326 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:14:53.064 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:14:53.092 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:14:53.092 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:14:53.093 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:14:53.093 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:14:53.093 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:14:53.093 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:14:53.094 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:14:53.109 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:14:53.109 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:14:53.110 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:14:53.110 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:14:53.110 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:14:53.111 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:14:53.111 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:14:53.111 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:14:53.111 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:14:53.111 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:14:53.111 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:14:53.112 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:14:53.112 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:14:53.113 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:14:53.114 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:14:53.115 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:14:53.123 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:14:53.571 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:14:53.596 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:14:53.596 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 22:14:53.600 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 22:14:53.600 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:14:53.998 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 22:14:54.020 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:14:54.021 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:14:54.022 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:14:54.023 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 22:14:54.023 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:14:54.024 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:14:54.025 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 22:14:54.028 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:14:54.029 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:14:54.351 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:14:54.351 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:14:54.367 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:14:54.368 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:14:54.368 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:14:54.371 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:14:54.371 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:14:54.372 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:14:54.375 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:14:54.375 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:14:54.376 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:14:54.747 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:14:54.760 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:14:54.761 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:14:54.761 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:14:54.761 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:14:54.761 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:14:54.761 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:14:54.761 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:14:54.762 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:14:54.762 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:14:54.762 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:14:54.762 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:14:54.762 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:14:54.763 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:14:54.763 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:14:54.763 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:14:54.763 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:14:54.763 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:14:54.763 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:14:54.763 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:14:54.763 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:14:54.764 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:14:54.764 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:14:54.765 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:14:54.766 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:14:55.172 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:14:55.172 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:14:55.172 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:14:55.190 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:14:55.190 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:14:55.190 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:14:55.193 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:14:55.193 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:14:55.193 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:14:55.197 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:14:55.197 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:14:55.197 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:14:55.211 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:14:55.211 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:14:55.212 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:14:55.212 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:14:55.212 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:14:55.212 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:14:55.212 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:14:55.213 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:14:55.213 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:14:55.213 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:14:55.213 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:14:55.213 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:14:55.213 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:14:55.214 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:14:55.214 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:14:55.214 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:14:55.214 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:14:55.214 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:14:55.214 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:14:55.214 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:14:55.215 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:14:55.215 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:14:55.216 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:14:55.217 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:14:55.569 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:14:55.569 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:14:55.569 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:14:55.585 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:14:55.585 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:14:55.586 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:14:55.586 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:14:55.586 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:14:55.586 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:14:55.587 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:14:55.587 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:14:55.587 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:14:55.600 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:14:55.600 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:14:55.601 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:14:55.601 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:14:55.601 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:14:55.601 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:14:55.601 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:14:55.602 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:14:55.602 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:14:55.602 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:14:55.602 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:14:55.602 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:14:55.602 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:14:55.602 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:14:55.602 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:14:55.603 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:14:55.603 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:14:55.603 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:14:55.603 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:14:55.603 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:14:55.603 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:14:55.603 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:14:55.604 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:14:55.605 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:14:55.889 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:14:55.902 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:14:55.903 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:14:55.904 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:14:55.907 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:14:56.197 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 22:14:56.197 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 22:14:56.197 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:14:56.651 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:14:56.651 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:14:56.675 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:14:56.675 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:14:56.675 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:14:56.676 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:14:56.676 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:14:56.676 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:14:56.677 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:14:56.677 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:14:56.677 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:14:57.024 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:14:57.036 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:14:57.036 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:14:57.037 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:14:57.037 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:14:57.334 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:14:57.353 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:14:57.353 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:14:57.356 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:14:57.356 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 22:18:15.819 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:18:16.607 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:18:16.629 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:18:16.630 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:18:16.630 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:18:16.630 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:18:16.630 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:18:16.630 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:18:16.631 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:18:16.645 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:18:16.646 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:18:16.646 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:18:16.646 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:18:16.646 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:18:16.646 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:18:16.647 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:18:16.647 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:18:16.647 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:18:16.647 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:18:16.647 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:18:16.648 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:18:16.648 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:18:16.649 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:18:16.650 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:18:16.651 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:18:16.651 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-19 22:18:16.658 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:18:16.955 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:18:16.980 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:18:16.981 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 22:18:16.984 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 22:18:16.984 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:18:17.362 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 22:18:17.380 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:18:17.380 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:18:17.381 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:18:17.381 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 22:18:17.381 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:18:17.382 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:18:17.382 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-19 22:18:17.382 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 22:18:17.386 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:18:17.386 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:18:17.687 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:18:17.687 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:18:17.707 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:18:17.707 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:18:17.707 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:18:17.711 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:18:17.711 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:18:17.712 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:18:17.715 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:18:17.716 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:18:17.717 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:18:18.025 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:18:18.042 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:18:18.042 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:18:18.042 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:18:18.042 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:18:18.042 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:18:18.042 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:18:18.043 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:18:18.046 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:18:18.047 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:18:18.047 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:18:18.047 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:18:18.048 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:18:18.048 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:18:18.048 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:18:18.048 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:18:18.048 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:18:18.048 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:18:18.048 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:18:18.049 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:18:18.049 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:18:18.049 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:18:18.050 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:18:18.053 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:18:18.053 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-19 22:18:18.054 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:18:18.524 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:18:18.524 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:18:18.525 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:18:18.544 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:18:18.544 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:18:18.544 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:18:18.547 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:18:18.547 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:18:18.548 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:18:18.551 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:18:18.551 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:18:18.551 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:18:18.566 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:18:18.566 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:18:18.566 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:18:18.566 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:18:18.566 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:18:18.566 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:18:18.566 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:18:18.567 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:18:18.567 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:18:18.567 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:18:18.567 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:18:18.567 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:18:18.567 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:18:18.567 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:18:18.568 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:18:18.568 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:18:18.568 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:18:18.568 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:18:18.568 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:18:18.568 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:18:18.568 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:18:18.568 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:18:18.569 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:18:18.569 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-19 22:18:18.570 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:18:18.863 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:18:18.863 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:18:18.863 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:18:18.878 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:18:18.878 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:18:18.878 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:18:18.879 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:18:18.879 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:18:18.879 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:18:18.880 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:18:18.880 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:18:18.880 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:18:18.898 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:18:18.898 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:18:18.898 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:18:18.898 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:18:18.898 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:18:18.898 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:18:18.899 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:18:18.899 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:18:18.899 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:18:18.899 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:18:18.899 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:18:18.899 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:18:18.899 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:18:18.900 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:18:18.900 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:18:18.900 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:18:18.900 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:18:18.900 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:18:18.900 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:18:18.900 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:18:18.900 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:18:18.900 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:18:18.901 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:18:18.901 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-19 22:18:18.902 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:18:19.303 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:18:19.316 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:18:19.316 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:18:19.316 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:18:19.319 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:18:19.593 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 22:18:19.593 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 22:18:19.594 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:18:19.873 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:18:19.873 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:18:19.886 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:18:19.886 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:18:19.887 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:18:19.887 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:18:19.887 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:18:19.887 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:18:19.888 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:18:19.888 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:18:19.889 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:18:20.363 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:18:20.374 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:18:20.375 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:18:20.376 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:18:20.376 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:18:20.663 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:18:20.674 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:18:20.674 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:18:20.677 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:18:20.677 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 22:27:07.104 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:27:08.203 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:27:08.234 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:27:08.235 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:27:08.235 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:27:08.235 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:27:08.235 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:27:08.235 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:27:08.236 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:27:08.260 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:27:08.260 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:27:08.261 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:27:08.261 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:27:08.262 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:27:08.262 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:27:08.262 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:27:08.263 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:27:08.263 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:27:08.263 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:27:08.263 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:27:08.263 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:27:08.264 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:27:08.266 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:27:08.266 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:27:08.268 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:27:08.269 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-19 22:27:08.282 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:27:08.940 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:27:08.981 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:27:08.982 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 22:27:08.990 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 22:27:08.990 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:27:09.659 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 22:27:09.676 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:27:09.676 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:27:09.677 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:27:09.677 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 22:27:09.678 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:27:09.679 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:27:09.679 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-19 22:27:09.679 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 22:27:09.703 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:27:09.704 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:27:10.972 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:27:10.972 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:27:11.012 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:27:11.012 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:27:11.012 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:27:11.033 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:27:11.034 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:27:11.034 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:27:11.055 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:27:11.056 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:27:11.056 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:27:11.995 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:27:12.024 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:27:12.024 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:27:12.024 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:27:12.024 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:27:12.024 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:27:12.025 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:27:12.025 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:27:12.026 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:27:12.026 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:27:12.027 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:27:12.027 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:27:12.027 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:27:12.027 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:27:12.027 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:27:12.027 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:27:12.028 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:27:12.028 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:27:12.028 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:27:12.028 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:27:12.029 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:27:12.029 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:27:12.030 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:27:12.031 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:27:12.032 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-19 22:27:12.033 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:27:12.822 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:27:12.822 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:27:12.822 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:27:12.853 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:27:12.853 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:27:12.853 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:27:12.878 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:27:12.878 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:27:12.878 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:27:12.902 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:27:12.902 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:27:12.902 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:27:12.916 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:27:12.916 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:27:12.916 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:27:12.916 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:27:12.916 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:27:12.917 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:27:12.917 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:27:12.918 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:27:12.918 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:27:12.918 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:27:12.919 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:27:12.919 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:27:12.919 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:27:12.919 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:27:12.919 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:27:12.919 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:27:12.919 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:27:12.919 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:27:12.920 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:27:12.920 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:27:12.920 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:27:12.920 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:27:12.921 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:27:12.921 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-19 22:27:12.922 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:27:13.592 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:27:13.592 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:27:13.592 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:27:13.612 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:27:13.612 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:27:13.612 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:27:13.613 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:27:13.613 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:27:13.613 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:27:13.614 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:27:13.614 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:27:13.614 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:27:13.636 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:27:13.636 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:27:13.636 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:27:13.636 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:27:13.636 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:27:13.636 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:27:13.636 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:27:13.637 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:27:13.637 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:27:13.637 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:27:13.638 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:27:13.638 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:27:13.638 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:27:13.638 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:27:13.638 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:27:13.638 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:27:13.638 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:27:13.638 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:27:13.639 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:27:13.639 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:27:13.639 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:27:13.639 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:27:13.640 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:27:13.640 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-19 22:27:13.641 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:27:15.196 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:27:15.211 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:27:15.211 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:27:15.212 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:27:15.215 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:27:15.943 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 22:27:15.943 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 22:27:15.944 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:27:16.595 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:27:16.596 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:27:16.608 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:27:16.608 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:27:16.609 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:27:16.609 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:27:16.609 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:27:16.609 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:27:16.610 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:27:16.610 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:27:16.610 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:27:17.537 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:27:17.555 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:27:17.555 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:27:17.557 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:27:17.558 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:27:18.535 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:27:18.558 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:27:18.558 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:27:18.562 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:27:18.562 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 22:28:03.203 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:28:04.425 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:28:04.447 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:28:04.447 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:28:04.447 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:28:04.447 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:28:04.447 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:28:04.448 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:28:04.448 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:28:04.461 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:28:04.461 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:28:04.461 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:28:04.462 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:28:04.462 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:28:04.462 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:28:04.462 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:28:04.462 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:28:04.462 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:28:04.463 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:28:04.463 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:28:04.463 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:28:04.463 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:28:04.464 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:28:04.464 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:28:04.465 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:28:04.465 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-19 22:28:04.465 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-19 22:28:04.465 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-19 22:28:04.468 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:28:04.468 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-19 22:28:04.474 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:28:05.043 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:28:05.070 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:28:05.071 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 22:28:05.079 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 22:28:05.079 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:28:06.128 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 22:28:06.144 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:28:06.144 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:28:06.146 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:28:06.146 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 22:28:06.146 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:28:06.147 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:28:06.147 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-19 22:28:06.147 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 22:28:06.169 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:28:06.169 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:28:06.943 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:28:06.943 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:28:06.968 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:28:06.968 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:28:06.969 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:28:06.977 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:28:06.977 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:28:06.977 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:28:06.985 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:28:06.985 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:28:06.993 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:28:08.042 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:28:08.059 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:28:08.059 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:28:08.059 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:28:08.060 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:28:08.060 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:28:08.060 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:28:08.060 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:28:08.061 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:28:08.061 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:28:08.061 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:28:08.062 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:28:08.062 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:28:08.062 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:28:08.062 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:28:08.062 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:28:08.062 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:28:08.062 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:28:08.063 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:28:08.063 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:28:08.063 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:28:08.063 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:28:08.064 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:28:08.065 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:28:08.065 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-19 22:28:08.065 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-19 22:28:08.065 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-19 22:28:08.066 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:28:08.066 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-19 22:28:08.067 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:28:08.659 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:28:08.660 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:28:08.660 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:28:08.698 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:28:08.698 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:28:08.698 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:28:08.707 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:28:08.707 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:28:08.707 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:28:08.714 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:28:08.715 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:28:08.715 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:28:08.727 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:28:08.727 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:28:08.727 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:28:08.727 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:28:08.728 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:28:08.728 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:28:08.728 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:28:08.728 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:28:08.729 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:28:08.729 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:28:08.729 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:28:08.729 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:28:08.729 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:28:08.729 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:28:08.729 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:28:08.729 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:28:08.729 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:28:08.729 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:28:08.729 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:28:08.729 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:28:08.730 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:28:08.730 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:28:08.731 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:28:08.731 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-19 22:28:08.731 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-19 22:28:08.731 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-19 22:28:08.732 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:28:08.732 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-19 22:28:08.733 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:28:09.640 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:28:09.640 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:28:09.640 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:28:09.665 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:28:09.666 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:28:09.666 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:28:09.667 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:28:09.667 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:28:09.667 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:28:09.668 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:28:09.669 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:28:09.669 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:28:09.687 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:28:09.687 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:28:09.687 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:28:09.688 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:28:09.688 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:28:09.688 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:28:09.688 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:28:09.689 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:28:09.689 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:28:09.689 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:28:09.689 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:28:09.689 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:28:09.689 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:28:09.689 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:28:09.689 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:28:09.689 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:28:09.689 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:28:09.689 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:28:09.690 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:28:09.690 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:28:09.690 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:28:09.690 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:28:09.691 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:28:09.691 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-19 22:28:09.692 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-19 22:28:09.692 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-19 22:28:09.692 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:28:09.692 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-19 22:28:09.693 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:28:10.594 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:28:10.610 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:28:10.610 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:28:10.611 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:28:10.612 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:28:11.240 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 22:28:11.240 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 22:28:11.241 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:28:11.867 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:28:11.867 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:28:11.882 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:28:11.882 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:28:11.883 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:28:11.884 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:28:11.884 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:28:11.884 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:28:11.885 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:28:11.885 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:28:11.886 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:28:13.089 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:28:13.114 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:28:13.114 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:28:13.115 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:28:13.116 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:28:14.006 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:28:14.022 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:28:14.022 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:28:14.023 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:28:14.023 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 22:29:21.105 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:29:22.208 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:29:22.231 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:29:22.231 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:29:22.231 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:29:22.231 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:29:22.231 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:29:22.231 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:29:22.232 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:29:22.244 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:29:22.244 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:29:22.244 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:29:22.245 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:29:22.245 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:29:22.245 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:29:22.245 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:29:22.245 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:29:22.245 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:29:22.245 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:29:22.245 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:29:22.246 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:29:22.246 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:29:22.246 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:29:22.247 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:29:22.248 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:29:22.249 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-19 22:29:22.249 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-19 22:29:22.249 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-19 22:29:22.250 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:29:22.251 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-19 22:29:22.262 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:29:22.746 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:29:22.777 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:29:22.777 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 22:29:22.790 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 22:29:22.790 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:29:23.382 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 22:29:23.398 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:29:23.398 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:29:23.399 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:29:23.399 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 22:29:23.399 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:29:23.400 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:29:23.400 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-19 22:29:23.400 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 22:29:23.409 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:29:23.410 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:29:24.387 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:29:24.387 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:29:24.406 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:29:24.406 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:29:24.407 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:29:24.415 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:29:24.415 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:29:24.415 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:29:24.422 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:29:24.422 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:29:24.428 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:29:25.355 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:29:25.377 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:29:25.377 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:29:25.377 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:29:25.378 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:29:25.378 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:29:25.378 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:29:25.378 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:29:25.380 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:29:25.380 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:29:25.380 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:29:25.380 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:29:25.381 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:29:25.381 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:29:25.381 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:29:25.381 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:29:25.381 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:29:25.381 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:29:25.382 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:29:25.382 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:29:25.382 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:29:25.382 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:29:25.383 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:29:25.384 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:29:25.385 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-19 22:29:25.385 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-19 22:29:25.385 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-19 22:29:25.386 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:29:25.386 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-19 22:29:25.387 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:29:26.356 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:29:26.356 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:29:26.356 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:29:26.373 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:29:26.373 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:29:26.373 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:29:26.381 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:29:26.381 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:29:26.381 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:29:26.388 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:29:26.388 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:29:26.388 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:29:26.402 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:29:26.402 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:29:26.402 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:29:26.402 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:29:26.402 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:29:26.402 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:29:26.403 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:29:26.403 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:29:26.403 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:29:26.404 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:29:26.404 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:29:26.404 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:29:26.404 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:29:26.404 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:29:26.404 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:29:26.404 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:29:26.404 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:29:26.404 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:29:26.405 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:29:26.405 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:29:26.405 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:29:26.405 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:29:26.406 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:29:26.406 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-19 22:29:26.406 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-19 22:29:26.406 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-19 22:29:26.407 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:29:26.407 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-19 22:29:26.408 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:29:27.141 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:29:27.142 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:29:27.142 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:29:27.156 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:29:27.156 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:29:27.156 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:29:27.157 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:29:27.157 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:29:27.157 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:29:27.158 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:29:27.158 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:29:27.158 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:29:27.175 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:29:27.175 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:29:27.175 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:29:27.175 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:29:27.175 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:29:27.175 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:29:27.176 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:29:27.176 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:29:27.176 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:29:27.176 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:29:27.177 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:29:27.177 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:29:27.177 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:29:27.177 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:29:27.177 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:29:27.177 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:29:27.177 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:29:27.177 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:29:27.177 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:29:27.177 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:29:27.178 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:29:27.178 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:29:27.179 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:29:27.179 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-19 22:29:27.179 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-19 22:29:27.179 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-19 22:29:27.179 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:29:27.179 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-19 22:29:27.180 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:29:27.732 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:29:27.760 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:29:27.761 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:29:27.762 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:29:27.763 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:29:28.949 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 22:29:28.949 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 22:29:28.949 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:29:29.598 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:29:29.598 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:29:29.614 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:29:29.614 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:29:29.614 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:29:29.614 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:29:29.615 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:29:29.615 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:29:29.615 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:29:29.615 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:29:29.616 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:29:30.481 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:29:30.501 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:29:30.501 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:29:30.502 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:29:30.503 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:29:31.554 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:29:31.572 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:29:31.572 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:29:31.573 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:29:31.573 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-19 22:30:51.943 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:30:53.125 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:30:53.155 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:30:53.155 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:30:53.155 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:30:53.156 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:30:53.156 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:30:53.156 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:30:53.156 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:30:53.168 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:30:53.168 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:30:53.168 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:30:53.168 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:30:53.169 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:30:53.169 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:30:53.169 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:30:53.169 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:30:53.169 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:30:53.169 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:30:53.170 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:30:53.170 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:30:53.170 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:30:53.172 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:30:53.172 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:30:53.174 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:30:53.174 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-19 22:30:53.175 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-19 22:30:53.175 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-19 22:30:53.177 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:30:53.177 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-19 22:30:53.185 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:30:53.829 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:30:53.848 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:30:53.849 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-19 22:30:53.856 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-19 22:30:53.857 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:30:54.397 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-19 22:30:54.415 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:30:54.415 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:30:54.417 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:30:54.417 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-19 22:30:54.417 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:30:54.418 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:30:54.418 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-19 22:30:54.418 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-19 22:30:54.426 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:30:54.427 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:30:55.508 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:30:55.508 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:30:55.540 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:30:55.540 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:30:55.541 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:30:55.561 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:30:55.561 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:30:55.561 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:30:55.587 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:30:55.587 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:30:55.596 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:30:56.711 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:30:56.740 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:30:56.740 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:30:56.740 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:30:56.740 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:30:56.740 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:30:56.741 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:30:56.741 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:30:56.742 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:30:56.742 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:30:56.742 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:30:56.743 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:30:56.743 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:30:56.743 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:30:56.743 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:30:56.743 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:30:56.743 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:30:56.743 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:30:56.744 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:30:56.744 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:30:56.744 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:30:56.745 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:30:56.745 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:30:56.746 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:30:56.746 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-19 22:30:56.747 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-19 22:30:56.747 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-19 22:30:56.747 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:30:56.748 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-19 22:30:56.749 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:30:57.342 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:30:57.342 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:30:57.343 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:30:57.371 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:30:57.371 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:30:57.371 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:30:57.379 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:30:57.379 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:30:57.379 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:30:57.386 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:30:57.386 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:30:57.386 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:30:57.406 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:30:57.406 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:30:57.406 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:30:57.406 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:30:57.406 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:30:57.406 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:30:57.406 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:30:57.407 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:30:57.407 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:30:57.407 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:30:57.407 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:30:57.407 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:30:57.408 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:30:57.408 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:30:57.408 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:30:57.408 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:30:57.408 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:30:57.408 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:30:57.409 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:30:57.409 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:30:57.409 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:30:57.409 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:30:57.411 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:30:57.411 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-19 22:30:57.411 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-19 22:30:57.411 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-19 22:30:57.412 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:30:57.412 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-19 22:30:57.414 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:30:58.212 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:30:58.212 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-19 22:30:58.212 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:30:58.226 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:30:58.226 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:30:58.226 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:30:58.227 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:30:58.227 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:30:58.227 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:30:58.227 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:30:58.227 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:30:58.227 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-19 22:30:58.242 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:30:58.242 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-19 22:30:58.242 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-19 22:30:58.242 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:30:58.242 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-19 22:30:58.242 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-19 22:30:58.242 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-19 22:30:58.243 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-19 22:30:58.243 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-19 22:30:58.243 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-19 22:30:58.243 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-19 22:30:58.243 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-19 22:30:58.243 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-19 22:30:58.244 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-19 22:30:58.244 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-19 22:30:58.244 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-19 22:30:58.244 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-19 22:30:58.244 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-19 22:30:58.244 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-19 22:30:58.244 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-19 22:30:58.244 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-19 22:30:58.245 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-19 22:30:58.245 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:30:58.245 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-19 22:30:58.246 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-19 22:30:58.246 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-19 22:30:58.246 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:30:58.246 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-19 22:30:58.247 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:30:59.225 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:30:59.241 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:30:59.241 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-19 22:30:59.242 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:30:59.243 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:30:59.946 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-19 22:30:59.946 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-19 22:30:59.947 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:31:00.504 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-19 22:31:00.504 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-19 22:31:00.519 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-19 22:31:00.519 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-19 22:31:00.519 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-19 22:31:00.520 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:31:00.520 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-19 22:31:00.520 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-19 22:31:00.520 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-19 22:31:00.521 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-19 22:31:00.522 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:31:01.348 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:31:01.360 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:31:01.360 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:31:01.361 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:31:01.361 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-19 22:31:02.281 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-19 22:31:02.295 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-19 22:31:02.295 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-19 22:31:02.296 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-19 22:31:02.296 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:01:09.480 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:01:10.488 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:01:10.515 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:01:10.515 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:01:10.515 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:01:10.515 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:01:10.516 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:01:10.516 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:01:10.516 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:01:10.528 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:01:10.528 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:01:10.528 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:01:10.528 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:01:10.529 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:01:10.529 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:01:10.529 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:01:10.529 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:01:10.529 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:01:10.530 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:01:10.530 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:01:10.530 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:01:10.530 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:01:10.531 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:01:10.531 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:01:10.532 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:01:10.532 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:01:10.532 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:01:10.532 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:01:10.534 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:01:10.534 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-20 13:01:10.543 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:01:10.847 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:01:10.865 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:01:10.866 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 13:01:10.869 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 13:01:10.870 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:01:11.278 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 13:01:11.298 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:01:11.298 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 13:01:11.299 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:01:11.299 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 13:01:11.300 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:01:11.301 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:01:11.301 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 13:01:11.301 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 13:01:11.305 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:01:11.305 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:01:11.628 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 13:01:11.628 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:01:11.643 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:01:11.643 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:01:11.643 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:01:11.646 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:01:11.646 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:01:11.647 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:01:11.650 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:01:11.650 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 13:01:11.657 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:01:11.972 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:01:11.988 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:01:11.989 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:01:11.989 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:01:11.989 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:01:11.989 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:01:11.989 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:01:11.989 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:01:11.990 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:01:11.990 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:01:11.990 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:01:11.990 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:01:11.990 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:01:11.991 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:01:11.991 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:01:11.991 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:01:11.991 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:01:11.991 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:01:11.991 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:01:11.992 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:01:11.992 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:01:11.992 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:01:11.992 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:01:11.993 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:01:11.994 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:01:11.994 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:01:11.994 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:01:11.994 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:01:11.995 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-20 13:01:11.996 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:01:12.496 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:01:12.496 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 13:01:12.497 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:01:12.525 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:01:12.525 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:01:12.525 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:01:12.528 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:01:12.529 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:01:12.529 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:01:12.532 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:01:12.532 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:01:12.532 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:01:12.552 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:01:12.552 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:01:12.552 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:01:12.552 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:01:12.552 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:01:12.553 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:01:12.553 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:01:12.553 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:01:12.553 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:01:12.553 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:01:12.554 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:01:12.554 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:01:12.554 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:01:12.554 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:01:12.554 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:01:12.554 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:01:12.554 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:01:12.554 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:01:12.554 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:01:12.554 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:01:12.555 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:01:12.555 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:01:12.556 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:01:12.556 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:01:12.556 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:01:12.556 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:01:12.557 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:01:12.557 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-20 13:01:12.558 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:01:12.999 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:01:13.000 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 13:01:13.000 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:01:13.015 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:01:13.015 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:01:13.016 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:01:13.016 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:01:13.017 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:01:13.017 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:01:13.018 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:01:13.018 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:01:13.018 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:01:13.032 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:01:13.032 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:01:13.032 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:01:13.032 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:01:13.032 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:01:13.032 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:01:13.032 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:01:13.033 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:01:13.033 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:01:13.033 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:01:13.033 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:01:13.033 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:01:13.033 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:01:13.033 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:01:13.033 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:01:13.034 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:01:13.034 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:01:13.034 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:01:13.034 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:01:13.034 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:01:13.034 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:01:13.034 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:01:13.035 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:01:13.035 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:01:13.035 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:01:13.035 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:01:13.036 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:01:13.036 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-20 13:01:13.037 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:01:13.423 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:01:13.445 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:01:13.445 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 13:01:13.446 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:01:13.446 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:01:13.771 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 13:01:13.771 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 13:01:13.772 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:01:14.156 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 13:01:14.156 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:01:14.189 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:01:14.190 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:01:14.190 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:01:14.191 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:01:14.191 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:01:14.191 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:01:14.192 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:01:14.192 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 13:01:14.193 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:01:14.668 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:01:14.683 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:01:14.684 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 13:01:14.685 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:01:14.685 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:01:15.173 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:01:15.189 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:01:15.189 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 13:01:15.191 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:01:15.191 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:12:40.239 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:12:41.129 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:12:41.155 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:12:41.155 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:12:41.155 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:12:41.155 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:12:41.155 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:12:41.156 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:12:41.156 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:12:41.170 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:12:41.170 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:12:41.170 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:12:41.171 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:12:41.171 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:12:41.171 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:12:41.171 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:12:41.171 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:12:41.172 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:12:41.172 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:12:41.172 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:12:41.172 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:12:41.172 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:12:41.173 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:12:41.174 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:12:41.175 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:12:41.175 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:12:41.175 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:12:41.175 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:12:41.178 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:12:41.178 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-20 13:12:41.189 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:12:41.476 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:12:41.496 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:12:41.497 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 13:12:41.500 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 13:12:41.500 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:12:41.801 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 13:12:41.823 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:12:41.823 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 13:12:41.825 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:12:41.825 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 13:12:41.825 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:12:41.827 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:12:41.827 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 13:12:41.827 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 13:12:41.831 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:12:41.832 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:12:42.216 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 13:12:42.217 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:12:42.237 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:12:42.238 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:12:42.238 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:12:42.241 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:12:42.241 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:12:42.242 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:12:42.245 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:12:42.245 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 13:12:42.253 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:12:42.584 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:12:42.602 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:12:42.603 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:12:42.603 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:12:42.603 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:12:42.603 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:12:42.603 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:12:42.604 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:12:42.605 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:12:42.605 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:12:42.605 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:12:42.605 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:12:42.605 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:12:42.606 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:12:42.606 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:12:42.606 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:12:42.606 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:12:42.606 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:12:42.606 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:12:42.606 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:12:42.607 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:12:42.607 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:12:42.607 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:12:42.609 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:12:42.609 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:12:42.609 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:12:42.609 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:12:42.611 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:12:42.611 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-20 13:12:42.614 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:12:43.015 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:12:43.015 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 13:12:43.015 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:12:43.030 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:12:43.031 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:12:43.031 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:12:43.037 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:12:43.037 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:12:43.038 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:12:43.044 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:12:43.044 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:12:43.044 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:12:43.061 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:12:43.061 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:12:43.061 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:12:43.061 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:12:43.061 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:12:43.061 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:12:43.061 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:12:43.063 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:12:43.063 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:12:43.063 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:12:43.063 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:12:43.063 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:12:43.063 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:12:43.063 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:12:43.063 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:12:43.064 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:12:43.064 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:12:43.064 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:12:43.064 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:12:43.064 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:12:43.064 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:12:43.064 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:12:43.065 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:12:43.065 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:12:43.066 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:12:43.066 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:12:43.066 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:12:43.066 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-20 13:12:43.068 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:12:43.347 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:12:43.347 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 13:12:43.347 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:12:43.361 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:12:43.361 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:12:43.361 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:12:43.362 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:12:43.362 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:12:43.362 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:12:43.363 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:12:43.363 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:12:43.363 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:12:43.377 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:12:43.377 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:12:43.377 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:12:43.377 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:12:43.378 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:12:43.378 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:12:43.378 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:12:43.379 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:12:43.379 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:12:43.379 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:12:43.379 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:12:43.379 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:12:43.379 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:12:43.379 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:12:43.379 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:12:43.379 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:12:43.379 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:12:43.379 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:12:43.379 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:12:43.380 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:12:43.380 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:12:43.380 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:12:43.381 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:12:43.381 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:12:43.381 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:12:43.381 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:12:43.382 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:12:43.382 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-20 13:12:43.383 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:12:43.690 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:12:43.711 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:12:43.711 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 13:12:43.713 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:12:43.714 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:12:44.124 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 13:12:44.125 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 13:12:44.126 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:12:44.480 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 13:12:44.481 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:12:44.496 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:12:44.496 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:12:44.497 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:12:44.497 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:12:44.497 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:12:44.498 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:12:44.498 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:12:44.498 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 13:12:44.499 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:12:44.941 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:12:44.953 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:12:44.954 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 13:12:44.955 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:12:44.955 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:12:45.282 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:12:45.294 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:12:45.295 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 13:12:45.295 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:12:45.296 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:21:00.147 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:21:00.901 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:21:00.922 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:21:00.922 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:21:00.922 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:21:00.922 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:21:00.922 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:21:00.922 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:21:00.923 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:21:00.934 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:21:00.934 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:21:00.935 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:21:00.935 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:21:00.935 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:21:00.935 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:21:00.935 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:21:00.935 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:21:00.936 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:21:00.936 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:21:00.936 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:21:00.936 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:21:00.936 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:21:00.938 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:21:00.938 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:21:00.939 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:21:00.939 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:21:00.939 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:21:00.940 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:21:00.942 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:21:00.942 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-20 13:21:00.951 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:21:01.260 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:21:01.282 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:21:01.283 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 13:21:01.286 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 13:21:01.287 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:21:01.683 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 13:21:01.710 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:21:01.710 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 13:21:01.712 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:21:01.712 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 13:21:01.712 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:21:01.714 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:21:01.714 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 13:21:01.714 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 13:21:01.720 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:21:01.721 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:21:02.082 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 13:21:02.083 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:21:02.099 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:21:02.100 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:21:02.100 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:21:02.104 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:21:02.104 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:21:02.104 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:21:02.108 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:21:02.108 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 13:21:02.116 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:21:02.436 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:21:02.450 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:21:02.450 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:21:02.450 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:21:02.450 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:21:02.450 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:21:02.450 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:21:02.450 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:21:02.451 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:21:02.451 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:21:02.451 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:21:02.451 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:21:02.451 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:21:02.452 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:21:02.452 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:21:02.452 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:21:02.452 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:21:02.452 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:21:02.452 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:21:02.452 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:21:02.452 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:21:02.453 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:21:02.453 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:21:02.454 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:21:02.454 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:21:02.454 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:21:02.454 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:21:02.455 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:21:02.456 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-20 13:21:02.457 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:21:02.913 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:21:02.914 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 13:21:02.914 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:21:02.928 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:21:02.928 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:21:02.928 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:21:02.931 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:21:02.931 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:21:02.931 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:21:02.934 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:21:02.935 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:21:02.935 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:21:02.958 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:21:02.958 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:21:02.958 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:21:02.958 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:21:02.958 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:21:02.958 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:21:02.959 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:21:02.960 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:21:02.960 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:21:02.960 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:21:02.960 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:21:02.960 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:21:02.960 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:21:02.960 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:21:02.960 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:21:02.961 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:21:02.961 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:21:02.961 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:21:02.961 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:21:02.961 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:21:02.961 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:21:02.962 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:21:02.962 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:21:02.963 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:21:02.963 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:21:02.963 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:21:02.963 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:21:02.963 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-20 13:21:02.965 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:21:03.359 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:21:03.359 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 13:21:03.359 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:21:03.374 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:21:03.374 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:21:03.374 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:21:03.375 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:21:03.375 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:21:03.375 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:21:03.375 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:21:03.375 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:21:03.375 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:21:03.388 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:21:03.388 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:21:03.389 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:21:03.389 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:21:03.389 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:21:03.389 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:21:03.389 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:21:03.389 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:21:03.390 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:21:03.390 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:21:03.390 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:21:03.390 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:21:03.390 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:21:03.390 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:21:03.390 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:21:03.390 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:21:03.390 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:21:03.390 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:21:03.390 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:21:03.390 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:21:03.391 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:21:03.391 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:21:03.391 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:21:03.391 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:21:03.392 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:21:03.392 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:21:03.392 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:21:03.392 [main] DatabaseDAO - Finished setting parameters to insert an email.
[INFO ] 2020-11-20 13:21:03.393 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:21:03.737 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:21:03.749 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:21:03.750 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 13:21:03.750 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:21:03.751 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:21:04.055 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 13:21:04.056 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 13:21:04.056 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:21:04.365 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 13:21:04.365 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:21:04.380 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:21:04.381 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:21:04.381 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:21:04.381 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:21:04.381 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:21:04.382 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:21:04.382 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:21:04.382 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 13:21:04.383 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:21:04.890 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:21:04.901 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:21:04.901 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 13:21:04.902 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:21:04.903 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:21:05.233 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:21:05.252 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:21:05.253 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 13:21:05.254 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:21:05.255 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:22.708 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:23.122 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:23.150 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:23.183 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:23.212 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:23.242 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:23.266 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:23.292 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:23.315 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:23.343 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:23.369 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:23.389 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:23.413 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:58.472 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:59.047 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:59.119 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:59.192 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:59.273 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:59.354 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:59.426 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:59.511 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:59.579 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:59.653 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:59.729 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:59.847 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:50:59.915 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:52:33.222 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:52:33.888 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:52:33.913 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:52:33.913 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:52:33.913 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:52:33.913 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:52:33.914 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:52:33.914 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:52:33.914 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:52:33.929 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:52:33.929 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:52:33.929 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:52:33.929 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:52:33.930 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:52:33.930 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:52:33.930 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:52:33.930 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:52:33.931 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:52:33.931 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:52:33.931 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:52:33.931 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:52:33.931 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:52:33.933 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:52:33.933 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:52:33.935 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:52:33.935 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:52:33.935 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:52:33.935 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:52:33.937 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:52:33.937 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 13:52:33.941 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:52:33.941 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 13:52:33.945 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:52:34.227 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:52:34.245 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:52:34.246 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 13:52:34.249 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 13:52:34.249 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:52:34.541 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 13:52:34.557 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:52:34.557 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 13:52:34.558 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:52:34.558 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 13:52:34.558 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:52:34.559 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:52:34.559 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 13:52:34.559 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 13:52:34.560 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:52:34.561 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:52:34.911 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 13:52:34.911 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:52:34.930 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:52:34.930 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:52:34.931 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:52:34.934 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:52:34.934 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:52:34.934 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:52:34.938 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:52:34.938 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 13:52:34.946 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:52:35.224 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:52:35.237 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:52:35.237 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:52:35.237 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:52:35.237 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:52:35.237 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:52:35.237 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:52:35.238 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:52:35.238 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:52:35.239 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:52:35.239 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:52:35.239 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:52:35.239 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:52:35.239 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:52:35.239 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:52:35.239 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:52:35.239 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:52:35.240 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:52:35.240 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:52:35.240 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:52:35.240 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:52:35.240 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:52:35.241 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:52:35.242 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:52:35.242 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:52:35.242 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:52:35.242 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:52:35.243 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:52:35.243 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 13:52:35.246 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:52:35.246 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 13:52:35.247 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:52:35.664 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:52:35.664 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 13:52:35.664 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:52:35.686 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:52:35.686 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:52:35.686 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:52:35.690 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:52:35.690 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:52:35.690 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:52:35.693 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:52:35.694 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:52:35.694 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:52:35.708 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:52:35.709 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:52:35.709 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:52:35.709 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:52:35.709 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:52:35.709 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:52:35.709 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:52:35.710 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:52:35.710 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:52:35.710 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:52:35.710 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:52:35.711 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:52:35.711 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:52:35.711 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:52:35.711 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:52:35.711 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:52:35.711 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:52:35.711 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:52:35.712 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:52:35.712 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:52:35.712 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:52:35.712 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:52:35.713 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:52:35.714 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:52:35.995 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:52:35.995 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 13:52:35.995 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:52:36.011 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:52:36.011 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:52:36.011 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:52:36.012 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:52:36.012 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:52:36.012 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:52:36.013 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:52:36.013 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:52:36.013 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:52:36.032 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:52:36.032 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:52:36.032 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:52:36.032 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:52:36.032 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:52:36.032 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:52:36.032 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:52:36.033 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:52:36.033 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:52:36.033 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:52:36.033 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:52:36.033 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:52:36.033 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:52:36.033 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:52:36.033 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:52:36.033 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:52:36.033 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:52:36.034 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:52:36.034 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:52:36.034 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:52:36.034 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:52:36.034 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:52:36.035 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:52:36.035 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:52:36.312 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:52:36.324 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:52:36.324 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 13:52:36.325 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:52:36.325 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:52:36.672 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 13:52:36.672 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 13:52:36.673 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:52:36.979 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 13:52:36.979 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:52:36.992 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:52:36.992 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:52:36.992 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:52:36.993 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:52:36.993 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:52:36.993 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:52:36.994 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:52:36.994 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 13:52:36.994 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:52:37.443 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:52:37.456 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:52:37.457 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 13:52:37.457 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:52:37.458 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:52:37.816 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:52:37.838 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:52:37.838 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 13:52:37.840 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:52:37.840 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 13:56:50.561 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:56:51.267 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:56:51.293 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:56:51.293 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:56:51.294 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:56:51.294 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:56:51.294 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:56:51.294 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:56:51.294 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:56:51.306 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:56:51.307 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:56:51.307 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:56:51.307 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:56:51.307 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:56:51.307 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:56:51.307 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:56:51.308 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:56:51.308 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:56:51.308 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:56:51.308 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:56:51.308 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:56:51.308 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:56:51.310 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:56:51.310 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:56:51.311 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:56:51.311 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:56:51.311 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:56:51.311 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:56:51.313 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:56:51.313 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 13:56:51.316 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:56:51.316 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 13:56:51.320 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:56:51.608 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:56:51.629 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:56:51.630 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 13:56:51.633 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 13:56:51.634 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:56:51.988 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 13:56:52.005 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:56:52.005 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 13:56:52.006 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:56:52.006 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 13:56:52.007 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:56:52.007 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:56:52.007 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 13:56:52.007 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 13:56:52.008 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:56:52.009 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:56:52.342 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 13:56:52.342 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:56:52.363 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:56:52.363 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:56:52.363 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:56:52.367 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:56:52.367 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:56:52.367 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:56:52.371 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:56:52.371 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 13:56:52.377 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:56:52.674 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:56:52.688 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:56:52.688 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:56:52.689 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:56:52.689 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:56:52.689 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:56:52.689 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:56:52.689 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:56:52.690 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:56:52.690 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:56:52.690 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:56:52.691 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:56:52.691 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:56:52.691 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:56:52.691 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:56:52.691 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:56:52.691 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:56:52.691 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:56:52.691 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:56:52.692 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:56:52.692 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:56:52.692 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:56:52.693 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:56:52.693 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:56:52.694 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 13:56:52.694 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 13:56:52.694 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 13:56:52.694 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:56:52.695 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 13:56:52.697 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:56:52.698 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 13:56:52.698 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:56:53.216 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:56:53.216 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 13:56:53.216 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:56:53.231 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:56:53.232 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:56:53.232 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:56:53.235 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:56:53.235 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:56:53.235 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:56:53.238 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:56:53.238 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:56:53.238 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:56:53.258 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:56:53.258 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:56:53.258 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:56:53.258 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:56:53.258 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:56:53.258 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:56:53.258 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:56:53.259 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:56:53.260 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:56:53.260 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:56:53.260 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:56:53.260 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:56:53.260 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:56:53.260 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:56:53.260 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:56:53.260 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:56:53.260 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:56:53.261 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:56:53.261 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:56:53.261 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:56:53.261 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:56:53.261 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:56:53.262 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:56:53.263 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:56:53.551 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:56:53.551 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 13:56:53.551 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:56:53.565 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:56:53.565 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:56:53.565 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:56:53.566 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:56:53.566 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:56:53.566 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:56:53.567 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:56:53.567 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:56:53.567 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 13:56:53.582 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:56:53.582 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 13:56:53.582 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 13:56:53.582 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:56:53.582 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 13:56:53.582 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 13:56:53.582 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 13:56:53.583 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 13:56:53.583 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 13:56:53.583 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 13:56:53.583 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 13:56:53.583 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 13:56:53.583 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 13:56:53.583 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 13:56:53.584 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 13:56:53.584 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 13:56:53.584 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 13:56:53.584 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 13:56:53.584 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 13:56:53.584 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 13:56:53.585 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 13:56:53.585 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 13:56:53.586 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:56:53.586 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:56:53.895 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:56:53.924 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:56:53.924 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 13:56:53.926 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:56:53.926 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:56:54.259 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 13:56:54.259 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 13:56:54.260 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:56:54.553 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 13:56:54.553 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 13:56:54.565 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 13:56:54.565 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 13:56:54.565 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 13:56:54.566 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:56:54.566 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 13:56:54.566 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 13:56:54.567 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 13:56:54.567 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 13:56:54.567 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:56:54.837 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:56:54.850 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:56:54.850 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 13:56:54.851 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:56:54.852 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 13:56:55.396 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 13:56:55.410 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 13:56:55.410 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 13:56:55.411 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 13:56:55.411 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 14:42:32.691 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:42:33.848 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:42:33.875 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:42:33.876 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 14:42:33.876 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 14:42:33.876 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:42:33.876 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:42:33.876 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 14:42:33.877 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 14:42:33.887 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 14:42:33.887 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 14:42:33.887 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 14:42:33.887 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 14:42:33.887 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 14:42:33.888 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 14:42:33.888 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 14:42:33.888 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 14:42:33.888 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 14:42:33.888 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 14:42:33.889 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 14:42:33.889 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 14:42:33.889 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 14:42:33.890 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 14:42:33.891 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 14:42:33.893 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:42:33.893 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 14:42:33.893 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 14:42:33.893 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 14:42:33.895 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:42:33.895 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 14:42:33.902 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 14:42:33.902 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 14:42:33.906 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:42:34.491 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:42:34.512 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:42:34.512 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 14:42:34.519 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 14:42:34.520 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:42:35.143 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 14:42:35.162 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:42:35.163 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 14:42:35.164 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:42:35.164 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 14:42:35.164 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 14:42:35.165 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:42:35.165 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 14:42:35.165 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 14:42:35.165 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:42:35.166 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:42:36.227 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 14:42:36.227 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 14:42:36.243 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 14:42:36.243 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 14:42:36.243 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 14:42:36.252 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:42:36.252 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 14:42:36.252 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 14:42:36.264 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:42:36.265 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 14:42:36.271 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:42:37.545 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:42:37.568 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:42:37.569 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 14:42:37.569 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 14:42:37.569 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:42:37.569 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:42:37.569 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 14:42:37.569 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 14:42:37.570 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 14:42:37.571 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 14:42:37.571 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 14:42:37.571 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 14:42:37.571 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 14:42:37.571 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 14:42:37.571 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 14:42:37.571 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 14:42:37.572 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 14:42:37.572 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 14:42:37.572 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 14:42:37.572 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 14:42:37.572 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 14:42:37.573 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 14:42:37.573 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 14:42:37.574 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:42:37.575 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 14:42:37.575 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 14:42:37.575 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 14:42:37.576 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:42:37.576 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 14:42:37.585 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 14:42:37.585 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 14:42:37.586 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:42:38.131 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:42:38.131 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 14:42:38.131 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 14:42:38.160 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 14:42:38.160 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 14:42:38.160 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 14:42:38.169 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:42:38.169 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 14:42:38.170 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 14:42:38.178 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:42:38.178 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 14:42:38.178 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 14:42:38.195 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:42:38.195 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 14:42:38.195 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 14:42:38.195 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:42:38.196 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:42:38.196 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 14:42:38.196 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 14:42:38.196 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 14:42:38.196 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 14:42:38.197 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 14:42:38.197 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 14:42:38.197 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 14:42:38.197 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 14:42:38.197 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 14:42:38.197 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 14:42:38.197 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 14:42:38.197 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 14:42:38.197 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 14:42:38.197 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 14:42:38.197 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 14:42:38.198 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 14:42:38.198 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 14:42:38.199 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:42:38.199 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:42:39.168 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:42:39.168 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 14:42:39.168 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 14:42:39.181 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 14:42:39.181 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 14:42:39.181 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 14:42:39.182 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:42:39.182 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 14:42:39.182 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 14:42:39.183 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:42:39.183 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 14:42:39.183 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 14:42:39.199 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:42:39.200 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 14:42:39.200 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 14:42:39.200 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:42:39.200 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:42:39.200 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 14:42:39.200 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 14:42:39.201 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 14:42:39.201 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 14:42:39.201 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 14:42:39.201 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 14:42:39.201 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 14:42:39.201 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 14:42:39.201 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 14:42:39.202 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 14:42:39.202 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 14:42:39.202 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 14:42:39.202 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 14:42:39.202 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 14:42:39.202 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 14:42:39.202 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 14:42:39.203 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 14:42:39.203 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:42:39.204 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:42:40.249 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:42:40.264 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:42:40.264 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 14:42:40.265 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:42:40.265 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:42:41.321 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 14:42:41.321 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 14:42:41.322 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:42:42.051 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 14:42:42.051 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 14:42:42.075 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 14:42:42.075 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 14:42:42.075 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 14:42:42.077 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:42:42.077 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 14:42:42.077 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 14:42:42.078 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:42:42.078 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 14:42:42.079 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:42:43.061 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:42:43.079 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:42:43.079 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 14:42:43.081 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:42:43.081 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:42:43.960 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:42:43.989 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:42:43.989 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 14:42:43.990 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:42:43.991 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 14:49:10.278 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:49:11.279 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:49:11.305 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:49:11.306 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 14:49:11.306 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 14:49:11.306 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:49:11.306 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:49:11.306 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 14:49:11.306 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 14:49:11.322 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 14:49:11.322 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 14:49:11.322 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 14:49:11.323 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 14:49:11.323 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 14:49:11.323 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 14:49:11.323 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 14:49:11.323 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 14:49:11.324 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 14:49:11.324 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 14:49:11.324 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 14:49:11.324 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 14:49:11.324 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 14:49:11.325 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 14:49:11.326 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 14:49:11.327 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:49:11.327 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 14:49:11.327 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 14:49:11.327 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 14:49:11.329 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:49:11.329 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 14:49:11.337 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 14:49:11.337 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 14:49:11.341 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:49:12.126 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:49:12.146 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:49:12.146 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 14:49:12.154 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 14:49:12.154 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:49:12.637 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 14:49:12.653 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:49:12.654 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 14:49:12.655 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:49:12.655 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 14:49:12.655 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 14:49:12.656 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:49:12.656 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 14:49:12.657 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 14:49:12.658 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:49:12.658 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:49:13.292 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 14:49:13.293 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 14:49:13.307 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 14:49:13.307 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 14:49:13.308 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 14:49:13.315 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:49:13.315 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 14:49:13.316 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 14:49:13.324 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:49:13.324 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 14:49:13.331 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:49:14.359 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:49:14.392 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:49:14.392 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 14:49:14.393 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 14:49:14.393 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:49:14.393 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:49:14.393 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 14:49:14.394 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 14:49:14.395 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 14:49:14.395 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 14:49:14.396 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 14:49:14.396 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 14:49:14.396 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 14:49:14.396 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 14:49:14.397 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 14:49:14.397 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 14:49:14.398 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 14:49:14.398 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 14:49:14.398 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 14:49:14.399 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 14:49:14.400 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 14:49:14.400 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 14:49:14.401 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 14:49:14.402 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:49:14.403 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 14:49:14.403 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 14:49:14.403 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 14:49:14.404 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:49:14.404 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 14:49:14.412 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 14:49:14.412 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 14:49:14.413 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:49:15.136 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:49:15.136 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 14:49:15.136 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 14:49:15.163 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 14:49:15.164 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 14:49:15.164 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 14:49:15.172 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:49:15.172 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 14:49:15.172 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 14:49:15.180 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:49:15.180 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 14:49:15.180 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 14:49:15.202 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:49:15.202 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 14:49:15.202 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 14:49:15.202 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:49:15.202 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:49:15.202 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 14:49:15.203 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 14:49:15.204 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 14:49:15.204 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 14:49:15.204 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 14:49:15.204 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 14:49:15.204 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 14:49:15.204 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 14:49:15.204 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 14:49:15.204 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 14:49:15.204 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 14:49:15.204 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 14:49:15.204 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 14:49:15.204 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 14:49:15.205 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 14:49:15.205 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 14:49:15.205 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 14:49:15.206 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:49:15.207 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:49:16.179 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:49:16.180 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 14:49:16.180 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 14:49:16.193 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 14:49:16.193 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 14:49:16.193 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 14:49:16.193 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:49:16.194 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 14:49:16.194 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 14:49:16.194 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:49:16.194 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 14:49:16.194 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 14:49:16.208 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:49:16.208 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 14:49:16.208 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 14:49:16.208 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:49:16.208 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 14:49:16.208 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 14:49:16.208 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 14:49:16.209 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 14:49:16.209 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 14:49:16.209 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 14:49:16.209 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 14:49:16.209 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 14:49:16.209 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 14:49:16.209 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 14:49:16.210 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 14:49:16.210 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 14:49:16.210 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 14:49:16.210 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 14:49:16.210 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 14:49:16.210 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 14:49:16.210 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 14:49:16.210 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 14:49:16.211 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:49:16.212 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:49:17.348 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:49:17.365 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:49:17.365 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 14:49:17.366 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:49:17.367 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:49:18.060 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 14:49:18.060 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 14:49:18.061 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:49:18.708 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 14:49:18.708 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 14:49:18.732 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 14:49:18.732 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 14:49:18.733 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 14:49:18.735 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:49:18.735 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 14:49:18.735 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 14:49:18.742 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 14:49:18.743 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 14:49:18.743 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:49:19.518 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:49:19.532 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:49:19.532 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 14:49:19.533 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:49:19.533 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 14:49:20.816 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 14:49:20.836 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 14:49:20.836 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 14:49:20.837 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 14:49:20.838 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 16:42:55.980 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:42:57.130 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:42:57.150 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:42:57.150 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:42:57.150 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:42:57.151 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:42:57.151 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:42:57.151 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:42:57.151 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:42:57.162 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:42:57.163 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:42:57.163 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:42:57.163 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:42:57.163 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:42:57.164 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:42:57.164 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:42:57.164 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:42:57.164 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:42:57.164 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:42:57.165 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:42:57.165 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:42:57.165 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:42:57.166 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:42:57.166 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:42:57.167 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:42:57.167 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 16:42:57.168 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 16:42:57.168 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 16:42:57.170 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:42:57.170 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 16:42:57.178 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:42:57.178 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 16:42:57.181 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:42:57.840 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:42:57.862 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:42:57.863 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 16:42:57.870 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 16:42:57.870 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:42:58.476 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 16:42:58.517 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:42:58.518 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 16:42:58.519 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:42:58.519 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 16:42:58.519 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:42:58.520 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:42:58.520 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 16:42:58.521 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 16:42:58.522 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:42:58.522 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:42:59.414 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 16:42:59.414 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:42:59.431 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:42:59.431 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:42:59.431 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:42:59.438 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:42:59.438 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:42:59.439 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:42:59.446 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:42:59.446 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 16:42:59.452 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:43:00.499 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:43:00.518 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:43:00.519 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:43:00.519 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:43:00.519 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:43:00.519 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:43:00.519 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:43:00.520 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:43:00.525 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:43:00.525 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:43:00.525 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:43:00.526 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:43:00.526 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:43:00.526 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:43:00.526 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:43:00.526 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:43:00.526 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:43:00.526 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:43:00.526 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:43:00.527 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:43:00.527 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:43:00.527 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:43:00.528 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:43:00.531 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:43:00.531 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 16:43:00.531 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 16:43:00.532 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 16:43:00.538 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:43:00.538 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 16:43:00.564 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:43:00.565 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 16:43:00.565 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:43:01.160 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:43:01.160 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 16:43:01.160 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:43:01.179 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:43:01.179 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:43:01.179 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:43:01.187 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:43:01.187 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:43:01.187 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:43:01.194 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:43:01.194 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:43:01.194 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:43:01.212 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:43:01.212 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:43:01.212 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:43:01.212 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:43:01.212 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:43:01.212 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:43:01.212 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:43:01.213 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:43:01.214 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:43:01.214 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:43:01.214 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:43:01.214 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:43:01.214 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:43:01.214 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:43:01.214 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:43:01.214 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:43:01.214 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:43:01.215 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:43:01.215 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:43:01.215 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:43:01.215 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:43:01.215 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:43:01.216 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:43:01.217 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:43:01.998 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:43:01.998 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 16:43:01.998 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:43:02.014 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:43:02.014 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:43:02.014 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:43:02.015 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:43:02.015 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:43:02.016 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:43:02.017 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:43:02.017 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:43:02.017 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:43:02.039 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:43:02.039 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:43:02.039 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:43:02.039 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:43:02.040 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:43:02.040 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:43:02.040 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:43:02.041 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:43:02.042 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:43:02.042 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:43:02.042 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:43:02.042 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:43:02.042 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:43:02.042 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:43:02.042 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:43:02.043 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:43:02.043 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:43:02.043 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:43:02.043 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:43:02.043 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:43:02.044 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:43:02.044 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:43:02.045 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:43:02.046 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:43:02.928 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:43:02.966 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:43:02.967 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 16:43:02.969 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:43:02.970 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:43:03.790 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 16:43:03.790 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 16:43:03.791 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:43:04.333 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 16:43:04.333 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:43:04.347 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:43:04.347 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:43:04.347 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:43:04.348 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:43:04.348 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:43:04.348 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:43:04.349 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:43:04.349 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 16:43:04.349 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:43:05.160 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:43:05.175 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:43:05.176 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 16:43:05.177 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:43:05.178 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:43:06.352 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:43:06.390 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:43:06.390 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 16:43:06.391 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:43:06.391 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 16:46:41.434 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:46:42.572 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:46:42.596 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:46:42.596 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:46:42.596 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:46:42.596 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:46:42.597 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:46:42.597 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:46:42.597 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:46:42.608 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:46:42.608 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:46:42.608 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:46:42.608 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:46:42.608 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:46:42.609 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:46:42.609 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:46:42.609 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:46:42.609 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:46:42.609 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:46:42.609 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:46:42.610 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:46:42.610 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:46:42.611 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:46:42.611 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:46:42.612 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:46:42.613 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 16:46:42.613 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 16:46:42.613 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 16:46:42.615 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:46:42.615 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 16:46:42.628 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:46:42.628 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 16:46:42.632 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:46:43.282 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:46:43.308 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:46:43.308 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 16:46:43.317 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 16:46:43.318 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:46:44.042 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 16:46:44.062 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:46:44.063 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 16:46:44.064 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:46:44.064 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 16:46:44.065 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:46:44.066 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:46:44.066 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 16:46:44.066 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 16:46:44.067 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:46:44.067 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:46:45.341 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 16:46:45.341 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:46:45.362 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:46:45.363 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:46:45.363 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:46:45.371 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:46:45.371 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:46:45.371 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:46:45.379 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:46:45.380 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 16:46:45.391 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:46:46.093 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:46:46.106 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:46:46.106 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:46:46.107 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:46:46.107 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:46:46.107 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:46:46.107 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:46:46.107 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:46:46.108 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:46:46.108 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:46:46.108 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:46:46.108 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:46:46.109 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:46:46.109 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:46:46.109 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:46:46.109 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:46:46.109 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:46:46.109 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:46:46.109 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:46:46.110 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:46:46.110 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:46:46.110 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:46:46.110 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:46:46.112 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:46:46.112 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 16:46:46.112 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 16:46:46.112 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 16:46:46.113 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:46:46.113 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 16:46:46.120 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:46:46.120 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 16:46:46.121 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:46:47.014 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:46:47.015 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 16:46:47.015 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:46:47.065 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:46:47.065 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:46:47.065 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:46:47.073 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:46:47.073 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:46:47.074 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:46:47.084 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:46:47.084 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:46:47.084 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:46:47.097 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:46:47.097 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:46:47.097 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:46:47.097 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:46:47.097 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:46:47.097 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:46:47.098 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:46:47.098 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:46:47.098 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:46:47.098 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:46:47.098 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:46:47.098 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:46:47.099 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:46:47.099 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:46:47.099 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:46:47.099 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:46:47.099 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:46:47.099 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:46:47.099 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:46:47.099 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:46:47.100 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:46:47.100 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:46:47.101 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:46:47.101 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:46:48.038 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:46:48.039 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 16:46:48.039 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:46:48.071 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:46:48.071 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:46:48.071 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:46:48.072 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:46:48.073 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:46:48.073 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:46:48.074 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:46:48.074 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:46:48.074 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:46:48.097 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:46:48.097 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:46:48.097 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:46:48.098 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:46:48.098 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:46:48.098 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:46:48.098 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:46:48.099 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:46:48.099 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:46:48.099 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:46:48.099 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:46:48.099 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:46:48.099 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:46:48.099 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:46:48.099 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:46:48.099 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:46:48.099 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:46:48.099 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:46:48.099 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:46:48.100 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:46:48.100 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:46:48.100 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:46:48.101 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:46:48.101 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:46:49.373 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:46:49.397 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:46:49.397 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 16:46:49.398 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:46:49.399 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:46:50.036 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 16:46:50.036 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 16:46:50.036 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:46:51.235 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 16:46:51.236 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:46:51.263 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:46:51.263 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:46:51.263 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:46:51.265 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:46:51.265 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:46:51.265 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:46:51.266 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:46:51.266 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 16:46:51.267 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:46:52.255 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:46:52.297 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:46:52.297 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 16:46:52.298 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:46:52.299 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:46:52.984 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:46:53.025 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:46:53.026 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 16:46:53.027 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:46:53.028 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 16:47:41.373 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:47:42.621 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:47:42.650 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:47:42.650 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:47:42.651 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:47:42.651 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:47:42.651 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:47:42.651 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:47:42.651 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:47:42.665 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:47:42.666 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:47:42.666 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:47:42.666 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:47:42.666 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:47:42.666 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:47:42.666 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:47:42.667 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:47:42.667 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:47:42.667 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:47:42.667 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:47:42.668 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:47:42.668 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:47:42.669 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:47:42.669 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:47:42.671 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:47:42.671 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 16:47:42.671 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 16:47:42.671 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 16:47:42.673 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:47:42.674 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 16:47:42.682 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:47:42.682 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 16:47:42.686 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:47:43.323 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:47:43.342 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:47:43.343 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 16:47:43.349 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 16:47:43.349 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:47:44.076 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 16:47:44.102 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:47:44.102 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 16:47:44.105 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:47:44.105 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 16:47:44.105 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:47:44.106 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:47:44.106 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 16:47:44.106 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 16:47:44.111 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:47:44.112 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:47:45.473 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 16:47:45.473 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:47:45.489 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:47:45.489 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:47:45.489 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:47:45.497 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:47:45.497 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:47:45.497 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:47:45.505 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:47:45.505 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 16:47:45.512 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:47:46.256 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:47:46.272 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:47:46.273 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:47:46.273 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:47:46.273 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:47:46.273 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:47:46.273 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:47:46.273 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:47:46.274 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:47:46.274 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:47:46.274 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:47:46.275 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:47:46.275 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:47:46.275 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:47:46.275 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:47:46.275 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:47:46.275 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:47:46.275 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:47:46.275 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:47:46.276 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:47:46.276 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:47:46.277 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:47:46.277 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:47:46.278 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:47:46.278 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 16:47:46.278 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 16:47:46.278 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 16:47:46.279 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:47:46.279 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 16:47:46.286 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:47:46.286 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 16:47:46.287 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:47:46.760 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:47:46.760 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 16:47:46.760 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:47:46.794 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:47:46.795 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:47:46.795 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:47:46.804 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:47:46.804 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:47:46.804 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:47:46.811 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:47:46.811 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:47:46.812 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:47:46.825 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:47:46.825 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:47:46.825 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:47:46.825 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:47:46.825 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:47:46.825 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:47:46.825 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:47:46.826 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:47:46.826 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:47:46.826 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:47:46.826 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:47:46.826 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:47:46.827 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:47:46.827 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:47:46.827 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:47:46.827 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:47:46.827 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:47:46.827 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:47:46.827 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:47:46.827 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:47:46.828 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:47:46.828 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:47:46.829 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:47:46.830 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:47:47.754 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:47:47.754 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 16:47:47.755 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:47:47.767 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:47:47.767 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:47:47.767 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:47:47.768 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:47:47.768 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:47:47.768 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:47:47.768 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:47:47.768 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:47:47.768 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:47:47.784 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:47:47.784 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:47:47.784 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:47:47.784 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:47:47.784 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:47:47.784 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:47:47.785 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:47:47.785 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:47:47.785 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:47:47.785 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:47:47.785 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:47:47.786 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:47:47.786 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:47:47.786 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:47:47.786 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:47:47.786 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:47:47.786 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:47:47.786 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:47:47.786 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:47:47.786 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:47:47.787 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:47:47.787 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:47:47.787 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:47:47.788 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:47:49.072 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:47:49.123 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:47:49.123 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 16:47:49.125 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:47:49.126 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:47:49.779 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 16:47:49.779 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 16:47:49.780 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:47:50.655 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 16:47:50.656 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:47:50.689 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:47:50.689 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:47:50.689 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:47:50.691 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:47:50.691 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:47:50.691 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:47:50.692 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:47:50.692 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 16:47:50.693 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:47:51.783 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:47:51.816 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:47:51.816 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 16:47:51.817 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:47:51.818 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:47:52.611 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:47:52.640 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:47:52.640 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 16:47:52.642 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:47:52.643 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 16:52:34.736 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:52:36.113 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:52:36.142 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:52:36.143 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:52:36.143 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:52:36.143 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:52:36.143 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:52:36.143 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:52:36.144 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:52:36.159 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:52:36.159 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:52:36.159 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:52:36.159 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:52:36.159 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:52:36.160 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:52:36.160 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:52:36.160 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:52:36.160 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:52:36.160 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:52:36.161 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:52:36.161 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:52:36.161 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:52:36.163 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:52:36.164 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:52:36.166 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:52:36.166 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 16:52:36.167 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 16:52:36.167 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 16:52:36.169 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:52:36.170 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 16:52:36.178 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:52:36.178 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 16:52:36.182 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:52:36.956 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:52:36.991 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:52:36.992 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 16:52:37.000 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 16:52:37.000 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:52:37.920 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 16:52:37.946 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:52:37.946 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 16:52:37.949 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:52:37.949 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 16:52:37.949 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:52:37.950 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:52:37.950 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 16:52:37.951 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 16:52:37.951 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:52:37.952 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:52:39.181 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 16:52:39.181 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:52:39.201 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:52:39.201 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:52:39.201 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:52:39.210 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:52:39.210 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:52:39.211 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:52:39.221 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:52:39.222 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 16:52:39.228 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:52:40.358 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:52:40.388 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:52:40.389 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:52:40.389 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:52:40.389 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:52:40.389 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:52:40.389 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:52:40.390 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:52:40.391 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:52:40.391 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:52:40.391 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:52:40.391 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:52:40.391 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:52:40.391 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:52:40.391 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:52:40.391 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:52:40.392 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:52:40.392 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:52:40.392 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:52:40.393 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:52:40.393 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:52:40.393 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:52:40.394 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:52:40.395 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:52:40.395 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 16:52:40.395 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 16:52:40.395 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 16:52:40.396 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:52:40.396 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 16:52:40.405 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:52:40.405 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 16:52:40.406 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:52:41.197 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:52:41.197 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 16:52:41.197 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:52:41.214 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:52:41.214 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:52:41.215 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:52:41.223 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:52:41.223 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:52:41.223 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:52:41.234 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:52:41.235 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:52:41.235 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:52:41.248 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:52:41.248 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:52:41.248 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:52:41.248 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:52:41.248 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:52:41.249 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:52:41.249 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:52:41.250 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:52:41.250 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:52:41.250 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:52:41.250 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:52:41.250 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:52:41.250 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:52:41.250 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:52:41.250 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:52:41.250 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:52:41.250 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:52:41.250 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:52:41.251 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:52:41.251 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:52:41.251 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:52:41.251 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:52:41.252 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:52:41.253 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:52:42.152 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:52:42.152 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 16:52:42.152 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:52:42.167 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:52:42.167 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:52:42.167 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:52:42.168 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:52:42.168 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:52:42.168 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:52:42.169 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:52:42.169 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:52:42.169 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 16:52:42.187 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:52:42.188 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 16:52:42.188 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 16:52:42.188 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:52:42.188 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 16:52:42.188 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 16:52:42.188 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 16:52:42.189 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 16:52:42.189 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 16:52:42.189 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 16:52:42.189 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 16:52:42.189 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 16:52:42.189 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 16:52:42.190 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 16:52:42.190 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 16:52:42.190 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 16:52:42.190 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 16:52:42.190 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 16:52:42.190 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 16:52:42.190 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 16:52:42.190 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 16:52:42.191 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 16:52:42.191 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:52:42.192 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:52:43.601 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:52:43.622 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:52:43.622 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 16:52:43.623 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:52:43.623 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:52:45.004 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 16:52:45.004 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 16:52:45.005 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:52:45.929 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 16:52:45.929 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 16:52:45.941 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 16:52:45.941 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 16:52:45.941 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 16:52:45.942 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:52:45.942 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 16:52:45.942 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 16:52:45.943 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 16:52:45.943 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 16:52:45.943 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:52:46.892 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:52:46.908 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:52:46.908 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 16:52:46.909 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:52:46.909 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 16:52:48.312 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 16:52:48.331 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 16:52:48.331 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 16:52:48.332 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 16:52:48.333 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:03:38.768 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:03:40.334 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:03:40.362 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:03:40.363 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:03:40.363 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:03:40.363 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:03:40.363 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:03:40.363 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:03:40.364 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:03:40.377 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:03:40.377 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:03:40.377 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:03:40.378 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:03:40.378 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:03:40.379 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:03:40.379 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:03:40.379 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:03:40.379 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:03:40.380 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:03:40.380 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:03:40.380 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:03:40.380 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:03:40.382 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:03:40.383 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:03:40.384 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:03:40.384 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:03:40.384 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:03:40.385 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:03:40.386 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:03:40.386 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:03:40.396 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:03:40.396 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-20 17:03:40.397 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-20 17:03:40.397 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-20 17:03:40.398 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:03:40.398 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:03:40.399 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:03:40.400 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-20 17:03:40.416 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-20 17:03:40.416 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-20 17:03:40.417 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-20 17:03:40.424 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:03:41.240 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:03:41.288 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:03:41.288 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 17:03:41.297 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 17:03:41.297 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:03:42.300 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 17:03:42.332 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:03:42.332 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:03:42.333 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:03:42.333 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 17:03:42.334 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:03:42.334 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:03:42.335 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 17:03:42.335 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 17:03:42.335 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:03:42.336 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:03:44.031 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:03:44.031 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:03:44.052 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:03:44.053 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:03:44.053 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:03:44.075 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:03:44.075 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:03:44.075 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:03:44.106 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:03:44.106 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 17:03:44.107 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:03:45.165 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:03:45.179 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:03:45.180 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:03:45.180 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:03:45.180 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:03:45.180 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:03:45.180 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:03:45.180 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:03:45.181 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:03:45.181 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:03:45.182 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:03:45.182 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:03:45.182 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:03:45.182 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:03:45.182 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:03:45.182 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:03:45.182 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:03:45.182 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:03:45.182 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:03:45.183 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:03:45.183 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:03:45.183 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:03:45.183 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:03:45.184 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:03:45.184 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:03:45.184 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:03:45.184 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:03:45.185 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:03:45.185 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:03:45.194 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:03:45.194 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-20 17:03:45.194 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-20 17:03:45.194 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-20 17:03:45.195 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:03:45.195 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:03:45.196 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:03:45.196 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-20 17:03:45.207 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-20 17:03:45.207 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-20 17:03:45.207 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-20 17:03:45.208 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:03:46.255 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:03:46.255 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:03:46.255 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:03:46.272 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:03:46.272 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:03:46.273 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:03:46.287 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:03:46.287 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:03:46.287 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:03:46.296 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:03:46.296 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:03:46.297 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:03:46.310 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:03:46.310 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:03:46.310 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:03:46.310 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:03:46.311 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:03:46.311 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:03:46.311 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:03:46.313 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:03:46.313 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:03:46.313 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:03:46.313 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:03:46.314 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:03:46.314 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:03:46.314 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:03:46.314 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:03:46.314 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:03:46.314 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:03:46.314 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:03:46.314 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:03:46.314 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:03:46.315 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:03:46.315 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:03:46.316 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:03:46.319 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:03:48.254 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:03:48.254 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:03:48.254 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:03:48.268 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:03:48.268 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:03:48.268 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:03:48.269 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:03:48.269 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:03:48.269 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:03:48.269 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:03:48.269 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:03:48.270 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:03:48.288 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:03:48.288 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:03:48.288 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:03:48.288 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:03:48.288 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:03:48.288 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:03:48.288 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:03:48.289 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:03:48.289 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:03:48.289 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:03:48.290 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:03:48.290 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:03:48.290 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:03:48.290 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:03:48.290 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:03:48.290 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:03:48.290 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:03:48.290 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:03:48.291 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:03:48.291 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:03:48.291 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:03:48.291 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:03:48.292 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:03:48.293 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:03:49.140 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:03:49.166 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:03:49.166 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:03:49.168 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:03:49.169 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:03:50.062 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 17:03:50.062 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 17:03:50.063 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:03:51.118 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:03:51.118 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:03:51.136 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:03:51.137 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:03:51.137 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:03:51.138 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:03:51.138 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:03:51.138 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:03:51.138 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:03:51.138 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 17:03:51.139 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:03:52.179 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:03:52.194 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:03:52.194 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:03:52.195 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:03:52.196 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:03:52.957 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:03:52.974 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:03:52.974 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:03:52.976 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:03:52.976 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:04:42.663 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:04:43.873 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:04:43.906 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:04:43.906 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:04:43.906 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:04:43.906 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:04:43.906 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:04:43.907 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:04:43.907 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:04:43.918 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:04:43.918 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:04:43.918 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:04:43.918 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:04:43.918 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:04:43.919 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:04:43.919 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:04:43.919 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:04:43.919 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:04:43.919 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:04:43.920 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:04:43.920 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:04:43.920 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:04:43.921 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:04:43.922 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:04:43.923 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:04:43.923 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:04:43.923 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:04:43.924 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:04:43.926 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:04:43.926 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:04:43.950 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:04:43.950 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:04:43.954 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:04:44.898 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:04:44.917 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:04:44.918 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 17:04:44.941 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 17:04:44.941 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:04:45.682 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 17:04:45.715 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:04:45.715 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:04:45.717 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:04:45.717 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 17:04:45.718 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:04:45.719 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:04:45.719 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 17:04:45.720 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 17:04:45.720 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:04:45.721 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:04:46.901 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:04:46.901 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:04:46.916 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:04:46.916 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:04:46.917 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:04:46.939 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:04:46.939 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:04:46.940 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:04:46.961 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:04:46.961 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 17:04:46.970 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:04:47.995 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:04:48.012 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:04:48.012 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:04:48.012 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:04:48.012 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:04:48.012 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:04:48.012 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:04:48.012 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:04:48.013 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:04:48.014 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:04:48.014 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:04:48.014 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:04:48.014 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:04:48.014 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:04:48.014 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:04:48.014 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:04:48.014 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:04:48.015 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:04:48.015 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:04:48.015 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:04:48.015 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:04:48.016 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:04:48.016 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:04:48.017 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:04:48.017 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:04:48.017 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:04:48.017 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:04:48.018 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:04:48.018 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:04:48.025 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:04:48.025 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:04:48.026 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:04:48.645 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:04:48.646 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:04:48.646 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:04:48.673 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:04:48.673 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:04:48.674 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:04:48.681 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:04:48.682 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:04:48.682 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:04:48.690 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:04:48.690 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:04:48.690 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:04:48.708 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:04:48.708 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:04:48.708 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:04:48.708 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:04:48.708 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:04:48.708 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:04:48.709 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:04:48.710 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:04:48.710 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:04:48.710 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:04:48.710 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:04:48.710 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:04:48.710 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:04:48.710 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:04:48.710 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:04:48.711 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:04:48.711 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:04:48.711 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:04:48.711 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:04:48.711 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:04:48.712 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:04:48.712 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:04:48.713 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:04:48.713 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:04:49.607 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:04:49.607 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:04:49.607 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:04:49.620 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:04:49.620 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:04:49.620 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:04:49.621 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:04:49.621 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:04:49.621 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:04:49.621 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:04:49.621 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:04:49.621 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:04:49.638 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:04:49.638 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:04:49.638 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:04:49.638 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:04:49.638 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:04:49.638 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:04:49.638 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:04:49.639 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:04:49.639 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:04:49.639 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:04:49.639 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:04:49.639 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:04:49.639 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:04:49.639 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:04:49.639 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:04:49.640 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:04:49.640 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:04:49.640 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:04:49.640 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:04:49.640 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:04:49.640 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:04:49.640 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:04:49.641 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:04:49.642 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:04:50.617 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:04:50.645 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:04:50.645 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:04:50.646 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:04:50.647 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:04:51.351 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 17:04:51.352 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 17:04:51.353 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:04:52.257 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:04:52.257 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:04:52.285 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:04:52.285 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:04:52.285 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:04:52.286 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:04:52.287 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:04:52.287 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:04:52.288 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:04:52.288 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 17:04:52.289 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:04:52.889 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:04:52.922 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:04:52.922 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:04:52.924 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:04:52.924 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:04:54.209 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:04:54.254 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:04:54.254 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:04:54.256 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:04:54.256 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:05:22.048 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:05:23.589 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:05:23.615 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:05:23.615 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:05:23.615 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:05:23.615 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:05:23.615 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:05:23.615 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:05:23.616 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:05:23.628 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:05:23.628 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:05:23.628 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:05:23.628 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:05:23.628 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:05:23.629 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:05:23.629 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:05:23.629 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:05:23.629 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:05:23.629 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:05:23.630 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:05:23.630 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:05:23.630 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:05:23.631 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:05:23.631 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:05:23.632 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:05:23.632 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:05:23.633 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:05:23.633 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:05:23.635 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:05:23.635 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:05:23.645 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:05:23.645 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:05:23.649 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:05:24.740 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:05:24.765 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:05:24.765 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 17:05:24.775 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 17:05:24.775 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:05:25.702 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 17:05:25.731 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:05:25.731 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:05:25.733 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:05:25.733 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 17:05:25.734 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:05:25.735 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:05:25.736 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 17:05:25.736 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 17:05:25.737 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:05:25.738 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:05:27.121 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:05:27.121 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:05:27.143 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:05:27.143 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:05:27.144 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:05:27.175 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:05:27.175 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:05:27.175 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:05:27.199 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:05:27.199 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 17:05:27.206 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:05:27.718 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:05:27.732 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:05:27.732 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:05:27.732 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:05:27.732 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:05:27.733 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:05:27.733 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:05:27.733 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:05:27.734 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:05:27.734 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:05:27.734 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:05:27.734 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:05:27.734 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:05:27.735 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:05:27.735 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:05:27.735 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:05:27.735 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:05:27.735 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:05:27.735 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:05:27.735 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:05:27.735 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:05:27.736 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:05:27.736 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:05:27.737 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:05:27.737 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:05:27.737 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:05:27.738 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:05:27.738 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:05:27.738 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:05:27.746 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:05:27.746 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:05:27.746 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:05:28.577 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:05:28.577 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:05:28.577 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:05:28.595 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:05:28.595 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:05:28.595 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:05:28.603 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:05:28.603 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:05:28.603 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:05:28.611 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:05:28.611 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:05:28.611 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:05:28.632 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:05:28.632 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:05:28.632 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:05:28.632 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:05:28.632 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:05:28.632 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:05:28.632 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:05:28.633 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:05:28.633 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:05:28.633 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:05:28.633 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:05:28.634 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:05:28.634 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:05:28.634 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:05:28.634 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:05:28.634 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:05:28.634 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:05:28.634 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:05:28.634 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:05:28.634 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:05:28.635 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:05:28.635 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:05:28.636 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:05:28.637 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:05:29.374 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:05:29.374 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:05:29.374 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:05:29.392 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:05:29.392 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:05:29.392 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:05:29.393 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:05:29.393 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:05:29.394 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:05:29.394 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:05:29.394 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:05:29.394 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:05:29.410 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:05:29.410 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:05:29.411 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:05:29.411 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:05:29.411 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:05:29.411 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:05:29.411 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:05:29.412 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:05:29.412 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:05:29.412 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:05:29.412 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:05:29.412 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:05:29.412 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:05:29.412 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:05:29.412 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:05:29.413 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:05:29.413 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:05:29.413 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:05:29.413 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:05:29.413 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:05:29.413 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:05:29.413 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:05:29.414 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:05:29.415 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:05:30.069 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:05:30.109 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:05:30.110 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:05:30.111 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:05:30.112 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:05:31.153 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 17:05:31.154 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 17:05:31.154 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:05:31.890 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:05:31.891 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:05:31.921 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:05:31.921 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:05:31.921 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:05:31.922 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:05:31.922 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:05:31.922 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:05:31.923 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:05:31.923 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 17:05:31.923 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:05:32.758 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:05:32.778 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:05:32.778 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:05:32.780 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:05:32.780 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:05:33.777 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:05:33.807 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:05:33.807 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:05:33.809 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:05:33.810 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:07:04.473 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:07:05.726 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:07:05.753 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:07:05.753 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:07:05.753 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:07:05.753 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:07:05.754 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:07:05.754 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:07:05.754 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:07:05.766 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:07:05.766 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:07:05.766 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:07:05.766 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:07:05.766 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:07:05.767 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:07:05.767 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:07:05.767 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:07:05.767 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:07:05.767 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:07:05.767 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:07:05.768 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:07:05.768 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:07:05.768 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:07:05.769 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:07:05.770 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:07:05.770 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:07:05.770 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:07:05.770 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:07:05.771 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:07:05.772 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:07:05.780 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:07:05.780 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:07:05.785 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:07:06.586 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:07:06.608 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:07:06.608 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 17:07:06.616 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 17:07:06.616 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:07:07.696 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 17:07:07.738 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:07:07.738 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:07:07.740 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:07:07.741 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 17:07:07.741 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:07:07.742 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:07:07.742 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 17:07:07.742 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 17:07:07.743 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:07:07.744 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:07:08.840 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:07:08.840 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:07:08.857 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:07:08.857 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:07:08.858 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:07:08.866 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:07:08.866 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:07:08.867 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:07:08.875 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:07:08.875 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 17:07:08.881 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:07:09.583 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:07:09.596 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:07:09.596 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:07:09.596 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:07:09.596 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:07:09.596 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:07:09.596 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:07:09.597 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:07:09.598 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:07:09.598 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:07:09.598 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:07:09.598 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:07:09.598 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:07:09.598 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:07:09.598 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:07:09.598 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:07:09.598 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:07:09.598 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:07:09.598 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:07:09.599 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:07:09.599 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:07:09.599 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:07:09.600 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:07:09.601 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:07:09.601 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:07:09.601 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:07:09.601 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:07:09.602 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:07:09.602 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:07:09.609 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:07:09.609 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:07:09.610 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:07:10.437 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:07:10.437 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:07:10.437 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:07:10.457 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:07:10.457 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:07:10.457 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:07:10.466 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:07:10.466 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:07:10.466 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:07:10.473 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:07:10.474 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:07:10.474 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:07:10.491 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:07:10.491 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:07:10.491 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:07:10.491 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:07:10.491 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:07:10.491 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:07:10.491 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:07:10.492 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:07:10.493 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:07:10.493 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:07:10.493 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:07:10.493 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:07:10.493 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:07:10.493 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:07:10.493 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:07:10.493 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:07:10.493 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:07:10.493 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:07:10.493 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:07:10.493 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:07:10.494 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:07:10.494 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:07:10.495 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:07:10.496 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:07:11.478 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:07:11.478 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:07:11.478 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:07:11.496 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:07:11.496 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:07:11.496 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:07:11.497 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:07:11.497 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:07:11.497 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:07:11.498 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:07:11.498 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:07:11.498 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:07:11.521 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:07:11.521 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:07:11.521 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:07:11.521 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:07:11.521 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:07:11.521 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:07:11.521 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:07:11.522 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:07:11.523 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:07:11.523 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:07:11.523 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:07:11.523 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:07:11.523 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:07:11.523 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:07:11.523 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:07:11.523 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:07:11.523 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:07:11.523 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:07:11.524 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:07:11.524 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:07:11.524 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:07:11.524 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:07:11.525 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:07:11.525 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:07:12.275 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:07:12.293 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:07:12.294 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:07:12.295 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:07:12.295 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:07:12.882 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 17:07:12.882 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 17:07:12.883 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:07:13.736 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:07:13.736 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:07:13.762 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:07:13.762 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:07:13.762 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:07:13.763 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:07:13.763 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:07:13.764 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:07:13.765 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:07:13.765 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 17:07:13.765 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:07:14.944 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:07:14.980 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:07:14.980 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:07:14.982 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:07:14.982 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:07:15.700 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:07:15.725 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:07:15.725 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:07:15.726 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:07:15.728 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:15:54.050 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:15:55.133 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:15:55.162 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:15:55.163 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:15:55.163 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:15:55.163 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:15:55.163 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:15:55.163 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:15:55.164 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:15:55.174 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:15:55.174 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:15:55.175 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:15:55.175 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:15:55.175 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:15:55.175 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:15:55.175 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:15:55.176 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:15:55.176 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:15:55.176 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:15:55.176 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:15:55.177 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:15:55.177 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:15:55.178 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:15:55.178 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:15:55.179 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:15:55.180 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:15:55.180 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:15:55.180 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:15:55.181 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:15:55.181 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:15:55.189 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:15:55.189 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:15:55.193 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:15:55.799 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:15:55.819 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:15:55.820 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 17:15:55.827 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 17:15:55.827 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:15:56.375 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 17:15:56.404 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:15:56.404 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:15:56.405 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:15:56.405 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 17:15:56.406 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:15:56.406 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:15:56.406 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 17:15:56.406 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 17:15:56.407 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:15:56.408 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:15:57.386 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:15:57.386 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:15:57.403 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:15:57.403 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:15:57.403 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:15:57.410 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:15:57.410 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:15:57.411 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:15:57.417 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:15:57.418 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 17:15:57.424 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:15:58.547 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:15:58.562 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:15:58.562 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:15:58.562 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:15:58.562 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:15:58.562 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:15:58.563 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:15:58.563 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:15:58.564 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:15:58.564 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:15:58.564 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:15:58.564 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:15:58.564 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:15:58.564 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:15:58.564 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:15:58.564 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:15:58.565 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:15:58.565 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:15:58.565 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:15:58.565 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:15:58.565 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:15:58.566 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:15:58.566 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:15:58.567 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:15:58.567 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:15:58.567 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:15:58.568 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:15:58.568 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:15:58.569 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:15:58.597 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:15:58.597 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:15:58.598 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:15:59.175 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:15:59.175 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:15:59.176 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:15:59.192 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:15:59.193 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:15:59.193 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:15:59.201 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:15:59.202 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:15:59.202 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:15:59.211 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:15:59.211 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:15:59.212 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:15:59.225 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:15:59.225 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:15:59.225 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:15:59.225 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:15:59.225 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:15:59.226 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:15:59.226 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:15:59.227 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:15:59.227 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:15:59.227 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:15:59.227 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:15:59.227 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:15:59.227 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:15:59.227 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:15:59.227 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:15:59.227 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:15:59.228 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:15:59.228 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:15:59.228 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:15:59.228 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:15:59.228 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:15:59.228 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:15:59.229 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:15:59.230 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:16:00.141 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:16:00.141 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:16:00.141 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:16:00.162 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:16:00.162 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:16:00.162 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:16:00.163 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:16:00.163 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:16:00.163 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:16:00.164 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:16:00.164 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:16:00.164 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:16:00.186 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:16:00.186 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:16:00.186 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:16:00.186 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:16:00.186 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:16:00.186 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:16:00.186 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:16:00.187 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:16:00.187 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:16:00.187 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:16:00.188 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:16:00.188 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:16:00.188 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:16:00.188 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:16:00.188 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:16:00.188 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:16:00.188 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:16:00.188 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:16:00.188 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:16:00.188 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:16:00.189 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:16:00.189 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:16:00.190 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:16:00.190 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:16:01.188 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:16:01.213 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:16:01.214 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:16:01.215 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:16:01.216 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:16:01.842 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 17:16:01.843 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 17:16:01.843 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:16:02.477 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:16:02.477 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:16:02.490 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:16:02.490 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:16:02.490 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:16:02.491 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:16:02.491 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:16:02.491 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:16:02.491 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:16:02.491 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 17:16:02.492 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:16:03.458 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:16:03.484 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:16:03.484 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:16:03.485 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:16:03.486 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:16:05.239 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:16:05.267 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:16:05.267 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:16:05.269 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:16:05.269 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:19:30.081 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:19:31.087 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:19:31.115 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:19:31.116 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:19:31.116 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:19:31.116 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:19:31.116 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:19:31.116 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:19:31.117 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:19:31.127 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:19:31.128 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:19:31.128 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:19:31.128 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:19:31.128 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:19:31.128 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:19:31.128 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:19:31.128 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:19:31.129 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:19:31.129 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:19:31.129 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:19:31.129 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:19:31.129 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:19:31.131 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:19:31.131 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:19:31.132 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:19:31.132 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:19:31.132 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:19:31.132 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:19:31.134 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:19:31.134 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:19:31.142 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:19:31.142 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:19:31.146 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:19:31.985 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:19:32.002 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:19:32.003 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 17:19:32.010 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 17:19:32.010 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:19:32.721 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 17:19:32.750 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:19:32.750 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:19:32.752 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:19:32.752 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 17:19:32.752 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:19:32.754 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:19:32.754 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 17:19:32.754 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 17:19:32.756 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:19:32.756 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:19:33.334 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:19:33.334 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:19:33.351 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:19:33.351 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:19:33.351 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:19:33.361 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:19:33.361 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:19:33.362 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:19:33.369 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:19:33.370 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 17:19:33.375 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:19:34.698 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:19:34.723 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:19:34.723 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:19:34.723 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:19:34.723 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:19:34.724 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:19:34.724 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:19:34.724 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:19:34.725 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:19:34.725 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:19:34.725 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:19:34.725 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:19:34.725 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:19:34.725 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:19:34.726 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:19:34.726 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:19:34.726 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:19:34.726 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:19:34.726 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:19:34.727 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:19:34.727 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:19:34.727 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:19:34.728 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:19:34.729 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:19:34.729 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:19:34.729 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:19:34.729 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:19:34.730 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:19:34.730 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:19:34.737 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:19:34.737 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:19:34.738 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:19:35.515 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:19:35.515 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:19:35.515 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:19:35.545 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:19:35.545 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:19:35.546 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:19:35.550 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:19:35.550 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:19:35.550 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:19:35.554 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:19:35.554 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:19:35.554 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:19:35.570 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:19:35.570 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:19:35.570 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:19:35.570 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:19:35.570 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:19:35.570 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:19:35.570 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:19:35.571 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:19:35.571 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:19:35.571 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:19:35.571 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:19:35.571 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:19:35.572 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:19:35.572 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:19:35.572 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:19:35.572 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:19:35.572 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:19:35.572 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:19:35.572 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:19:35.573 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:19:35.573 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:19:35.573 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:19:35.574 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:19:35.575 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:19:36.395 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:19:36.396 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:19:36.396 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:19:36.416 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:19:36.416 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:19:36.416 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:19:36.417 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:19:36.417 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:19:36.417 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:19:36.418 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:19:36.418 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:19:36.418 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:19:36.438 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:19:36.438 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:19:36.438 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:19:36.438 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:19:36.438 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:19:36.438 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:19:36.438 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:19:36.439 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:19:36.439 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:19:36.439 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:19:36.439 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:19:36.439 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:19:36.439 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:19:36.439 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:19:36.439 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:19:36.440 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:19:36.440 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:19:36.440 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:19:36.440 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:19:36.440 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:19:36.440 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:19:36.440 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:19:36.441 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:19:36.441 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:19:37.016 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:19:37.030 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:19:37.030 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:19:37.031 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:19:37.031 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:19:38.422 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 17:19:38.423 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 17:19:38.423 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:19:38.988 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:19:38.989 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:19:39.014 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:19:39.014 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:19:39.015 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:19:39.016 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:19:39.016 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:19:39.016 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:19:39.018 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:19:39.018 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 17:19:39.019 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:19:39.897 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:19:39.922 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:19:39.922 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:19:39.924 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:19:39.924 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:19:40.859 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:19:40.888 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:19:40.888 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:19:40.890 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:19:40.891 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:21:28.356 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:21:29.640 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:21:29.671 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:21:29.671 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:21:29.671 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:21:29.671 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:21:29.671 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:21:29.671 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:21:29.672 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:21:29.684 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:21:29.684 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:21:29.684 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:21:29.684 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:21:29.684 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:21:29.685 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:21:29.685 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:21:29.685 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:21:29.685 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:21:29.685 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:21:29.686 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:21:29.686 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:21:29.686 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:21:29.687 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:21:29.687 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:21:29.689 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:21:29.689 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:21:29.689 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:21:29.689 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:21:29.691 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:21:29.691 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:21:29.699 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:21:29.699 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:21:29.704 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:21:30.366 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:21:30.387 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:21:30.387 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 17:21:30.392 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 17:21:30.393 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:21:30.969 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 17:21:30.999 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:21:30.999 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:21:31.001 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:21:31.001 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 17:21:31.001 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:21:31.003 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:21:31.003 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 17:21:31.003 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 17:21:31.004 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:21:31.005 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:21:31.999 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:21:31.999 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:21:32.017 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:21:32.017 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:21:32.017 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:21:32.025 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:21:32.025 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:21:32.025 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:21:32.033 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:21:32.033 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 17:21:32.038 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:21:33.113 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:21:33.150 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:21:33.150 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:21:33.151 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:21:33.151 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:21:33.151 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:21:33.151 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:21:33.151 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:21:33.152 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:21:33.152 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:21:33.152 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:21:33.153 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:21:33.153 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:21:33.153 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:21:33.153 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:21:33.153 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:21:33.153 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:21:33.153 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:21:33.153 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:21:33.153 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:21:33.153 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:21:33.154 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:21:33.154 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:21:33.155 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:21:33.155 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:21:33.155 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:21:33.155 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:21:33.156 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:21:33.156 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:21:33.182 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:21:33.182 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:21:33.183 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:21:33.862 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:21:33.862 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:21:33.862 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:21:33.902 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:21:33.902 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:21:33.902 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:21:33.910 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:21:33.910 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:21:33.911 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:21:33.921 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:21:33.921 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:21:33.921 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:21:33.936 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:21:33.936 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:21:33.936 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:21:33.936 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:21:33.936 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:21:33.936 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:21:33.937 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:21:33.937 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:21:33.937 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:21:33.937 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:21:33.938 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:21:33.938 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:21:33.938 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:21:33.938 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:21:33.938 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:21:33.938 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:21:33.938 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:21:33.938 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:21:33.938 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:21:33.939 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:21:33.939 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:21:33.939 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:21:33.940 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:21:33.941 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:21:34.876 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:21:34.876 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:21:34.876 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:21:34.932 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:21:34.932 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:21:34.932 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:21:34.933 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:21:34.933 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:21:34.933 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:21:34.934 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:21:34.934 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:21:34.935 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 17:21:34.955 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:21:34.956 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:21:34.956 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:21:34.956 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:21:34.956 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:21:34.956 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:21:34.956 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:21:34.957 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:21:34.957 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:21:34.957 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:21:34.957 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:21:34.957 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:21:34.957 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:21:34.957 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:21:34.957 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:21:34.958 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:21:34.958 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:21:34.958 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:21:34.958 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:21:34.958 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:21:34.958 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:21:34.959 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:21:34.959 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:21:34.960 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:21:36.151 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:21:36.170 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:21:36.171 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:21:36.172 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:21:36.173 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:21:36.770 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 17:21:36.770 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 17:21:36.771 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:21:37.643 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:21:37.644 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:21:37.666 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 17:21:37.666 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 17:21:37.666 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 17:21:37.667 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:21:37.668 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 17:21:37.668 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 17:21:37.669 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:21:37.669 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 17:21:37.670 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:21:38.539 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:21:38.553 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:21:38.553 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:21:38.554 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:21:38.555 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:21:39.361 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:21:39.384 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:21:39.384 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:21:39.386 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:21:39.387 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:12.249 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:12.977 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:13.142 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:13.618 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:13.889 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:14.131 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:14.413 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:14.665 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:14.933 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:15.199 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:15.813 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:16.189 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:16.924 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:57.224 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:57.984 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:58.330 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:58.766 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:59.220 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:31:59.510 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:32:00.133 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:32:00.467 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:32:00.951 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:32:01.259 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:32:01.562 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:32:02.199 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:32:02.507 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:34:14.003 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:34:14.798 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:34:15.241 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:34:15.589 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:34:16.057 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:34:16.373 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:34:16.699 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:34:17.317 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:34:17.640 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:34:18.325 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:34:18.635 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:34:19.104 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:34:19.431 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:37:29.199 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:37:29.871 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:37:30.120 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:37:30.331 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:37:30.780 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:37:31.004 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:37:31.230 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:37:31.513 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:37:31.741 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:37:31.950 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:37:32.158 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:37:32.371 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:38:06.023 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:38:06.716 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:38:07.069 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:38:07.340 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:38:07.601 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:38:07.958 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:38:08.207 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:38:08.511 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:38:09.051 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:38:09.425 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:38:09.663 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:38:09.918 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:40:08.465 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:40:09.484 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:40:09.510 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:40:09.510 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:40:09.510 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:40:09.511 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:40:09.511 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:40:09.511 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:40:09.511 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:40:09.524 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:40:09.524 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:40:09.524 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:40:09.524 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:40:09.524 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:40:09.525 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:40:09.525 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:40:09.525 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:40:09.525 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:40:09.526 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:40:09.526 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:40:09.526 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:40:09.526 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:40:09.527 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:40:09.528 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:40:09.529 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:40:09.529 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:40:09.529 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:40:09.530 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:40:09.532 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:40:09.532 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:40:09.539 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:40:09.539 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:40:09.543 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:40:10.304 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:40:10.325 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:40:10.326 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 17:40:10.331 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 17:40:10.332 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:40:10.958 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 17:40:10.985 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:40:10.985 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:40:10.986 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:40:10.987 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 17:40:10.987 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:40:10.988 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:40:10.988 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 17:40:10.988 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 17:40:10.989 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:40:10.990 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:40:11.536 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:40:11.536 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:40:11.556 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:40:11.556 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 17:40:11.569 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:40:12.467 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:40:12.467 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:40:12.468 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:40:12.487 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:40:12.487 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 17:40:12.491 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:40:13.383 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:40:13.383 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:40:13.383 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:40:13.400 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:40:13.400 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 17:40:13.402 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:40:14.339 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:40:14.371 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:40:14.371 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:40:14.372 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:40:14.373 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:40:15.198 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 17:40:15.198 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 17:40:15.199 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:40:15.782 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 17:40:15.782 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:40:15.796 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:40:15.797 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 17:40:15.799 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:40:16.725 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:40:16.745 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:40:16.745 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:40:16.746 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:40:16.746 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:40:17.507 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:40:17.537 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:40:17.538 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:40:17.541 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:40:17.541 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:41:36.509 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:41:37.482 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:41:37.504 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:41:37.505 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:41:37.505 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:41:37.505 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:41:37.505 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:41:37.505 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:41:37.506 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:41:37.519 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:41:37.519 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:41:37.520 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:41:37.520 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:41:37.520 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:41:37.520 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:41:37.520 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:41:37.521 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:41:37.521 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:41:37.521 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:41:37.521 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:41:37.521 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:41:37.522 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:41:37.523 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:41:37.523 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:41:37.525 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:41:37.525 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:41:37.525 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:41:37.525 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:41:37.527 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:41:37.527 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:41:37.534 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:41:37.534 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:41:37.538 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:41:38.439 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:41:38.459 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:41:38.460 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 17:41:38.467 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 17:41:38.468 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:41:39.293 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 17:41:39.312 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:41:39.313 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:41:39.314 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:41:39.314 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 17:41:39.315 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:41:39.315 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:41:39.315 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 17:41:39.316 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 17:41:39.316 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:41:39.317 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:41:40.097 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:41:40.097 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:41:40.098 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:41:40.132 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:41:40.132 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 17:41:40.144 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:41:40.945 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:41:40.966 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:41:40.966 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:41:40.967 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:41:40.968 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:41:42.064 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 17:41:42.064 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 17:41:42.065 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:41:42.909 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:41:42.923 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:41:42.923 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:41:42.925 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:41:42.925 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:41:43.617 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:41:43.641 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:41:43.642 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:41:43.644 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:41:43.644 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:43:32.945 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:43:34.077 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:43:34.112 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:43:34.112 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:43:34.112 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:43:34.113 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:43:34.113 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:43:34.113 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:43:34.113 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:43:34.126 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:43:34.126 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:43:34.126 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:43:34.126 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:43:34.127 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:43:34.127 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:43:34.127 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:43:34.127 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:43:34.128 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:43:34.128 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:43:34.128 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:43:34.128 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:43:34.128 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:43:34.129 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:43:34.130 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:43:34.131 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:43:34.131 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:43:34.131 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:43:34.132 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:43:34.133 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:43:34.134 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:43:34.141 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:43:34.141 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:43:34.146 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:43:34.792 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:43:34.831 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:43:34.832 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 17:43:34.839 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 17:43:34.839 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:43:35.373 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 17:43:35.390 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:43:35.390 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:43:35.391 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:43:35.392 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 17:43:35.392 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:43:35.393 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:43:35.393 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 17:43:35.393 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 17:43:35.394 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:43:35.395 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:43:36.502 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:43:36.502 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:43:36.503 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:43:36.518 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:43:36.519 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 17:43:36.525 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:43:37.645 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:43:37.659 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:43:37.659 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:43:37.662 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:43:37.662 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:43:38.313 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 17:43:38.313 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 17:43:38.314 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:43:39.245 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:43:39.258 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:43:39.259 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:43:39.260 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:43:39.260 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:43:40.330 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:43:40.347 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:43:40.347 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:43:40.348 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:43:40.348 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 17:57:15.523 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:57:16.692 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:57:16.722 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:57:16.722 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 17:57:16.722 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 17:57:16.722 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:57:16.722 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 17:57:16.722 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 17:57:16.723 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 17:57:16.733 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:57:16.733 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 17:57:16.733 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 17:57:16.733 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 17:57:16.733 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 17:57:16.734 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 17:57:16.734 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 17:57:16.734 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 17:57:16.734 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 17:57:16.734 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 17:57:16.734 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 17:57:16.734 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 17:57:16.735 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 17:57:16.735 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 17:57:16.736 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:57:16.737 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:57:16.737 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 17:57:16.738 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 17:57:16.738 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 17:57:16.740 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:57:16.740 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 17:57:16.748 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 17:57:16.748 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 17:57:16.752 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:57:17.327 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:57:17.347 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:57:17.347 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 17:57:17.355 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 17:57:17.355 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:57:18.048 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 17:57:18.091 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:57:18.091 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:57:18.092 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:57:18.093 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 17:57:18.093 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 17:57:18.093 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 17:57:18.094 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 17:57:18.094 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 17:57:18.095 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:57:18.095 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:57:19.257 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:57:19.257 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 17:57:19.257 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 17:57:19.272 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:57:19.272 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 17:57:19.279 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:57:20.288 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:57:20.304 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:57:20.305 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 17:57:20.306 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:57:20.306 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:57:21.188 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 17:57:21.188 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 17:57:21.189 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:57:21.783 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:57:21.798 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:57:21.799 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:57:21.800 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:57:21.800 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 17:57:22.489 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 17:57:22.510 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 17:57:22.510 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 17:57:22.515 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 17:57:22.516 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 19:36:26.418 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:36:27.203 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:36:27.228 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:36:27.228 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 19:36:27.228 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 19:36:27.228 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:36:27.228 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:36:27.229 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 19:36:27.229 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:36:27.244 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:36:27.244 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:36:27.244 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:36:27.244 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 19:36:27.244 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 19:36:27.245 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 19:36:27.245 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 19:36:27.245 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 19:36:27.245 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 19:36:27.245 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 19:36:27.245 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 19:36:27.245 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 19:36:27.245 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 19:36:27.246 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 19:36:27.246 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:36:27.248 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:36:27.248 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 19:36:27.248 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:36:27.248 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:36:27.250 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:36:27.250 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 19:36:27.254 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:36:27.254 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 19:36:27.258 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:36:27.606 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:36:27.625 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:36:27.625 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 19:36:27.629 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 19:36:27.629 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:36:27.935 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 19:36:27.954 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:36:27.954 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:36:27.956 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:36:27.956 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 19:36:27.956 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:36:27.957 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:36:27.957 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:36:27.957 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 19:36:27.958 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:36:27.959 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:36:28.271 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:36:28.271 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 19:36:28.272 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:36:28.293 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:36:28.294 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:36:28.300 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:36:28.691 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:36:28.706 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:36:28.707 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:36:28.707 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:36:28.708 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:36:29.137 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 19:36:29.137 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 19:36:29.138 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:36:29.503 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:36:29.518 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:36:29.519 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:36:29.520 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:36:29.520 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:36:29.520 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:36:29.527 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:36:29.835 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:36:29.848 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:36:29.848 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:36:29.850 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:36:29.850 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:36:29.851 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:36:29.851 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:36:29.852 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 19:37:02.527 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:37:03.520 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:37:03.545 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:37:03.545 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 19:37:03.545 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 19:37:03.545 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:37:03.545 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:37:03.546 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 19:37:03.546 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:37:03.558 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:37:03.559 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:37:03.559 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:37:03.559 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 19:37:03.559 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 19:37:03.559 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 19:37:03.560 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 19:37:03.560 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 19:37:03.560 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 19:37:03.560 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 19:37:03.560 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 19:37:03.561 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 19:37:03.561 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 19:37:03.562 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 19:37:03.562 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:37:03.564 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:37:03.564 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 19:37:03.564 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:37:03.565 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:37:03.567 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:37:03.567 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 19:37:03.575 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:37:03.575 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 19:37:03.581 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:37:04.417 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:37:04.439 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:37:04.439 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 19:37:04.446 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 19:37:04.447 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:37:05.032 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 19:37:05.050 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:37:05.050 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:37:05.051 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:37:05.052 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 19:37:05.052 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:37:05.053 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:37:05.053 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:37:05.053 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 19:37:05.054 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:37:05.055 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:37:05.662 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:37:05.662 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 19:37:05.662 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:37:05.680 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:37:05.680 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:37:05.686 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:37:06.696 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:37:06.714 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:37:06.714 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:37:06.715 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:37:06.715 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:37:07.307 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 19:37:07.307 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 19:37:07.307 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:37:08.226 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:37:08.242 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:37:08.242 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:37:08.243 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:37:08.244 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:37:08.244 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:37:08.251 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:37:08.986 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:37:09.000 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:37:09.000 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:37:09.003 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:37:09.004 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:37:09.004 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:37:09.004 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:37:09.006 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 19:38:29.698 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:38:30.863 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:38:30.889 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:38:30.889 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 19:38:30.890 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 19:38:30.890 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:38:30.890 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:38:30.890 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 19:38:30.891 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:38:30.906 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:38:30.906 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:38:30.906 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:38:30.906 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 19:38:30.906 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 19:38:30.907 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 19:38:30.907 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 19:38:30.907 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 19:38:30.907 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 19:38:30.908 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 19:38:30.908 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 19:38:30.908 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 19:38:30.908 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 19:38:30.910 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 19:38:30.910 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:38:30.911 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:38:30.912 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 19:38:30.912 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:38:30.912 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:38:30.914 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:38:30.914 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 19:38:30.922 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:38:30.922 [main] DatabaseDAO - Attempting to get the generated keys.
[INFO ] 2020-11-20 19:38:30.927 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:38:31.572 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:38:31.592 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:38:31.592 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 19:38:31.600 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 19:38:31.600 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:38:32.129 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 19:38:32.146 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:38:32.147 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:38:32.148 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:38:32.148 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 19:38:32.148 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:38:32.149 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:38:32.149 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:38:32.149 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 19:38:32.150 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:38:32.151 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:38:33.318 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:38:33.318 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 19:38:33.318 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:38:33.338 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:38:33.338 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:38:33.345 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:38:34.448 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:38:34.464 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:38:34.465 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:38:34.466 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:38:34.466 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:38:35.108 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 19:38:35.108 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 19:38:35.109 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:38:35.917 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:38:35.932 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:38:35.933 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:38:35.934 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:38:35.934 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:38:35.934 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:38:35.935 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:38:36.496 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:38:36.518 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:38:36.518 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:38:36.521 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:38:36.521 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:38:36.522 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:38:36.522 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:38:36.527 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 19:42:33.239 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:42:34.277 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:42:34.304 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:42:34.304 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 19:42:34.304 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 19:42:34.304 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:42:34.304 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:42:34.305 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 19:42:34.305 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:42:34.317 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:42:34.317 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:42:34.317 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:42:34.317 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 19:42:34.317 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 19:42:34.318 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 19:42:34.318 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 19:42:34.318 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 19:42:34.318 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 19:42:34.318 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 19:42:34.318 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 19:42:34.319 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 19:42:34.319 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 19:42:34.320 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 19:42:34.320 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:42:34.321 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:42:34.321 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 19:42:34.322 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:42:34.322 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:42:34.323 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:42:34.324 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 19:42:34.331 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:42:34.331 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-20 19:42:34.332 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-20 19:42:34.332 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-20 19:42:34.333 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:42:34.333 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:42:34.334 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:42:34.334 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-20 19:42:34.342 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-20 19:42:34.342 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-20 19:42:34.342 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-20 19:42:34.349 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:42:35.214 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:42:35.239 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:42:35.239 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 19:42:35.247 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 19:42:35.248 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:42:35.904 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 19:42:35.927 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:42:35.928 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:42:35.929 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:42:35.929 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 19:42:35.930 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:42:35.931 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:42:35.931 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:42:35.931 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 19:42:35.932 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:42:35.933 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:42:36.621 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 19:42:36.622 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:42:36.665 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:42:36.666 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:42:36.697 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:42:37.817 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:42:37.839 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:42:37.839 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 19:42:37.840 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 19:42:37.840 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:42:37.840 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:42:37.840 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 19:42:37.840 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:42:37.841 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:42:37.842 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:42:37.842 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:42:37.842 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 19:42:37.842 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 19:42:37.842 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 19:42:37.842 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 19:42:37.843 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 19:42:37.843 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 19:42:37.843 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 19:42:37.843 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 19:42:37.843 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 19:42:37.844 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 19:42:37.844 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 19:42:37.845 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:42:37.847 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:42:37.847 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 19:42:37.847 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:42:37.848 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:42:37.849 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:42:37.849 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 19:42:37.858 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:42:37.858 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-20 19:42:37.858 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-20 19:42:37.858 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-20 19:42:37.859 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:42:37.859 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:42:37.860 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:42:37.860 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-20 19:42:37.870 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-20 19:42:37.870 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-20 19:42:37.870 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-20 19:42:37.871 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:42:38.503 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:42:38.503 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 19:42:38.503 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:42:38.519 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:42:38.520 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:42:38.523 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:42:39.465 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:42:39.465 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 19:42:39.465 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:42:39.477 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:42:39.477 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:42:39.480 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:42:40.370 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:42:40.386 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:42:40.386 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:42:40.387 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:42:40.388 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:42:41.100 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 19:42:41.100 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 19:42:41.101 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:42:41.653 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 19:42:41.654 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:42:41.671 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:42:41.672 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:42:41.699 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:42:42.506 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:42:42.518 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:42:42.518 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:42:42.519 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:42:42.519 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:42:42.519 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:42:42.520 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:42:43.440 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:42:43.455 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:42:43.455 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:42:43.456 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:42:43.457 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:42:43.457 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:42:43.457 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:42:43.460 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 19:46:15.022 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:46:16.060 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:46:16.088 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:46:16.089 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 19:46:16.089 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 19:46:16.089 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:46:16.089 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:46:16.089 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 19:46:16.090 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:46:16.102 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:46:16.102 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:46:16.102 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:46:16.102 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 19:46:16.102 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 19:46:16.103 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 19:46:16.103 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 19:46:16.103 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 19:46:16.103 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 19:46:16.104 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 19:46:16.104 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 19:46:16.104 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 19:46:16.104 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 19:46:16.105 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 19:46:16.106 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:46:16.107 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:46:16.107 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 19:46:16.107 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:46:16.107 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:46:16.110 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:46:16.110 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 19:46:16.117 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:46:16.118 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-20 19:46:16.119 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-20 19:46:16.119 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-20 19:46:16.119 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:46:16.120 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:46:16.120 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:46:16.121 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-20 19:46:16.128 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-20 19:46:16.128 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-20 19:46:16.129 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-20 19:46:16.136 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:46:16.802 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:46:16.822 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:46:16.822 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 19:46:16.830 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 19:46:16.830 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:46:17.371 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 19:46:17.388 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:46:17.388 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:46:17.389 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:46:17.389 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 19:46:17.389 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:46:17.390 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:46:17.390 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:46:17.390 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 19:46:17.391 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:46:17.391 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:46:18.327 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 19:46:18.327 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:46:18.345 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:46:18.345 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:46:18.354 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:46:19.268 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:46:19.281 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:46:19.281 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 19:46:19.281 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 19:46:19.281 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:46:19.281 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:46:19.281 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 19:46:19.282 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:46:19.283 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:46:19.283 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:46:19.283 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:46:19.283 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 19:46:19.283 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 19:46:19.283 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 19:46:19.283 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 19:46:19.283 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 19:46:19.283 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 19:46:19.284 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 19:46:19.284 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 19:46:19.284 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 19:46:19.284 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 19:46:19.284 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 19:46:19.285 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:46:19.286 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:46:19.286 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 19:46:19.286 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:46:19.286 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:46:19.287 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:46:19.287 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 19:46:19.295 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:46:19.295 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-20 19:46:19.296 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-20 19:46:19.296 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-20 19:46:19.296 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:46:19.296 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:46:19.297 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:46:19.297 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-20 19:46:19.304 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-20 19:46:19.305 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-20 19:46:19.305 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-20 19:46:19.305 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:46:19.951 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:46:19.951 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 19:46:19.951 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:46:19.968 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:46:19.969 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:46:19.971 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:46:20.528 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:46:20.528 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 19:46:20.528 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:46:20.555 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:46:20.555 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:46:20.587 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:46:21.333 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:46:21.349 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:46:21.350 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:46:21.350 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:46:21.351 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:46:22.253 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 19:46:22.254 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 19:46:22.254 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:46:23.028 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 19:46:23.028 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:46:23.044 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:46:23.044 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:46:23.047 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:46:23.859 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:46:23.883 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:46:23.883 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:46:23.884 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:46:23.885 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:46:23.885 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:46:23.885 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:46:24.498 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:46:24.515 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:46:24.516 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:46:24.517 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:46:24.517 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:46:24.517 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:46:24.518 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:46:24.520 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 19:50:06.425 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:50:07.704 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:50:07.736 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:50:07.737 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[INFO ] 2020-11-20 19:50:07.737 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 19:50:07.737 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 19:50:07.737 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:50:07.737 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:50:07.738 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 19:50:07.738 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:50:07.757 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:50:07.758 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:50:07.758 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:50:07.758 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 19:50:07.758 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 19:50:07.759 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-20 19:50:07.759 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:50:07.761 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:50:07.761 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:50:07.761 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:50:07.769 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:50:08.422 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:50:08.447 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:50:08.447 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 19:50:08.455 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 19:50:08.456 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:50:09.071 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 19:50:09.103 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:50:09.104 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:50:09.112 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:50:09.112 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 19:50:09.112 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:50:09.114 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:50:09.114 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:50:09.114 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 19:50:09.115 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:50:09.116 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:50:10.427 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 19:50:10.428 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:50:10.446 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:50:10.446 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:50:10.461 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:50:11.081 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:50:11.099 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:50:11.099 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 19:50:11.099 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 19:50:11.099 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:50:11.100 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:50:11.100 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 19:50:11.100 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:50:11.101 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:50:11.101 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:50:11.101 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:50:11.102 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 19:50:11.102 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 19:50:11.102 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 19:50:11.102 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 19:50:11.102 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 19:50:11.102 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 19:50:11.102 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 19:50:11.103 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 19:50:11.103 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 19:50:11.103 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 19:50:11.104 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 19:50:11.105 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:50:11.106 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:50:11.106 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 19:50:11.106 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:50:11.107 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:50:11.108 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:50:11.108 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 19:50:11.116 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:50:11.116 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-20 19:50:11.116 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-20 19:50:11.117 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-20 19:50:11.118 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:50:11.119 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:50:11.120 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:50:11.120 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-20 19:50:11.128 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-20 19:50:11.129 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-20 19:50:11.129 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-20 19:50:11.130 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:50:11.934 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:50:11.934 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 19:50:11.934 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:50:11.953 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:50:11.953 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:50:11.957 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:50:12.621 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:50:12.621 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 19:50:12.621 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:50:12.637 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:50:12.637 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:50:12.660 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:50:13.681 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:50:13.696 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:50:13.696 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:50:13.700 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:50:13.700 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:50:14.627 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 19:50:14.627 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 19:50:14.628 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:50:15.308 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 19:50:15.308 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:50:15.323 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:50:15.323 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:50:15.326 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:50:16.123 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:50:16.140 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:50:16.141 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:50:16.142 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:50:16.142 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:50:16.143 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:50:16.143 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:50:17.127 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:50:17.140 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:50:17.140 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:50:17.141 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:50:17.141 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:50:17.142 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:50:17.142 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:50:17.144 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 19:51:46.880 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:51:48.147 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:51:48.172 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:51:48.172 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[INFO ] 2020-11-20 19:51:48.173 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 19:51:48.173 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 19:51:48.173 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:51:48.173 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:51:48.173 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 19:51:48.174 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:51:48.186 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:51:48.186 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:51:48.186 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:51:48.186 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 19:51:48.186 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 19:51:48.187 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[INFO ] 2020-11-20 19:51:48.187 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:51:48.188 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:51:48.188 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:51:48.189 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:51:48.194 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:51:49.137 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:51:49.157 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:51:49.157 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 19:51:49.170 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 19:51:49.170 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:51:49.939 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 19:51:49.956 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:51:49.956 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:51:49.957 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:51:49.957 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 19:51:49.957 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:51:49.958 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:51:49.958 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:51:49.958 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 19:51:49.959 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:51:49.960 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:51:51.132 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 19:51:51.132 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:51:51.147 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:51:51.147 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:51:51.159 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:51:51.888 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:51:51.905 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:51:51.905 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 19:51:51.905 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 19:51:51.906 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:51:51.906 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:51:51.906 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 19:51:51.906 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:51:51.907 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:51:51.907 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:51:51.907 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:51:51.908 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 19:51:51.908 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 19:51:51.908 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 19:51:51.908 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 19:51:51.908 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 19:51:51.909 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 19:51:51.909 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 19:51:51.909 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 19:51:51.909 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 19:51:51.909 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 19:51:51.911 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 19:51:51.911 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:51:51.912 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:51:51.912 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 19:51:51.912 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:51:51.913 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:51:51.914 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:51:51.915 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 19:51:51.922 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:51:51.922 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-20 19:51:51.923 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-20 19:51:51.923 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-20 19:51:51.923 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:51:51.924 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:51:51.924 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:51:51.924 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-20 19:51:51.931 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-20 19:51:51.932 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-20 19:51:51.932 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-20 19:51:51.932 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:51:52.650 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:51:52.650 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 19:51:52.650 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:51:52.677 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:51:52.678 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:51:52.681 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:51:53.246 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:51:53.246 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 19:51:53.246 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:51:53.261 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:51:53.261 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:51:53.263 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:51:54.134 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:51:54.151 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:51:54.151 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:51:54.152 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:51:54.153 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:51:55.162 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 19:51:55.162 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 19:51:55.162 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:51:55.825 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 19:51:55.825 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:51:55.840 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:51:55.841 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:51:55.843 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:51:56.456 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:51:56.492 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:51:56.492 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:51:56.495 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:51:56.495 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:51:56.496 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:51:56.496 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:51:57.282 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:51:57.308 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:51:57.308 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:51:57.310 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:51:57.310 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:51:57.311 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:51:57.311 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:51:57.315 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 19:53:22.741 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:53:23.697 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:53:23.721 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:53:23.721 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 19:53:23.721 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 19:53:23.721 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:53:23.721 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:53:23.721 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 19:53:23.722 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:53:23.733 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:53:23.733 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:53:23.733 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:53:23.734 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 19:53:23.734 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 19:53:23.734 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 19:53:23.735 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 19:53:23.735 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 19:53:23.735 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 19:53:23.735 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 19:53:23.735 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 19:53:23.736 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 19:53:23.736 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 19:53:23.737 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 19:53:23.737 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:53:23.739 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:53:23.739 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 19:53:23.740 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:53:23.740 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:53:23.742 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:53:23.742 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 19:53:23.749 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:53:23.749 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-20 19:53:23.750 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-20 19:53:23.750 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-20 19:53:23.752 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:53:23.752 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:53:23.753 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:53:23.753 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-20 19:53:23.761 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-20 19:53:23.761 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-20 19:53:23.761 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-20 19:53:23.768 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:53:24.577 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:53:24.597 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:53:24.598 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 19:53:24.605 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 19:53:24.606 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:53:25.272 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 19:53:25.301 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:53:25.301 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:53:25.302 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:53:25.302 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 19:53:25.303 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:53:25.303 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:53:25.303 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:53:25.304 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 19:53:25.304 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:53:25.305 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:53:25.881 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 19:53:25.882 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:53:25.902 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:53:25.902 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:53:25.913 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:53:26.891 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:53:26.907 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:53:26.907 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 19:53:26.907 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 19:53:26.908 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:53:26.908 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 19:53:26.908 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 19:53:26.908 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 19:53:26.909 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:53:26.909 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 19:53:26.909 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 19:53:26.909 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 19:53:26.909 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 19:53:26.909 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 19:53:26.910 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 19:53:26.910 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 19:53:26.910 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 19:53:26.910 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 19:53:26.910 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 19:53:26.911 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 19:53:26.911 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 19:53:26.911 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 19:53:26.912 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:53:26.913 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:53:26.913 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 19:53:26.913 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:53:26.914 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:53:26.914 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:53:26.915 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 19:53:26.922 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 19:53:26.922 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-20 19:53:26.922 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-20 19:53:26.922 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-20 19:53:26.923 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 19:53:26.923 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 19:53:26.924 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:53:26.924 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-20 19:53:26.931 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-20 19:53:26.931 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-20 19:53:26.931 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-20 19:53:26.932 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:53:27.565 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:53:27.565 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 19:53:27.565 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:53:27.599 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:53:27.599 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:53:27.601 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:53:28.482 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:53:28.482 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 19:53:28.482 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:53:28.497 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:53:28.497 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:53:28.499 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:53:29.799 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:53:29.823 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:53:29.823 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 19:53:29.824 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:53:29.825 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:53:30.956 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 19:53:30.956 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 19:53:30.957 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:53:31.586 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 19:53:31.586 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 19:53:31.600 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:53:31.601 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[INFO ] 2020-11-20 19:53:31.602 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:53:32.450 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:53:32.464 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:53:32.464 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:53:32.465 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:53:32.466 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:53:32.466 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:53:32.467 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 19:53:33.019 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 19:53:33.035 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 19:53:33.036 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 19:53:33.037 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 19:53:33.038 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 19:53:33.039 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 19:53:33.040 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 19:53:33.044 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-20 20:06:42.106 [JavaFX Application Thread] MainAppFX - Set the location of the PropertiesFXML file.
[TRACE] 2020-11-20 20:06:42.469 [JavaFX Application Thread] PropertiesFXMLController - Created the bindings for the property layout.
[TRACE] 2020-11-20 20:06:42.469 [JavaFX Application Thread] MainAppFX - Initialized property layout.
[TRACE] 2020-11-20 20:07:24.361 [JavaFX Application Thread] PropertyManagement - Started setting the properties of the MailConfigBean.
[TRACE] 2020-11-20 20:07:24.362 [JavaFX Application Thread] PropertyManagement - Started trying to write properties to the file.
[TRACE] 2020-11-20 20:07:24.368 [JavaFX Application Thread] PropertiesFXMLController - Saved the properties.
[INFO ] 2020-11-20 20:07:24.390 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-20 20:07:29.519 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-20 20:07:29.523 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-20 20:07:29.538 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-20 20:07:29.538 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-20 20:07:29.555 [JavaFX Application Thread] RootFXMLController - Created the DAO.
[TRACE] 2020-11-20 20:07:29.741 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-20 20:07:29.742 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-20 20:07:29.742 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-20 20:07:29.743 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-20 20:07:29.743 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-20 20:07:29.743 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-20 20:07:30.528 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-20 20:07:30.528 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-20 20:07:30.546 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-20 20:07:30.546 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-20 20:07:30.547 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-20 20:07:30.568 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-20 20:07:30.568 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-20 20:07:30.569 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-20 20:07:30.569 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-20 20:07:30.569 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-20 20:07:30.570 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-20 20:07:30.570 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-20 20:07:30.570 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-20 20:07:30.570 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-20 20:07:30.570 [JavaFX Application Thread] TreeFXMLController - Inbox
[DEBUG] 2020-11-20 20:07:30.571 [JavaFX Application Thread] TreeFXMLController - Sent
[DEBUG] 2020-11-20 20:07:30.571 [JavaFX Application Thread] TreeFXMLController - Drafts
[TRACE] 2020-11-20 20:07:30.571 [JavaFX Application Thread] TreeFXMLController - Began displaying tree components.
[TRACE] 2020-11-20 20:07:30.572 [JavaFX Application Thread] TreeFXMLController - Added the event listener for replacing a value.
[TRACE] 2020-11-20 20:07:30.572 [JavaFX Application Thread] RootFXMLController - Displayed the tree.
[DEBUG] 2020-11-20 20:07:30.572 [JavaFX Application Thread] FakeDAO - Returning fake email list containing:
[DEBUG] 2020-11-20 20:07:30.572 [JavaFX Application Thread] FakeDAO - email 1
[DEBUG] 2020-11-20 20:07:30.572 [JavaFX Application Thread] FakeDAO - email 2
[DEBUG] 2020-11-20 20:07:30.573 [JavaFX Application Thread] FakeDAO - email 3
[TRACE] 2020-11-20 20:07:30.573 [JavaFX Application Thread] TableFXMLController - Displayed the table.
[TRACE] 2020-11-20 20:07:30.573 [JavaFX Application Thread] RootFXMLController - Displayed the table.
[DEBUG] 2020-11-20 20:07:30.573 [JavaFX Application Thread] MainAppFX - Survived looking for root fxml.
[DEBUG] 2020-11-20 20:07:30.573 [JavaFX Application Thread] MainAppFX - >>>>>>false
[TRACE] 2020-11-20 20:07:31.191 [JavaFX Application Thread] MainAppFX - Showing the scene.
[TRACE] 2020-11-20 20:08:24.385 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:25.260 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:25.646 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:25.893 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:26.108 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:26.288 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:26.473 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:26.632 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:26.878 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:27.022 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:28.220 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:28.352 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:28.492 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:28.771 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:28.890 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:29.039 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:29.169 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:29.302 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:29.443 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:29.585 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:29.704 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:29.970 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:30.104 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:30.237 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:30.439 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:30.792 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:31.189 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:31.330 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:31.469 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:08:31.867 [JavaFX Application Thread] HTMLEditorFXMLController - User attempted to send an email.
[TRACE] 2020-11-20 20:17:12.854 [JavaFX Application Thread] RootFXMLController - Will open HTML file once we learn how to do that.
[INFO ] 2020-11-20 21:05:36.938 [JavaFX Application Thread] MainAppFX - Window closed.
[INFO ] 2020-11-20 21:55:31.830 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:55:33.047 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:55:33.072 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:55:33.072 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 21:55:33.072 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 21:55:33.072 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:55:33.073 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:55:33.073 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 21:55:33.073 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 21:55:33.083 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 21:55:33.083 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 21:55:33.083 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 21:55:33.083 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 21:55:33.083 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 21:55:33.084 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 21:55:33.084 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 21:55:33.084 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 21:55:33.084 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 21:55:33.084 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 21:55:33.084 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 21:55:33.085 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 21:55:33.085 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 21:55:33.085 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 21:55:33.086 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 21:55:33.087 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:55:33.087 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 21:55:33.087 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 21:55:33.088 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 21:55:33.089 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:55:33.089 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 21:55:33.097 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 21:55:33.098 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-20 21:55:33.099 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-20 21:55:33.099 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-20 21:55:33.100 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 21:55:33.100 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 21:55:33.101 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:55:33.101 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-20 21:55:33.108 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-20 21:55:33.109 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-20 21:55:33.109 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-20 21:55:33.110 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:55:33.711 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:55:33.731 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:55:33.731 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 21:55:33.750 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 21:55:33.751 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:55:34.350 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 21:55:34.368 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:55:34.368 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 21:55:34.369 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:55:34.370 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 21:55:34.370 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 21:55:34.371 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:55:34.371 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 21:55:34.371 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 21:55:34.372 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:55:34.372 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:55:35.308 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 21:55:35.309 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 21:55:35.328 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 21:55:35.328 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 21:55:35.329 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 21:55:35.336 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:55:35.337 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 21:55:35.337 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 21:55:35.344 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:55:35.345 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 21:55:35.354 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:55:36.297 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:55:36.312 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:55:36.312 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 21:55:36.312 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 21:55:36.312 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:55:36.312 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:55:36.312 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 21:55:36.312 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 21:55:36.313 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 21:55:36.313 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 21:55:36.313 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 21:55:36.313 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 21:55:36.313 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 21:55:36.313 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 21:55:36.313 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 21:55:36.313 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 21:55:36.313 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 21:55:36.313 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 21:55:36.314 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 21:55:36.314 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 21:55:36.314 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 21:55:36.314 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 21:55:36.314 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 21:55:36.315 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:55:36.315 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 21:55:36.315 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 21:55:36.315 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 21:55:36.319 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:55:36.320 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 21:55:36.335 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 21:55:36.335 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-20 21:55:36.336 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-20 21:55:36.336 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-20 21:55:36.336 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 21:55:36.336 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 21:55:36.337 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:55:36.337 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-20 21:55:36.345 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-20 21:55:36.345 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-20 21:55:36.345 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-20 21:55:36.345 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:55:37.013 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:55:37.014 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 21:55:37.014 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 21:55:37.033 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 21:55:37.033 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 21:55:37.034 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 21:55:37.041 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:55:37.042 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 21:55:37.042 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 21:55:37.049 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:55:37.049 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 21:55:37.049 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 21:55:37.064 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:55:37.064 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 21:55:37.065 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 21:55:37.065 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:55:37.065 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:55:37.065 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 21:55:37.065 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 21:55:37.066 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 21:55:37.066 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 21:55:37.066 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 21:55:37.066 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 21:55:37.066 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 21:55:37.067 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 21:55:37.067 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 21:55:37.067 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 21:55:37.067 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 21:55:37.067 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 21:55:37.067 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 21:55:37.067 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 21:55:37.067 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 21:55:37.068 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 21:55:37.068 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 21:55:37.069 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:55:37.073 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:55:37.542 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:55:37.542 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 21:55:37.542 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 21:55:37.555 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 21:55:37.555 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 21:55:37.556 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 21:55:37.556 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:55:37.556 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 21:55:37.556 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 21:55:37.557 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:55:37.557 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 21:55:37.557 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 21:55:37.576 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:55:37.576 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 21:55:37.576 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 21:55:37.576 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:55:37.576 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:55:37.576 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 21:55:37.576 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 21:55:37.577 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 21:55:37.577 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 21:55:37.577 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 21:55:37.577 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 21:55:37.578 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 21:55:37.578 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 21:55:37.578 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 21:55:37.578 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 21:55:37.578 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 21:55:37.578 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 21:55:37.578 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 21:55:37.578 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 21:55:37.579 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 21:55:37.579 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 21:55:37.579 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 21:55:37.580 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:55:37.580 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:55:38.426 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:55:38.439 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:55:38.440 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 21:55:38.440 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:55:38.441 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:55:39.411 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 21:55:39.411 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 21:55:39.411 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:55:40.073 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 21:55:40.073 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 21:55:40.085 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 21:55:40.085 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 21:55:40.085 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 21:55:40.086 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:55:40.086 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 21:55:40.086 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 21:55:40.087 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:55:40.087 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 21:55:40.087 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:55:40.554 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:55:40.569 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:55:40.570 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 21:55:40.570 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:55:40.571 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 21:55:40.571 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:55:40.571 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:55:41.514 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:55:41.529 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:55:41.529 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 21:55:41.530 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:55:41.530 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 21:55:41.531 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:55:41.531 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 21:55:41.533 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-20 21:56:47.489 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:56:48.562 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:56:48.589 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:56:48.590 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 21:56:48.590 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 21:56:48.590 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:56:48.590 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:56:48.590 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 21:56:48.591 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 21:56:48.604 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 21:56:48.604 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 21:56:48.604 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 21:56:48.604 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 21:56:48.604 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 21:56:48.605 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 21:56:48.605 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 21:56:48.605 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 21:56:48.605 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 21:56:48.605 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 21:56:48.606 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 21:56:48.606 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 21:56:48.606 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 21:56:48.607 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 21:56:48.608 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 21:56:48.610 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:56:48.610 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 21:56:48.610 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 21:56:48.610 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 21:56:48.612 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:56:48.612 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 21:56:48.637 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 21:56:48.638 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-20 21:56:48.639 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-20 21:56:48.639 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-20 21:56:48.640 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 21:56:48.640 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 21:56:48.641 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:56:48.641 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-20 21:56:48.663 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-20 21:56:48.663 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-20 21:56:48.664 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-20 21:56:48.665 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:56:49.256 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:56:49.279 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:56:49.280 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-20 21:56:49.287 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-20 21:56:49.288 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:56:50.149 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-20 21:56:50.171 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:56:50.171 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 21:56:50.172 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:56:50.173 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-20 21:56:50.173 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 21:56:50.174 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:56:50.175 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 21:56:50.175 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-20 21:56:50.176 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:56:50.176 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:56:50.880 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 21:56:50.880 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 21:56:50.897 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 21:56:50.897 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 21:56:50.897 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 21:56:50.905 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:56:50.905 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 21:56:50.906 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 21:56:50.913 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:56:50.913 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 21:56:50.914 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:56:51.718 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:56:51.731 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:56:51.732 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 21:56:51.732 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 21:56:51.732 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:56:51.732 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:56:51.732 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 21:56:51.732 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 21:56:51.733 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 21:56:51.733 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 21:56:51.733 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 21:56:51.734 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 21:56:51.734 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 21:56:51.734 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 21:56:51.734 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 21:56:51.734 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 21:56:51.734 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 21:56:51.734 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 21:56:51.734 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 21:56:51.734 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 21:56:51.734 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 21:56:51.735 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 21:56:51.735 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 21:56:51.737 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:56:51.737 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-20 21:56:51.737 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 21:56:51.737 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 21:56:51.738 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:56:51.738 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-20 21:56:51.758 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 21:56:51.759 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-20 21:56:51.759 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-20 21:56:51.759 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-20 21:56:51.759 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-20 21:56:51.759 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-20 21:56:51.760 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:56:51.760 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-20 21:56:51.787 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-20 21:56:51.788 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-20 21:56:51.788 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-20 21:56:51.788 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:56:52.368 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:56:52.369 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 21:56:52.369 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 21:56:52.390 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 21:56:52.390 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 21:56:52.390 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 21:56:52.397 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:56:52.398 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 21:56:52.398 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 21:56:52.405 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:56:52.405 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 21:56:52.405 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 21:56:52.422 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:56:52.422 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 21:56:52.422 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 21:56:52.422 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:56:52.423 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:56:52.423 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 21:56:52.423 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 21:56:52.424 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 21:56:52.424 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 21:56:52.424 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 21:56:52.424 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 21:56:52.425 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 21:56:52.425 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 21:56:52.425 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 21:56:52.425 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 21:56:52.425 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 21:56:52.425 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 21:56:52.425 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 21:56:52.425 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 21:56:52.425 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 21:56:52.426 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 21:56:52.426 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 21:56:52.431 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:56:52.440 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:56:53.287 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:56:53.287 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-20 21:56:53.287 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 21:56:53.299 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 21:56:53.299 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 21:56:53.300 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 21:56:53.300 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:56:53.300 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 21:56:53.300 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 21:56:53.301 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:56:53.301 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 21:56:53.301 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-20 21:56:53.318 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:56:53.318 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-20 21:56:53.318 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-20 21:56:53.318 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:56:53.318 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-20 21:56:53.318 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-20 21:56:53.319 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-20 21:56:53.320 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-20 21:56:53.320 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-20 21:56:53.320 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-20 21:56:53.320 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-20 21:56:53.321 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-20 21:56:53.321 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-20 21:56:53.321 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-20 21:56:53.321 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-20 21:56:53.321 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-20 21:56:53.321 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-20 21:56:53.321 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-20 21:56:53.321 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-20 21:56:53.321 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-20 21:56:53.322 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-20 21:56:53.322 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 21:56:53.323 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:56:53.323 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:56:54.097 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:56:54.110 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:56:54.111 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-20 21:56:54.111 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:56:54.112 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:56:55.058 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-20 21:56:55.058 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-20 21:56:55.059 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:56:55.997 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-20 21:56:55.997 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-20 21:56:56.014 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-20 21:56:56.015 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-20 21:56:56.015 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-20 21:56:56.016 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:56:56.016 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-20 21:56:56.016 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-20 21:56:56.016 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:56:56.016 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-20 21:56:56.017 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:56:56.660 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:56:56.675 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:56:56.675 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 21:56:56.677 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:56:56.677 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 21:56:56.677 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:56:56.678 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-20 21:56:57.322 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-20 21:56:57.335 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-20 21:56:57.336 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-20 21:56:57.337 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-20 21:56:57.337 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-20 21:56:57.338 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-20 21:56:57.338 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-20 21:56:57.341 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-21 11:17:34.175 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 11:17:34.180 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 11:17:34.199 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 11:17:34.200 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 11:17:34.226 [JavaFX Application Thread] RootFXMLController - Created the DAO.
[TRACE] 2020-11-21 11:17:34.436 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 11:17:34.436 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 11:17:34.436 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 11:17:34.436 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 11:17:34.437 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 11:17:34.437 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 11:17:35.229 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 11:17:35.229 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 11:17:35.249 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 11:17:35.249 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 11:17:35.249 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 11:17:35.272 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 11:17:35.272 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 11:17:35.272 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 11:17:35.273 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 11:17:35.273 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 11:17:35.273 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 11:17:35.273 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 11:17:35.274 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 11:17:35.274 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 11:17:35.274 [JavaFX Application Thread] TreeFXMLController - Inbox
[DEBUG] 2020-11-21 11:17:35.275 [JavaFX Application Thread] TreeFXMLController - Sent
[DEBUG] 2020-11-21 11:17:35.275 [JavaFX Application Thread] TreeFXMLController - Drafts
[TRACE] 2020-11-21 11:17:35.275 [JavaFX Application Thread] TreeFXMLController - Began displaying tree components.
[TRACE] 2020-11-21 11:17:35.276 [JavaFX Application Thread] TreeFXMLController - Added the event listener for replacing a value.
[TRACE] 2020-11-21 11:17:35.276 [JavaFX Application Thread] RootFXMLController - Displayed the tree.
[DEBUG] 2020-11-21 11:17:35.276 [JavaFX Application Thread] FakeDAO - Returning fake email list containing:
[DEBUG] 2020-11-21 11:17:35.276 [JavaFX Application Thread] FakeDAO - email 1
[DEBUG] 2020-11-21 11:17:35.276 [JavaFX Application Thread] FakeDAO - email 2
[DEBUG] 2020-11-21 11:17:35.276 [JavaFX Application Thread] FakeDAO - email 3
[TRACE] 2020-11-21 11:17:35.277 [JavaFX Application Thread] TableFXMLController - Displayed the table.
[TRACE] 2020-11-21 11:17:35.277 [JavaFX Application Thread] RootFXMLController - Displayed the table.
[DEBUG] 2020-11-21 11:17:35.277 [JavaFX Application Thread] MainAppFX - Survived looking for root fxml.
[DEBUG] 2020-11-21 11:17:35.277 [JavaFX Application Thread] MainAppFX - >>>>>>false
[TRACE] 2020-11-21 11:17:35.905 [JavaFX Application Thread] MainAppFX - Showing the scene.
[TRACE] 2020-11-21 11:18:04.261 [JavaFX Application Thread] RootFXMLController - Will open HTML file once we learn how to do that.
[INFO ] 2020-11-21 11:21:25.304 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 11:21:29.594 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 11:21:29.598 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 11:21:29.609 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 11:21:29.610 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 11:21:29.620 [JavaFX Application Thread] RootFXMLController - Created the DAO.
[TRACE] 2020-11-21 11:21:29.799 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 11:21:29.800 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 11:21:29.801 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 11:21:29.801 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 11:21:29.801 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 11:21:29.802 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 11:21:30.611 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 11:21:30.612 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 11:21:30.628 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 11:21:30.628 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 11:21:30.629 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 11:21:30.645 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 11:21:30.645 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 11:21:30.645 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 11:21:30.646 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 11:21:30.646 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 11:21:30.646 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 11:21:30.646 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 11:21:30.647 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 11:21:30.647 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 11:21:30.647 [JavaFX Application Thread] TreeFXMLController - Inbox
[DEBUG] 2020-11-21 11:21:30.648 [JavaFX Application Thread] TreeFXMLController - Sent
[DEBUG] 2020-11-21 11:21:30.648 [JavaFX Application Thread] TreeFXMLController - Drafts
[TRACE] 2020-11-21 11:21:30.648 [JavaFX Application Thread] TreeFXMLController - Began displaying tree components.
[TRACE] 2020-11-21 11:21:30.648 [JavaFX Application Thread] TreeFXMLController - Added the event listener for replacing a value.
[TRACE] 2020-11-21 11:21:30.649 [JavaFX Application Thread] RootFXMLController - Displayed the tree.
[DEBUG] 2020-11-21 11:21:30.649 [JavaFX Application Thread] FakeDAO - Returning fake email list containing:
[DEBUG] 2020-11-21 11:21:30.649 [JavaFX Application Thread] FakeDAO - email 1
[DEBUG] 2020-11-21 11:21:30.649 [JavaFX Application Thread] FakeDAO - email 2
[DEBUG] 2020-11-21 11:21:30.649 [JavaFX Application Thread] FakeDAO - email 3
[TRACE] 2020-11-21 11:21:30.649 [JavaFX Application Thread] TableFXMLController - Displayed the table.
[TRACE] 2020-11-21 11:21:30.649 [JavaFX Application Thread] RootFXMLController - Displayed the table.
[DEBUG] 2020-11-21 11:21:30.650 [JavaFX Application Thread] MainAppFX - Survived looking for root fxml.
[DEBUG] 2020-11-21 11:21:30.650 [JavaFX Application Thread] MainAppFX - >>>>>>false
[TRACE] 2020-11-21 11:21:31.230 [JavaFX Application Thread] MainAppFX - Showing the scene.
[INFO ] 2020-11-21 11:21:38.407 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 11:21:59.439 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 11:21:59.443 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 11:21:59.457 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 11:21:59.458 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 11:21:59.474 [JavaFX Application Thread] RootFXMLController - Created the DAO.
[TRACE] 2020-11-21 11:21:59.691 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 11:21:59.691 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 11:21:59.692 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 11:21:59.692 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 11:21:59.693 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 11:21:59.693 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 11:22:00.460 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 11:22:00.460 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 11:22:00.479 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 11:22:00.479 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 11:22:00.479 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 11:22:00.503 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 11:22:00.504 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 11:22:00.504 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 11:22:00.504 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 11:22:00.504 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 11:22:00.505 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 11:22:00.505 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 11:22:00.505 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 11:22:00.505 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 11:22:00.506 [JavaFX Application Thread] TreeFXMLController - Inbox
[DEBUG] 2020-11-21 11:22:00.506 [JavaFX Application Thread] TreeFXMLController - Sent
[DEBUG] 2020-11-21 11:22:00.506 [JavaFX Application Thread] TreeFXMLController - Drafts
[TRACE] 2020-11-21 11:22:00.507 [JavaFX Application Thread] TreeFXMLController - Began displaying tree components.
[TRACE] 2020-11-21 11:22:00.507 [JavaFX Application Thread] TreeFXMLController - Added the event listener for replacing a value.
[TRACE] 2020-11-21 11:22:00.507 [JavaFX Application Thread] RootFXMLController - Displayed the tree.
[DEBUG] 2020-11-21 11:22:00.507 [JavaFX Application Thread] FakeDAO - Returning fake email list containing:
[DEBUG] 2020-11-21 11:22:00.508 [JavaFX Application Thread] FakeDAO - email 1
[DEBUG] 2020-11-21 11:22:00.508 [JavaFX Application Thread] FakeDAO - email 2
[DEBUG] 2020-11-21 11:22:00.508 [JavaFX Application Thread] FakeDAO - email 3
[TRACE] 2020-11-21 11:22:00.508 [JavaFX Application Thread] TableFXMLController - Displayed the table.
[TRACE] 2020-11-21 11:22:00.508 [JavaFX Application Thread] RootFXMLController - Displayed the table.
[DEBUG] 2020-11-21 11:22:00.508 [JavaFX Application Thread] MainAppFX - Survived looking for root fxml.
[DEBUG] 2020-11-21 11:22:00.509 [JavaFX Application Thread] MainAppFX - >>>>>>false
[TRACE] 2020-11-21 11:22:01.239 [JavaFX Application Thread] MainAppFX - Showing the scene.
[TRACE] 2020-11-21 11:22:54.853 [JavaFX Application Thread] RootFXMLController - User selected file.
[TRACE] 2020-11-21 11:22:57.846 [JavaFX Application Thread] RootFXMLController - Set the properties layout.
[TRACE] 2020-11-21 11:22:57.892 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 11:22:57.893 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[TRACE] 2020-11-21 11:22:57.893 [JavaFX Application Thread] PropertiesFXMLController - Created the bindings for the property layout.
[TRACE] 2020-11-21 11:22:57.944 [JavaFX Application Thread] RootFXMLController - Displaying the properties window.
[INFO ] 2020-11-21 11:29:00.812 [JavaFX Application Thread] MainAppFX - Window closed.
[INFO ] 2020-11-21 12:50:41.010 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:50:41.808 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:50:41.830 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:50:41.830 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-21 12:50:41.831 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-21 12:50:41.831 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:50:41.831 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:50:41.831 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-21 12:50:41.831 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-21 12:50:41.846 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-21 12:50:41.847 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-21 12:50:41.847 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-21 12:50:41.847 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-21 12:50:41.847 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-21 12:50:41.848 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-21 12:50:41.848 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-21 12:50:41.848 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-21 12:50:41.848 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-21 12:50:41.848 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-21 12:50:41.849 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-21 12:50:41.849 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-21 12:50:41.849 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-21 12:50:41.850 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-21 12:50:41.851 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-21 12:50:41.852 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:50:41.852 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-21 12:50:41.853 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-21 12:50:41.853 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-21 12:50:41.855 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:50:41.855 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-21 12:50:41.860 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-21 12:50:41.860 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-21 12:50:41.861 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-21 12:50:41.861 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-21 12:50:41.862 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-21 12:50:41.862 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-21 12:50:41.863 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:50:41.864 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-21 12:50:41.867 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-21 12:50:41.868 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-21 12:50:41.868 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-21 12:50:41.870 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:50:42.218 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:50:42.236 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:50:42.237 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-21 12:50:42.240 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-21 12:50:42.241 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:50:42.622 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-21 12:50:42.639 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:50:42.639 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-21 12:50:42.640 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:50:42.640 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-21 12:50:42.641 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-21 12:50:42.641 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:50:42.641 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-21 12:50:42.641 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-21 12:50:42.642 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:50:42.643 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:50:42.948 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-21 12:50:42.949 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-21 12:50:42.966 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-21 12:50:42.967 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-21 12:50:42.967 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-21 12:50:42.970 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:50:42.971 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-21 12:50:42.971 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-21 12:50:42.974 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:50:42.974 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-21 12:50:42.975 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:50:43.445 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:50:43.460 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:50:43.460 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-21 12:50:43.460 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-21 12:50:43.460 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:50:43.460 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:50:43.460 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-21 12:50:43.461 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-21 12:50:43.462 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-21 12:50:43.462 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-21 12:50:43.462 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-21 12:50:43.462 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-21 12:50:43.462 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-21 12:50:43.462 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-21 12:50:43.462 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-21 12:50:43.462 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-21 12:50:43.463 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-21 12:50:43.463 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-21 12:50:43.463 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-21 12:50:43.463 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-21 12:50:43.463 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-21 12:50:43.464 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-21 12:50:43.464 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-21 12:50:43.465 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:50:43.465 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-21 12:50:43.465 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-21 12:50:43.465 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-21 12:50:43.466 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:50:43.466 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-21 12:50:43.470 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-21 12:50:43.470 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-21 12:50:43.470 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-21 12:50:43.470 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-21 12:50:43.471 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-21 12:50:43.471 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-21 12:50:43.472 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:50:43.472 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-21 12:50:43.476 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-21 12:50:43.476 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-21 12:50:43.476 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-21 12:50:43.477 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:50:43.800 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:50:43.800 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-21 12:50:43.800 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-21 12:50:43.817 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-21 12:50:43.817 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-21 12:50:43.817 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-21 12:50:43.821 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:50:43.821 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-21 12:50:43.821 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-21 12:50:43.824 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:50:43.824 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-21 12:50:43.824 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-21 12:50:43.837 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:50:43.837 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-21 12:50:43.837 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-21 12:50:43.838 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:50:43.838 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:50:43.838 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-21 12:50:43.838 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-21 12:50:43.839 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-21 12:50:43.839 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-21 12:50:43.839 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-21 12:50:43.839 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-21 12:50:43.839 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-21 12:50:43.839 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-21 12:50:43.839 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-21 12:50:43.839 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-21 12:50:43.839 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-21 12:50:43.840 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-21 12:50:43.840 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-21 12:50:43.840 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-21 12:50:43.840 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-21 12:50:43.840 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-21 12:50:43.841 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-21 12:50:43.841 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:50:43.850 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:50:44.161 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:50:44.161 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-21 12:50:44.161 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-21 12:50:44.174 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-21 12:50:44.175 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-21 12:50:44.175 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-21 12:50:44.175 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:50:44.176 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-21 12:50:44.176 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-21 12:50:44.176 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:50:44.176 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-21 12:50:44.176 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-21 12:50:44.195 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:50:44.196 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-21 12:50:44.196 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-21 12:50:44.196 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:50:44.196 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:50:44.196 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-21 12:50:44.197 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-21 12:50:44.198 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-21 12:50:44.198 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-21 12:50:44.198 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-21 12:50:44.199 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-21 12:50:44.199 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-21 12:50:44.199 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-21 12:50:44.199 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-21 12:50:44.199 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-21 12:50:44.199 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-21 12:50:44.199 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-21 12:50:44.199 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-21 12:50:44.200 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-21 12:50:44.200 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-21 12:50:44.200 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-21 12:50:44.200 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-21 12:50:44.201 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:50:44.202 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:50:44.649 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:50:44.666 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:50:44.667 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-21 12:50:44.669 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:50:44.669 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:50:45.018 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-21 12:50:45.018 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-21 12:50:45.019 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:50:45.454 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-21 12:50:45.455 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-21 12:50:45.475 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-21 12:50:45.475 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-21 12:50:45.476 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-21 12:50:45.477 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:50:45.477 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-21 12:50:45.477 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-21 12:50:45.478 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:50:45.478 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-21 12:50:45.478 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:50:45.856 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:50:45.874 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:50:45.874 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-21 12:50:45.875 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:50:45.876 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-21 12:50:45.876 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:50:45.877 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:50:46.200 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:50:46.219 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:50:46.219 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-21 12:50:46.221 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:50:46.221 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-21 12:50:46.221 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:50:46.222 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-21 12:50:46.224 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-21 12:50:48.567 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 12:50:48.571 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 12:50:48.584 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 12:50:48.584 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 12:50:48.602 [JavaFX Application Thread] RootFXMLController - Created the DAO.
[TRACE] 2020-11-21 12:50:48.832 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 12:50:48.832 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 12:50:48.833 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 12:50:48.833 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 12:50:48.833 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 12:50:48.833 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 12:50:49.620 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 12:50:49.621 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 12:50:49.638 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 12:50:49.638 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 12:50:49.638 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 12:50:49.654 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 12:50:49.655 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 12:50:49.655 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 12:50:49.655 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 12:50:49.655 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 12:50:49.656 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 12:50:49.656 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 12:50:49.656 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 12:50:49.656 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 12:50:49.657 [JavaFX Application Thread] TreeFXMLController - Inbox
[DEBUG] 2020-11-21 12:50:49.657 [JavaFX Application Thread] TreeFXMLController - Sent
[DEBUG] 2020-11-21 12:50:49.657 [JavaFX Application Thread] TreeFXMLController - Drafts
[TRACE] 2020-11-21 12:50:49.658 [JavaFX Application Thread] TreeFXMLController - Began displaying tree components.
[TRACE] 2020-11-21 12:50:49.658 [JavaFX Application Thread] TreeFXMLController - Added the event listener for replacing a value.
[TRACE] 2020-11-21 12:50:49.658 [JavaFX Application Thread] RootFXMLController - Displayed the tree.
[DEBUG] 2020-11-21 12:50:49.659 [JavaFX Application Thread] FakeDAO - Returning fake email list containing:
[DEBUG] 2020-11-21 12:50:49.659 [JavaFX Application Thread] FakeDAO - email 1
[DEBUG] 2020-11-21 12:50:49.659 [JavaFX Application Thread] FakeDAO - email 2
[DEBUG] 2020-11-21 12:50:49.659 [JavaFX Application Thread] FakeDAO - email 3
[TRACE] 2020-11-21 12:50:49.659 [JavaFX Application Thread] TableFXMLController - Displayed the table.
[TRACE] 2020-11-21 12:50:49.659 [JavaFX Application Thread] RootFXMLController - Displayed the table.
[DEBUG] 2020-11-21 12:50:49.660 [JavaFX Application Thread] MainAppFX - Survived looking for root fxml.
[DEBUG] 2020-11-21 12:50:49.660 [JavaFX Application Thread] MainAppFX - >>>>>>false
[TRACE] 2020-11-21 12:50:50.267 [JavaFX Application Thread] MainAppFX - Showing the scene.
[INFO ] 2020-11-21 12:54:21.020 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 12:54:21.312 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 12:54:21.316 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 12:54:21.328 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 12:54:21.329 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 12:54:21.341 [JavaFX Application Thread] RootFXMLController - Created the DAO.
[TRACE] 2020-11-21 12:54:21.514 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 12:54:21.515 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 12:54:21.515 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 12:54:21.515 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 12:54:21.515 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 12:54:21.515 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 12:54:22.263 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 12:54:22.263 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 12:54:22.289 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 12:54:22.290 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 12:54:22.290 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 12:54:22.312 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 12:54:22.312 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 12:54:22.312 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 12:54:22.313 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 12:54:22.313 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 12:54:22.313 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 12:54:22.314 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 12:54:22.314 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 12:54:22.314 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 12:54:22.315 [JavaFX Application Thread] TreeFXMLController - Inbox
[DEBUG] 2020-11-21 12:54:22.315 [JavaFX Application Thread] TreeFXMLController - Sent
[DEBUG] 2020-11-21 12:54:22.316 [JavaFX Application Thread] TreeFXMLController - Drafts
[TRACE] 2020-11-21 12:54:22.316 [JavaFX Application Thread] TreeFXMLController - Began displaying tree components.
[TRACE] 2020-11-21 12:54:22.317 [JavaFX Application Thread] TreeFXMLController - Added the event listener for replacing a value.
[TRACE] 2020-11-21 12:54:22.318 [JavaFX Application Thread] RootFXMLController - Displayed the tree.
[DEBUG] 2020-11-21 12:54:22.318 [JavaFX Application Thread] FakeDAO - Returning fake email list containing:
[DEBUG] 2020-11-21 12:54:22.318 [JavaFX Application Thread] FakeDAO - email 1
[DEBUG] 2020-11-21 12:54:22.319 [JavaFX Application Thread] FakeDAO - email 2
[DEBUG] 2020-11-21 12:54:22.319 [JavaFX Application Thread] FakeDAO - email 3
[TRACE] 2020-11-21 12:54:22.319 [JavaFX Application Thread] TableFXMLController - Displayed the table.
[TRACE] 2020-11-21 12:54:22.319 [JavaFX Application Thread] RootFXMLController - Displayed the table.
[DEBUG] 2020-11-21 12:54:22.319 [JavaFX Application Thread] MainAppFX - Survived looking for root fxml.
[DEBUG] 2020-11-21 12:54:22.320 [JavaFX Application Thread] MainAppFX - >>>>>>false
[TRACE] 2020-11-21 12:54:23.020 [JavaFX Application Thread] MainAppFX - Showing the scene.
[INFO ] 2020-11-21 12:56:29.910 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 12:56:34.497 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 12:56:34.501 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 12:56:34.513 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 12:56:34.513 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 12:56:34.524 [JavaFX Application Thread] RootFXMLController - Created the DAO.
[TRACE] 2020-11-21 12:56:34.704 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 12:56:34.704 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 12:56:34.705 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 12:56:34.705 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 12:56:34.706 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 12:56:34.706 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 12:56:35.410 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 12:56:35.410 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 12:56:35.428 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 12:56:35.429 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 12:56:35.429 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 12:56:35.442 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 12:56:35.443 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 12:56:35.443 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 12:56:35.443 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 12:56:35.443 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 12:56:35.443 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 12:56:35.444 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 12:56:35.444 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 12:56:35.444 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 12:56:35.445 [JavaFX Application Thread] TreeFXMLController - Inbox
[DEBUG] 2020-11-21 12:56:35.445 [JavaFX Application Thread] TreeFXMLController - Sent
[DEBUG] 2020-11-21 12:56:35.445 [JavaFX Application Thread] TreeFXMLController - Drafts
[TRACE] 2020-11-21 12:56:35.445 [JavaFX Application Thread] TreeFXMLController - Began displaying tree components.
[TRACE] 2020-11-21 12:56:35.446 [JavaFX Application Thread] TreeFXMLController - Added the event listener for replacing a value.
[TRACE] 2020-11-21 12:56:35.446 [JavaFX Application Thread] RootFXMLController - Displayed the tree.
[DEBUG] 2020-11-21 12:56:35.446 [JavaFX Application Thread] FakeDAO - Returning fake email list containing:
[DEBUG] 2020-11-21 12:56:35.447 [JavaFX Application Thread] FakeDAO - email 1
[DEBUG] 2020-11-21 12:56:35.447 [JavaFX Application Thread] FakeDAO - email 2
[DEBUG] 2020-11-21 12:56:35.447 [JavaFX Application Thread] FakeDAO - email 3
[TRACE] 2020-11-21 12:56:35.447 [JavaFX Application Thread] TableFXMLController - Displayed the table.
[TRACE] 2020-11-21 12:56:35.447 [JavaFX Application Thread] RootFXMLController - Displayed the table.
[DEBUG] 2020-11-21 12:56:35.447 [JavaFX Application Thread] MainAppFX - Survived looking for root fxml.
[DEBUG] 2020-11-21 12:56:35.447 [JavaFX Application Thread] MainAppFX - >>>>>>false
[TRACE] 2020-11-21 12:56:36.050 [JavaFX Application Thread] MainAppFX - Showing the scene.
[INFO ] 2020-11-21 12:58:42.283 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 12:58:46.805 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 12:58:46.809 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 12:58:46.821 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 12:58:46.822 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 12:58:46.832 [JavaFX Application Thread] RootFXMLController - Created the DAO.
[TRACE] 2020-11-21 12:58:47.018 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 12:58:47.018 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 12:58:47.019 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 12:58:47.019 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 12:58:47.019 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 12:58:47.020 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 12:58:47.735 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 12:58:47.735 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 12:58:47.760 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 12:58:47.761 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 12:58:47.761 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 12:58:47.775 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 12:58:47.776 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 12:58:47.776 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 12:58:47.776 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 12:58:47.777 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 12:58:47.777 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 12:58:47.777 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 12:58:47.777 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 12:58:47.777 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 12:58:47.777 [JavaFX Application Thread] TreeFXMLController - Inbox
[DEBUG] 2020-11-21 12:58:47.778 [JavaFX Application Thread] TreeFXMLController - Sent
[DEBUG] 2020-11-21 12:58:47.778 [JavaFX Application Thread] TreeFXMLController - Drafts
[TRACE] 2020-11-21 12:58:47.778 [JavaFX Application Thread] TreeFXMLController - Began displaying tree components.
[TRACE] 2020-11-21 12:58:47.779 [JavaFX Application Thread] TreeFXMLController - Added the event listener for replacing a value.
[TRACE] 2020-11-21 12:58:47.779 [JavaFX Application Thread] RootFXMLController - Displayed the tree.
[DEBUG] 2020-11-21 12:58:47.779 [JavaFX Application Thread] FakeDAO - Returning fake email list containing:
[DEBUG] 2020-11-21 12:58:47.779 [JavaFX Application Thread] FakeDAO - email 1
[DEBUG] 2020-11-21 12:58:47.779 [JavaFX Application Thread] FakeDAO - email 2
[DEBUG] 2020-11-21 12:58:47.779 [JavaFX Application Thread] FakeDAO - email 3
[TRACE] 2020-11-21 12:58:47.780 [JavaFX Application Thread] TableFXMLController - Displayed the table.
[TRACE] 2020-11-21 12:58:47.780 [JavaFX Application Thread] RootFXMLController - Displayed the table.
[DEBUG] 2020-11-21 12:58:47.780 [JavaFX Application Thread] MainAppFX - Survived looking for root fxml.
[DEBUG] 2020-11-21 12:58:47.780 [JavaFX Application Thread] MainAppFX - >>>>>>false
[TRACE] 2020-11-21 12:58:48.426 [JavaFX Application Thread] MainAppFX - Showing the scene.
[INFO ] 2020-11-21 12:59:44.036 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:59:45.124 [main] TestDatabaseMethods - >>>>>>>>>> INSERT BAD EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:59:45.146 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:59:45.146 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-21 12:59:45.147 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-21 12:59:45.147 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:59:45.147 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:59:45.147 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-21 12:59:45.147 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-21 12:59:45.158 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-21 12:59:45.158 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-21 12:59:45.158 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-21 12:59:45.158 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-21 12:59:45.159 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-21 12:59:45.159 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-21 12:59:45.159 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-21 12:59:45.159 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-21 12:59:45.160 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-21 12:59:45.160 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-21 12:59:45.160 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-21 12:59:45.160 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-21 12:59:45.160 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-21 12:59:45.161 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-21 12:59:45.162 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-21 12:59:45.163 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:59:45.163 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-21 12:59:45.163 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-21 12:59:45.164 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-21 12:59:45.165 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:59:45.166 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-21 12:59:45.175 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-21 12:59:45.175 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-21 12:59:45.177 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-21 12:59:45.177 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-21 12:59:45.178 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-21 12:59:45.179 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-21 12:59:45.180 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:59:45.180 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-21 12:59:45.184 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-21 12:59:45.185 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-21 12:59:45.185 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-21 12:59:45.186 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:59:45.514 [main] TestDatabaseMethods - >>>>>>>>>> CREATE NEW FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:59:45.544 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:59:45.545 [main] DatabaseDAO - Parameters set for folder-creation query.
[TRACE] 2020-11-21 12:59:45.549 [main] DatabaseDAO - Query executed.
[INFO ] 2020-11-21 12:59:45.549 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:59:46.073 [main] TestDatabaseMethods - >>>>>>>>>> CHANGE FOLDER TEST>>>>>>>>>>>>>
[TRACE] 2020-11-21 12:59:46.100 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:59:46.101 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-21 12:59:46.102 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:59:46.102 [main] DatabaseDAO - Match found.
[INFO ] 2020-11-21 12:59:46.102 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-21 12:59:46.103 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:59:46.104 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-21 12:59:46.104 [main] DatabaseDAO - Finished setting parameters to move an email to a new folder.
[TRACE] 2020-11-21 12:59:46.105 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:59:46.106 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:59:46.445 [main] TestDatabaseMethods - >>>>>>>>>> DELETE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-21 12:59:46.445 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-21 12:59:46.462 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-21 12:59:46.462 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-21 12:59:46.462 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-21 12:59:46.466 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:59:46.466 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-21 12:59:46.466 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-21 12:59:46.470 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:59:46.470 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-21 12:59:46.471 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:59:46.916 [main] TestDatabaseMethods - >>>>>>>>>> INSERT NORMAL EMAIL TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:59:46.933 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:59:46.934 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-21 12:59:46.934 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-21 12:59:46.934 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:59:46.934 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:59:46.934 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-21 12:59:46.934 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-21 12:59:46.935 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-21 12:59:46.935 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-21 12:59:46.935 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-21 12:59:46.935 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-21 12:59:46.936 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-21 12:59:46.936 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-21 12:59:46.936 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-21 12:59:46.936 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-21 12:59:46.936 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-21 12:59:46.936 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-21 12:59:46.936 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-21 12:59:46.936 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-21 12:59:46.936 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-21 12:59:46.937 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-21 12:59:46.937 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-21 12:59:46.938 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:59:46.939 [main] DatabaseDAO - Found folderId
[DEBUG] 2020-11-21 12:59:46.939 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-21 12:59:46.939 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-21 12:59:46.940 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:59:46.940 [main] DatabaseDAO - Finished setting parameters to insert an email.
[TRACE] 2020-11-21 12:59:46.943 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-21 12:59:46.943 [main] DatabaseDAO - Attempting to get the generated keys.
[DEBUG] 2020-11-21 12:59:46.943 [main] DatabaseDAO - Got generated keys.
[DEBUG] 2020-11-21 12:59:46.943 [main] DatabaseDAO - Going through a result in email insertion.
[DEBUG] 2020-11-21 12:59:46.944 [main] DatabaseDAO - Beginning to find the addressId based on the email address
[INFO ] 2020-11-21 12:59:46.944 [main] DatabaseDAO - Finished setting parameters to get the addressId of an email address
[TRACE] 2020-11-21 12:59:46.944 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:59:46.944 [main] DatabaseDAO - Added parameters to insert-to-address-into-bridging-table query.
[TRACE] 2020-11-21 12:59:46.948 [main] DatabaseDAO - Added a 'To' address to the bridging table.
[TRACE] 2020-11-21 12:59:46.949 [main] DatabaseDAO - Added emails to bridging table.
[TRACE] 2020-11-21 12:59:46.949 [main] DatabaseDAO - Finished adding email to database.
[INFO ] 2020-11-21 12:59:46.949 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:59:47.248 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:59:47.248 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-21 12:59:47.248 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-21 12:59:47.267 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-21 12:59:47.268 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-21 12:59:47.268 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-21 12:59:47.271 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:59:47.271 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-21 12:59:47.271 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-21 12:59:47.274 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:59:47.274 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-21 12:59:47.274 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-21 12:59:47.292 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:59:47.292 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-21 12:59:47.292 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-21 12:59:47.292 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:59:47.292 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:59:47.292 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-21 12:59:47.292 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-21 12:59:47.293 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-21 12:59:47.293 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-21 12:59:47.293 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-21 12:59:47.293 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-21 12:59:47.293 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-21 12:59:47.294 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-21 12:59:47.294 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-21 12:59:47.294 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-21 12:59:47.294 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-21 12:59:47.294 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-21 12:59:47.294 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-21 12:59:47.294 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-21 12:59:47.294 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-21 12:59:47.294 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-21 12:59:47.295 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-21 12:59:47.296 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:59:47.304 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-21 12:59:47.351 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 12:59:47.357 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 12:59:47.373 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 12:59:47.374 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 12:59:47.386 [JavaFX Application Thread] RootFXMLController - Created the DAO.
[TRACE] 2020-11-21 12:59:47.620 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 12:59:47.620 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 12:59:47.621 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 12:59:47.621 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 12:59:47.621 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 12:59:47.621 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[WARN ] 2020-11-21 12:59:47.693 [main] TestDatabaseMethods - >>>>>>>>>> UPDATE FAKE DRAFT TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:59:47.693 [main] DatabaseDAO - Began updating draft email.
[INFO ] 2020-11-21 12:59:47.693 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-21 12:59:47.709 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-21 12:59:47.709 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-21 12:59:47.709 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-21 12:59:47.710 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:59:47.710 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-21 12:59:47.711 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-21 12:59:47.711 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:59:47.711 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-21 12:59:47.711 [main] DatabaseDAO - Deleted email.
[TRACE] 2020-11-21 12:59:47.731 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:59:47.731 [main] DatabaseDAO - Added a 'to' address to the HashSet.
[TRACE] 2020-11-21 12:59:47.731 [main] DatabaseDAO - Added all 'to' addresses to the HashSet.
[TRACE] 2020-11-21 12:59:47.731 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:59:47.731 [main] DatabaseDAO - Added all 'cc' addresses to the HashSet.
[TRACE] 2020-11-21 12:59:47.732 [main] DatabaseDAO - Combining recipient sets together.
[INFO ] 2020-11-21 12:59:47.732 [main] DatabaseDAO - Set parameters to find if a certain email address is inside of the database or not.
[TRACE] 2020-11-21 12:59:47.733 [main] DatabaseDAO - Executed query.
[DEBUG] 2020-11-21 12:59:47.733 [main] DatabaseDAO - Applying rs.next() to begin checking inside of the resultSet
[DEBUG] 2020-11-21 12:59:47.733 [main] DatabaseDAO - Checking if an email was inside of the resultset.
[INFO ] 2020-11-21 12:59:47.733 [main] DatabaseDAO - Email was found.
[DEBUG] 2020-11-21 12:59:47.733 [main] DatabaseDAO - Began looping through the email list.
[INFO ] 2020-11-21 12:59:47.733 [main] DatabaseDAO - bg02test@gmail.com was found in database, thus removed from the HashSet.
[TRACE] 2020-11-21 12:59:47.734 [main] DatabaseDAO - Done finding emails that aren't in the database.
[TRACE] 2020-11-21 12:59:47.734 [main] DatabaseDAO - Found all recipients not yet in the database.
[TRACE] 2020-11-21 12:59:47.734 [main] DatabaseDAO - Done adding new addresses to the database.
[TRACE] 2020-11-21 12:59:47.734 [main] DatabaseDAO - Added all forms of recipients to the addresses table.
[TRACE] 2020-11-21 12:59:47.734 [main] DatabaseDAO - Finished adding creating the HashSet of attachment beans.
[TRACE] 2020-11-21 12:59:47.734 [main] DatabaseDAO - Finished adding attachments to the attachment table.
[TRACE] 2020-11-21 12:59:47.734 [main] DatabaseDAO - Added all attachments to the attachment table.
[DEBUG] 2020-11-21 12:59:47.735 [main] DatabaseDAO - Added subject, message, htmlmessage to the preparedStatement
[INFO ] 2020-11-21 12:59:47.735 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-21 12:59:47.737 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:59:47.738 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:59:48.174 [main] TestDatabaseMethods - >>>>>>>>>> MOVE TO FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:59:48.189 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:59:48.189 [main] DatabaseDAO - Added parameters to folder-checking query.
[TRACE] 2020-11-21 12:59:48.190 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:59:48.191 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-21 12:59:48.441 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 12:59:48.441 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 12:59:48.466 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 12:59:48.466 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 12:59:48.466 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[WARN ] 2020-11-21 12:59:48.481 [main] TestDatabaseMethods - >>>>>>>>>> CREATE TOO LONG FOLDER TEST >>>>>>>>>>>>>
[ERROR] 2020-11-21 12:59:48.481 [main] DatabaseDAO - New folder name too long.
[INFO ] 2020-11-21 12:59:48.481 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-21 12:59:48.486 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 12:59:48.487 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 12:59:48.487 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 12:59:48.487 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 12:59:48.487 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 12:59:48.488 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 12:59:48.488 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 12:59:48.488 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 12:59:48.488 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 12:59:48.488 [JavaFX Application Thread] TreeFXMLController - Inbox
[DEBUG] 2020-11-21 12:59:48.489 [JavaFX Application Thread] TreeFXMLController - Sent
[DEBUG] 2020-11-21 12:59:48.489 [JavaFX Application Thread] TreeFXMLController - Drafts
[TRACE] 2020-11-21 12:59:48.489 [JavaFX Application Thread] TreeFXMLController - Began displaying tree components.
[TRACE] 2020-11-21 12:59:48.490 [JavaFX Application Thread] TreeFXMLController - Added the event listener for replacing a value.
[TRACE] 2020-11-21 12:59:48.490 [JavaFX Application Thread] RootFXMLController - Displayed the tree.
[DEBUG] 2020-11-21 12:59:48.490 [JavaFX Application Thread] FakeDAO - Returning fake email list containing:
[DEBUG] 2020-11-21 12:59:48.491 [JavaFX Application Thread] FakeDAO - email 1
[DEBUG] 2020-11-21 12:59:48.491 [JavaFX Application Thread] FakeDAO - email 2
[DEBUG] 2020-11-21 12:59:48.491 [JavaFX Application Thread] FakeDAO - email 3
[TRACE] 2020-11-21 12:59:48.491 [JavaFX Application Thread] TableFXMLController - Displayed the table.
[TRACE] 2020-11-21 12:59:48.491 [JavaFX Application Thread] RootFXMLController - Displayed the table.
[DEBUG] 2020-11-21 12:59:48.491 [JavaFX Application Thread] MainAppFX - Survived looking for root fxml.
[DEBUG] 2020-11-21 12:59:48.492 [JavaFX Application Thread] MainAppFX - >>>>>>false
[WARN ] 2020-11-21 12:59:48.974 [main] TestDatabaseMethods - >>>>>>>>>> DELETE FAKE EMAIL TEST >>>>>>>>>>>>>
[INFO ] 2020-11-21 12:59:48.975 [main] DatabaseDAO - Beginning email deletion
[TRACE] 2020-11-21 12:59:48.997 [main] DatabaseDAO - Connection created.
[TRACE] 2020-11-21 12:59:48.997 [main] DatabaseDAO - Deleted attachments.
[INFO ] 2020-11-21 12:59:48.997 [main] DatabaseDAO - Finished setting parameters to delete all email to addresses entries with specified emailId
[TRACE] 2020-11-21 12:59:48.998 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:59:48.998 [main] DatabaseDAO - Deleted emailToAddress entries.
[INFO ] 2020-11-21 12:59:48.998 [main] DatabaseDAO - Finished setting parameters to delete emails that match a certain emailId
[INFO ] 2020-11-21 12:59:48.999 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:59:48.999 [main] DatabaseDAO - Deleted email.
[INFO ] 2020-11-21 12:59:49.000 [main] TestDatabaseMethods - @Before seeding
[TRACE] 2020-11-21 12:59:49.180 [JavaFX Application Thread] MainAppFX - Showing the scene.
[WARN ] 2020-11-21 12:59:49.518 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FAKE FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:59:49.539 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:59:49.539 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-21 12:59:49.540 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:59:49.540 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-21 12:59:49.541 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:59:49.541 [main] TestDatabaseMethods - @Before seeding
[WARN ] 2020-11-21 12:59:49.840 [main] TestDatabaseMethods - >>>>>>>>>> FIND EMAIL IN FOLDER TEST >>>>>>>>>>>>>
[TRACE] 2020-11-21 12:59:49.853 [main] DatabaseDAO - Connection created.
[INFO ] 2020-11-21 12:59:49.854 [main] DatabaseDAO - Finished setting parameters to search for all emails in a specified folder.
[TRACE] 2020-11-21 12:59:49.854 [main] DatabaseDAO - Executed query.
[INFO ] 2020-11-21 12:59:49.855 [main] DatabaseDAO - Finished setting parameters to get a folderId based on its folder name.
[TRACE] 2020-11-21 12:59:49.855 [main] DatabaseDAO - Executed query.
[TRACE] 2020-11-21 12:59:49.855 [main] DatabaseDAO - Found folderId
[INFO ] 2020-11-21 12:59:49.858 [main] TestDatabaseMethods - @Before seeding
[INFO ] 2020-11-21 13:00:09.177 [JavaFX Application Thread] MainAppFX - Window closed.
[INFO ] 2020-11-21 13:14:34.148 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 13:14:55.601 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 13:14:55.606 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 13:14:55.618 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 13:14:55.619 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 13:14:55.628 [JavaFX Application Thread] RootFXMLController - Created the DAO.
[TRACE] 2020-11-21 13:14:55.800 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 13:14:55.800 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 13:14:55.800 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 13:14:55.800 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 13:14:55.801 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 13:14:55.801 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 13:14:56.520 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 13:14:56.520 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 13:14:56.537 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 13:14:56.537 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 13:14:56.537 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 13:14:56.550 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 13:14:56.550 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 13:14:56.551 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 13:14:56.551 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 13:14:56.551 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 13:14:56.551 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 13:14:56.551 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 13:14:56.551 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 13:14:56.552 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 13:14:56.552 [JavaFX Application Thread] TreeFXMLController - Inbox
[DEBUG] 2020-11-21 13:14:56.552 [JavaFX Application Thread] TreeFXMLController - Sent
[DEBUG] 2020-11-21 13:14:56.552 [JavaFX Application Thread] TreeFXMLController - Drafts
[TRACE] 2020-11-21 13:14:56.553 [JavaFX Application Thread] TreeFXMLController - Began displaying tree components.
[TRACE] 2020-11-21 13:14:56.553 [JavaFX Application Thread] TreeFXMLController - Added the event listener for replacing a value.
[TRACE] 2020-11-21 13:14:56.553 [JavaFX Application Thread] RootFXMLController - Displayed the tree.
[DEBUG] 2020-11-21 13:14:56.553 [JavaFX Application Thread] FakeDAO - Returning fake email list containing:
[DEBUG] 2020-11-21 13:14:56.554 [JavaFX Application Thread] FakeDAO - email 1
[DEBUG] 2020-11-21 13:14:56.554 [JavaFX Application Thread] FakeDAO - email 2
[DEBUG] 2020-11-21 13:14:56.554 [JavaFX Application Thread] FakeDAO - email 3
[TRACE] 2020-11-21 13:14:56.554 [JavaFX Application Thread] TableFXMLController - Displayed the table.
[TRACE] 2020-11-21 13:14:56.554 [JavaFX Application Thread] RootFXMLController - Displayed the table.
[DEBUG] 2020-11-21 13:14:56.554 [JavaFX Application Thread] MainAppFX - Survived looking for root fxml.
[DEBUG] 2020-11-21 13:14:56.554 [JavaFX Application Thread] MainAppFX - >>>>>>false
[TRACE] 2020-11-21 13:14:57.198 [JavaFX Application Thread] MainAppFX - Showing the scene.
[INFO ] 2020-11-21 13:18:50.782 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 13:18:54.969 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 13:18:54.973 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 13:18:54.984 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 13:18:54.985 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 13:18:54.994 [JavaFX Application Thread] RootFXMLController - Created the DAO.
[TRACE] 2020-11-21 13:18:55.165 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 13:18:55.166 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 13:18:55.166 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 13:18:55.166 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 13:18:55.167 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 13:18:55.167 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 13:18:55.868 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 13:18:55.868 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 13:18:55.885 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 13:18:55.885 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 13:18:55.886 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 13:18:55.900 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 13:18:55.901 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 13:18:55.901 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 13:18:55.901 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 13:18:55.901 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 13:18:55.901 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 13:18:55.901 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 13:18:55.901 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 13:18:55.902 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 13:18:55.902 [JavaFX Application Thread] TreeFXMLController - Inbox
[DEBUG] 2020-11-21 13:18:55.902 [JavaFX Application Thread] TreeFXMLController - Sent
[DEBUG] 2020-11-21 13:18:55.902 [JavaFX Application Thread] TreeFXMLController - Drafts
[TRACE] 2020-11-21 13:18:55.903 [JavaFX Application Thread] TreeFXMLController - Began displaying tree components.
[TRACE] 2020-11-21 13:18:55.903 [JavaFX Application Thread] TreeFXMLController - Added the event listener for replacing a value.
[TRACE] 2020-11-21 13:18:55.903 [JavaFX Application Thread] RootFXMLController - Displayed the tree.
[DEBUG] 2020-11-21 13:18:55.903 [JavaFX Application Thread] FakeDAO - Returning fake email list containing:
[DEBUG] 2020-11-21 13:18:55.903 [JavaFX Application Thread] FakeDAO - email 1
[DEBUG] 2020-11-21 13:18:55.904 [JavaFX Application Thread] FakeDAO - email 2
[DEBUG] 2020-11-21 13:18:55.904 [JavaFX Application Thread] FakeDAO - email 3
[TRACE] 2020-11-21 13:18:55.904 [JavaFX Application Thread] TableFXMLController - Displayed the table.
[TRACE] 2020-11-21 13:18:55.904 [JavaFX Application Thread] RootFXMLController - Displayed the table.
[DEBUG] 2020-11-21 13:18:55.904 [JavaFX Application Thread] MainAppFX - Survived looking for root fxml.
[DEBUG] 2020-11-21 13:18:55.904 [JavaFX Application Thread] MainAppFX - >>>>>>false
[TRACE] 2020-11-21 13:18:56.475 [JavaFX Application Thread] MainAppFX - Showing the scene.
[INFO ] 2020-11-21 14:48:36.417 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 15:36:12.186 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 15:36:12.191 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[INFO ] 2020-11-21 15:36:12.201 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 15:37:07.771 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 15:37:07.775 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 15:37:07.789 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 15:37:07.790 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 15:37:07.977 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 15:37:07.977 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 15:37:07.978 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 15:37:07.978 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 15:37:07.978 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 15:37:07.979 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 15:37:08.721 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:37:08.722 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:37:08.741 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 15:37:08.742 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 15:37:08.742 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 15:37:08.755 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 15:37:08.756 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 15:37:08.756 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 15:37:08.756 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 15:37:08.757 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 15:37:08.757 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 15:37:08.757 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 15:37:08.757 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 15:37:08.758 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[TRACE] 2020-11-21 15:37:08.810 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 15:37:09.003 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:103) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:60) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:117) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:97) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 15:37:09.016 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 15:37:09.051 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 15:39:31.987 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 15:39:31.991 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 15:39:32.005 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 15:39:32.005 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 15:39:32.196 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 15:39:32.196 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 15:39:32.197 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 15:39:32.197 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 15:39:32.197 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 15:39:32.198 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 15:39:32.941 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:39:32.942 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:39:32.962 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 15:39:32.962 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 15:39:32.962 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 15:39:32.980 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 15:39:32.980 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 15:39:32.980 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 15:39:32.980 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 15:39:32.980 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 15:39:32.981 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 15:39:32.981 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 15:39:32.981 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 15:39:32.982 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[TRACE] 2020-11-21 15:39:33.032 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 15:39:33.209 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:103) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:60) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:117) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:97) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 15:39:33.222 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 15:39:33.250 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 15:41:55.232 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 15:41:55.236 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 15:41:55.250 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 15:41:55.251 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 15:41:55.471 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 15:41:55.471 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 15:41:55.472 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 15:41:55.472 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 15:41:55.472 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 15:41:55.473 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 15:41:56.210 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:41:56.211 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:41:56.231 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 15:41:56.231 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 15:41:56.232 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 15:41:56.249 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 15:41:56.250 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 15:41:56.250 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 15:41:56.250 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 15:41:56.251 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 15:41:56.251 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 15:41:56.251 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 15:41:56.251 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 15:41:56.251 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[TRACE] 2020-11-21 15:41:56.252 [JavaFX Application Thread] TreeFXMLController - Attempted to display the folder tree.
[TRACE] 2020-11-21 15:41:56.305 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 15:41:56.512 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:103) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:60) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:118) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:97) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 15:41:56.528 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 15:41:56.571 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 15:45:17.365 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 15:45:17.370 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 15:45:17.387 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 15:45:17.388 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 15:45:17.597 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 15:45:17.597 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 15:45:17.597 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 15:45:17.597 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 15:45:17.598 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 15:45:17.598 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 15:45:18.347 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:45:18.348 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:45:18.366 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 15:45:18.366 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 15:45:18.366 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 15:45:18.383 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 15:45:18.383 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 15:45:18.383 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 15:45:18.384 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 15:45:18.384 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 15:45:18.384 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 15:45:18.384 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 15:45:18.385 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 15:45:18.385 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[TRACE] 2020-11-21 15:45:18.385 [JavaFX Application Thread] TreeFXMLController - Attempted to display the folder tree.
[TRACE] 2020-11-21 15:45:18.447 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 15:45:18.679 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:103) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:60) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:118) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:97) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 15:45:18.693 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 15:45:18.748 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 15:46:16.214 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 15:46:16.218 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 15:46:16.233 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 15:46:16.233 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 15:46:16.475 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 15:46:16.476 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 15:46:16.478 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 15:46:16.479 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 15:46:16.479 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 15:46:16.479 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 15:46:17.253 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:46:17.253 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:46:17.275 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 15:46:17.276 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 15:46:17.276 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 15:46:17.292 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 15:46:17.293 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 15:46:17.293 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 15:46:17.294 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 15:46:17.294 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 15:46:17.294 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 15:46:17.295 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 15:46:17.295 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 15:46:17.295 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[TRACE] 2020-11-21 15:46:17.295 [JavaFX Application Thread] TreeFXMLController - Attempted to display the folder tree.
[TRACE] 2020-11-21 15:46:17.351 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 15:46:17.545 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:103) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:60) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:118) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:97) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 15:46:17.557 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 15:46:17.601 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 15:47:04.237 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 15:47:04.243 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 15:47:04.260 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 15:47:04.261 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 15:47:04.481 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 15:47:04.481 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 15:47:04.482 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 15:47:04.482 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 15:47:04.482 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 15:47:04.482 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 15:47:05.261 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:47:05.261 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:47:05.280 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 15:47:05.281 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 15:47:05.281 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 15:47:05.297 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 15:47:05.297 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 15:47:05.297 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 15:47:05.298 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 15:47:05.298 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 15:47:05.298 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 15:47:05.298 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 15:47:05.298 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 15:47:05.298 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[TRACE] 2020-11-21 15:47:05.299 [JavaFX Application Thread] TreeFXMLController - Attempted to display the folder tree.
[TRACE] 2020-11-21 15:47:05.360 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 15:47:05.577 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:103) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:60) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:118) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:97) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 15:47:05.590 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 15:47:05.630 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 15:47:41.363 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 15:47:41.368 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 15:47:41.383 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 15:47:41.384 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 15:47:41.598 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 15:47:41.599 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 15:47:41.599 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 15:47:41.599 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 15:47:41.600 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 15:47:41.600 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 15:47:42.362 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:47:42.363 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:47:42.385 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 15:47:42.385 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 15:47:42.386 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 15:47:42.403 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 15:47:42.404 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 15:47:42.404 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 15:47:42.405 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 15:47:42.406 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 15:47:42.406 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 15:47:42.406 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 15:47:42.406 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 15:47:42.407 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 15:47:42.407 [JavaFX Application Thread] TreeFXMLController - Attempted to display the folder tree.
[TRACE] 2020-11-21 15:47:42.462 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 15:47:42.675 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:103) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:60) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:118) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:97) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 15:47:42.691 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 15:47:42.729 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 15:54:50.451 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 15:54:50.456 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 15:54:50.474 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 15:54:50.475 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 15:54:50.701 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 15:54:50.702 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 15:54:50.702 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 15:54:50.702 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 15:54:50.703 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 15:54:50.703 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 15:54:51.463 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:54:51.463 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:54:51.482 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 15:54:51.482 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 15:54:51.483 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 15:54:51.497 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 15:54:51.497 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 15:54:51.498 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 15:54:51.498 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 15:54:51.498 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 15:54:51.498 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 15:54:51.498 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 15:54:51.498 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 15:54:51.499 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 15:54:51.499 [JavaFX Application Thread] TreeFXMLController - Attempted to display the folder tree.
[TRACE] 2020-11-21 15:54:51.550 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 15:54:51.735 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:103) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:60) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:128) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:97) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 15:54:51.747 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 15:54:51.782 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 15:56:55.201 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 15:56:55.204 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 15:56:55.218 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 15:56:55.219 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 15:56:55.418 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 15:56:55.418 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 15:56:55.419 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 15:56:55.419 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 15:56:55.419 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 15:56:55.419 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 15:56:56.152 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:56:56.152 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 15:56:56.173 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 15:56:56.173 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 15:56:56.173 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 15:56:56.187 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 15:56:56.188 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 15:56:56.188 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 15:56:56.188 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 15:56:56.188 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 15:56:56.188 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 15:56:56.188 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 15:56:56.188 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 15:56:56.189 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 15:56:56.189 [JavaFX Application Thread] TreeFXMLController - Attempted to display the folder tree.
[TRACE] 2020-11-21 15:56:56.241 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 15:56:56.444 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:103) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:60) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:128) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:98) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 15:56:56.459 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 15:56:56.503 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 16:01:26.000 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 16:01:26.004 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 16:01:26.023 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 16:01:26.024 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 16:01:26.266 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 16:01:26.266 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 16:01:26.267 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 16:01:26.267 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 16:01:26.267 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 16:01:26.267 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 16:01:27.006 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 16:01:27.006 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 16:01:27.025 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 16:01:27.025 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 16:01:27.026 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 16:01:27.040 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 16:01:27.040 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 16:01:27.040 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 16:01:27.041 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 16:01:27.041 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 16:01:27.041 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 16:01:27.041 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 16:01:27.041 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 16:01:27.041 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 16:01:27.041 [JavaFX Application Thread] TreeFXMLController - Attempted to display the folder tree.
[TRACE] 2020-11-21 16:01:27.096 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 16:01:27.291 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:103) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:60) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:128) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:98) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 16:01:27.304 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 16:01:27.332 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 16:03:31.295 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 16:03:31.299 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 16:03:31.313 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 16:03:31.313 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 16:03:31.521 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 16:03:31.521 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 16:03:31.522 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 16:03:31.523 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 16:03:31.523 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 16:03:31.523 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 16:03:32.263 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 16:03:32.263 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 16:03:32.284 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 16:03:32.284 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 16:03:32.284 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 16:03:32.299 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 16:03:32.300 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 16:03:32.300 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 16:03:32.300 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 16:03:32.300 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 16:03:32.301 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 16:03:32.301 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 16:03:32.301 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 16:03:32.301 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 16:03:32.301 [JavaFX Application Thread] TreeFXMLController - Attempted to display the folder tree.
[TRACE] 2020-11-21 16:03:32.355 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 16:03:32.552 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:104) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:60) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:128) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:98) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 16:03:32.566 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 16:03:32.597 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 16:12:08.928 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 16:12:08.933 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 16:12:08.948 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 16:12:08.949 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 16:12:09.160 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 16:12:09.161 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 16:12:09.162 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 16:12:09.162 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 16:12:09.162 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 16:12:09.163 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 16:12:09.930 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 16:12:09.930 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 16:12:09.950 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 16:12:09.950 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 16:12:09.950 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 16:12:09.969 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 16:12:09.970 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 16:12:09.970 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 16:12:09.970 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 16:12:09.970 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 16:12:09.971 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 16:12:09.971 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 16:12:09.971 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 16:12:09.971 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 16:12:09.972 [JavaFX Application Thread] TreeFXMLController - Attempted to display the folder tree.
[TRACE] 2020-11-21 16:12:10.032 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 16:12:10.248 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:105) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:60) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:128) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:98) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 16:12:10.261 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 16:12:10.299 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 16:14:48.862 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 16:14:48.869 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 16:14:48.884 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 16:14:48.885 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 16:14:49.086 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 16:14:49.086 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 16:14:49.087 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 16:14:49.087 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 16:14:49.088 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 16:14:49.088 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 16:14:49.840 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 16:14:49.840 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 16:14:49.858 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 16:14:49.859 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 16:14:49.859 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 16:14:49.874 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 16:14:49.875 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 16:14:49.875 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 16:14:49.875 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 16:14:49.875 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 16:14:49.875 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 16:14:49.876 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 16:14:49.876 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 16:14:49.876 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 16:14:49.876 [JavaFX Application Thread] TreeFXMLController - Attempted to begin displaying the folder tree.
[TRACE] 2020-11-21 16:14:49.927 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 16:14:50.134 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:105) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:60) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:128) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:98) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 16:14:50.147 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 16:14:50.178 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 16:21:30.942 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 16:21:30.948 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 16:21:30.976 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 16:21:30.977 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[INFO ] 2020-11-21 16:21:30.978 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 16:21:37.945 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 16:21:37.950 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 16:21:37.967 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 16:21:37.967 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 16:21:38.165 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 16:21:38.165 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 16:21:38.166 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 16:21:38.167 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 16:21:38.167 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 16:21:38.167 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 16:21:38.917 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 16:21:38.917 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 16:21:38.935 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 16:21:38.935 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 16:21:38.936 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 16:21:38.948 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 16:21:38.949 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 16:21:38.949 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 16:21:38.949 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 16:21:38.949 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 16:21:38.949 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 16:21:38.949 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 16:21:38.950 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 16:21:38.950 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 16:21:38.950 [JavaFX Application Thread] TreeFXMLController - Attempted to begin displaying the folder tree.
[TRACE] 2020-11-21 16:21:39.002 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 16:21:39.192 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:106) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:61) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:128) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:98) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 16:21:39.205 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 16:21:39.233 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 16:23:19.185 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 16:23:19.190 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 16:23:19.204 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 16:23:19.206 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[INFO ] 2020-11-21 16:23:19.207 [JavaFX Application Thread] MainAppFX - Window closed.
[TRACE] 2020-11-21 16:55:37.931 [JavaFX Application Thread] PropertyManagement - Found the properties file.
[TRACE] 2020-11-21 16:55:37.936 [JavaFX Application Thread] PropertyManagement - Finished setting the properties into the MailConfigBean.
[DEBUG] 2020-11-21 16:55:37.955 [JavaFX Application Thread] MainAppFX - >>>>>>>>>Email Program
[TRACE] 2020-11-21 16:55:37.956 [JavaFX Application Thread] MainAppFX - Set the location of the RootFXML file.
[TRACE] 2020-11-21 16:55:38.207 [JavaFX Application Thread] TableFXMLController - Set up the process to generate table cells.
[TRACE] 2020-11-21 16:55:38.207 [JavaFX Application Thread] TableFXMLController - Adjusted the width of the columns
[TRACE] 2020-11-21 16:55:38.207 [JavaFX Application Thread] RootFXMLController - Loaded the table view.
[TRACE] 2020-11-21 16:55:38.207 [JavaFX Application Thread] TableFXMLController - Added the DAO to the table controller.
[TRACE] 2020-11-21 16:55:38.208 [JavaFX Application Thread] RootFXMLController - Added the table view to the table layout.
[TRACE] 2020-11-21 16:55:38.208 [JavaFX Application Thread] RootFXMLController - Initialized the table layout.
[TRACE] 2020-11-21 16:55:39.102 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusting the widths inside of the HTML Editor.
[TRACE] 2020-11-21 16:55:39.103 [JavaFX Application Thread] HTMLEditorFXMLController - Adjusted the widths inside of the HTML Editor.
[TRACE] 2020-11-21 16:55:39.122 [JavaFX Application Thread] RootFXMLController - Loaded the HTMLEditor view.
[TRACE] 2020-11-21 16:55:39.123 [JavaFX Application Thread] RootFXMLController - Added the HTMLEditor view to the HTMLEditor layout.
[TRACE] 2020-11-21 16:55:39.123 [JavaFX Application Thread] RootFXMLController - Initialized the HTMLEditor layout.
[TRACE] 2020-11-21 16:55:39.149 [JavaFX Application Thread] TreeFXMLController - Set the root tree component.
[TRACE] 2020-11-21 16:55:39.150 [JavaFX Application Thread] TreeFXMLController - Finished setting up the tree cell settings.
[TRACE] 2020-11-21 16:55:39.150 [JavaFX Application Thread] RootFXMLController - Loaded the tree view.
[DEBUG] 2020-11-21 16:55:39.150 [JavaFX Application Thread] RootFXMLController - is treeController null 2? false
[TRACE] 2020-11-21 16:55:39.150 [JavaFX Application Thread] TreeFXMLController - Added the DAO to the tree component.
[TRACE] 2020-11-21 16:55:39.151 [JavaFX Application Thread] RootFXMLController - Added the tree view to the tree layout.
[TRACE] 2020-11-21 16:55:39.151 [JavaFX Application Thread] RootFXMLController - Initialized the tree layout.
[TRACE] 2020-11-21 16:55:39.151 [JavaFX Application Thread] RootFXMLController - Added the table controller to the tree layout.
[DEBUG] 2020-11-21 16:55:39.151 [JavaFX Application Thread] RootFXMLController - is treeController null? false
[DEBUG] 2020-11-21 16:55:39.151 [JavaFX Application Thread] TreeFXMLController - Attempted to begin displaying the folder tree.
[TRACE] 2020-11-21 16:55:39.232 [JavaFX Application Thread] MainAppFX - Creating alert dialog.
[ERROR] 2020-11-21 16:55:39.474 [JavaFX Application Thread] MainAppFX - Unable to locate files.
javafx.fxml.LoadException: 
/C:/dev/420-517_Java/JAG/JAG_Work/target/classes/fxml/RootFXML.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2707) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2677) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2548) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2517) ~[javafx-fxml-16-ea+1-win.jar:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.initRootLayout(MainAppFX.java:106) ~[classes/:?]
	at ca.brandongartner.jag.gui_business.MainAppFX.start(MainAppFX.java:61) ~[classes/:?]
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?]
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx-graphics-16-ea+1-win.jar:?]
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174) ~[javafx-graphics-16-ea+1-win.jar:?]
	at java.lang.Thread.run(Thread.java:832) [?:?]
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
Caused by: java.lang.NullPointerException
	at ca.brandongartner.jag.controllers.TreeFXMLController.displayTree(TreeFXMLController.java:128) ~[classes/:?]
	at ca.brandongartner.jag.controllers.RootFXMLController.initialize(RootFXMLController.java:98) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76) ~[javafx-base-16-ea+1-win.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273) ~[javafx-base-16-ea+1-win.jar:?]
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83) ~[javafx-fxml-16-ea+1-win.jar:?]
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2673) ~[javafx-fxml-16-ea+1-win.jar:?]
	... 13 more
[DEBUG] 2020-11-21 16:55:39.491 [JavaFX Application Thread] MainAppFX - >>>>>>true
[INFO ] 2020-11-21 16:55:39.627 [JavaFX Application Thread] MainAppFX - Window closed.
